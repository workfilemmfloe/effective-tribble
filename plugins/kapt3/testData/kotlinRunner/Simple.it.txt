package test;

public enum EnumClass {
    /*public static final*/ BLACK /* = new BLACK() */,
    /*public static final*/ WHITE /* = new WHITE() */;

    EnumClass() {
    }
}

////////////////////

package test;

@java.lang.annotation.Retention(value = java.lang.annotation.RetentionPolicy.RUNTIME)
public abstract @interface MyAnnotation {
}

////////////////////

package error;

public final class NonExistentClass {
}

////////////////////

package test;

public final class Simple {

    @MyAnnotation()
    public final void myMethod() {
    }

    public final int heavyMethod() {
        return 0;
    }

    public Simple() {
        super();
    }
}

////////////////////

package test;

public enum EnumClass2 {
    /*public static final*/ WHITE /* = new WHITE(null) */,
    /*public static final*/ RED /* = new RED(null) */;
    private final java.lang.String blah = null;

    EnumClass2(@org.jetbrains.annotations.NotNull()
    java.lang.String blah) {
    }
}
