/*
 * Copyright 2010-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license
 * that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.parsing;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/tests-spec/testData/psi")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class ParsingTestSpecGenerated extends AbstractParsingTestSpec {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doParsingTest, TargetBackend.ANY, testDataFilePath);
    }

    public void testAllFilesPresentInPsi() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/tests-spec/testData/psi"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true, "helpers", "templates");
    }

    @TestMetadata("compiler/tests-spec/testData/psi/linked")
    @TestDataPath("$PROJECT_ROOT")
    @RunWith(JUnit3RunnerWithInners.class)
    public static class Linked extends AbstractParsingTestSpec {
        private void runTest(String testDataFilePath) throws Exception {
            KotlinTestUtils.runTest(this::doParsingTest, TargetBackend.ANY, testDataFilePath);
        }

        public void testAllFilesPresentInLinked() throws Exception {
            KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/tests-spec/testData/psi/linked"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
        }

        @TestMetadata("compiler/tests-spec/testData/psi/linked/constant-literals")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Constant_literals extends AbstractParsingTestSpec {
            private void runTest(String testDataFilePath) throws Exception {
                KotlinTestUtils.runTest(this::doParsingTest, TargetBackend.ANY, testDataFilePath);
            }

            public void testAllFilesPresentInConstant_literals() throws Exception {
                KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/tests-spec/testData/psi/linked/constant-literals"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
            }

            @TestMetadata("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals")
            @TestDataPath("$PROJECT_ROOT")
            @RunWith(JUnit3RunnerWithInners.class)
            public static class Boolean_literals extends AbstractParsingTestSpec {
                private void runTest(String testDataFilePath) throws Exception {
                    KotlinTestUtils.runTest(this::doParsingTest, TargetBackend.ANY, testDataFilePath);
                }

                public void testAllFilesPresentInBoolean_literals() throws Exception {
                    KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
                }

                @TestMetadata("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1")
                @TestDataPath("$PROJECT_ROOT")
                @RunWith(JUnit3RunnerWithInners.class)
                public static class P_1 extends AbstractParsingTestSpec {
                    private void runTest(String testDataFilePath) throws Exception {
                        KotlinTestUtils.runTest(this::doParsingTest, TargetBackend.ANY, testDataFilePath);
                    }

                    public void testAllFilesPresentInP_1() throws Exception {
                        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
                    }

                    @TestMetadata("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg")
                    @TestDataPath("$PROJECT_ROOT")
                    @RunWith(JUnit3RunnerWithInners.class)
                    public static class Neg extends AbstractParsingTestSpec {
                        private void runTest(String testDataFilePath) throws Exception {
                            KotlinTestUtils.runTest(this::doParsingTest, TargetBackend.ANY, testDataFilePath);
                        }

                        @TestMetadata("2.1.kt")
                        public void test2_1() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.1.kt");
                        }

                        @TestMetadata("2.10.kt")
                        public void test2_10() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.10.kt");
                        }

                        @TestMetadata("2.11.kt")
                        public void test2_11() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.11.kt");
                        }

                        @TestMetadata("2.12.kt")
                        public void test2_12() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.12.kt");
                        }

                        @TestMetadata("2.13.kt")
                        public void test2_13() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.13.kt");
                        }

                        @TestMetadata("2.14.kt")
                        public void test2_14() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.14.kt");
                        }

                        @TestMetadata("2.15.kt")
                        public void test2_15() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.15.kt");
                        }

                        @TestMetadata("2.16.kt")
                        public void test2_16() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.16.kt");
                        }

                        @TestMetadata("2.17.kt")
                        public void test2_17() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.17.kt");
                        }

                        @TestMetadata("2.18.kt")
                        public void test2_18() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.18.kt");
                        }

                        @TestMetadata("2.19.kt")
                        public void test2_19() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.19.kt");
                        }

                        @TestMetadata("2.2.kt")
                        public void test2_2() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.2.kt");
                        }

                        @TestMetadata("2.20.kt")
                        public void test2_20() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.20.kt");
                        }

                        @TestMetadata("2.21.kt")
                        public void test2_21() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.21.kt");
                        }

                        @TestMetadata("2.22.kt")
                        public void test2_22() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.22.kt");
                        }

                        @TestMetadata("2.23.kt")
                        public void test2_23() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.23.kt");
                        }

                        @TestMetadata("2.24.kt")
                        public void test2_24() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.24.kt");
                        }

                        @TestMetadata("2.25.kt")
                        public void test2_25() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.25.kt");
                        }

                        @TestMetadata("2.26.kt")
                        public void test2_26() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.26.kt");
                        }

                        @TestMetadata("2.3.kt")
                        public void test2_3() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.3.kt");
                        }

                        @TestMetadata("2.4.kt")
                        public void test2_4() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.4.kt");
                        }

                        @TestMetadata("2.5.kt")
                        public void test2_5() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.5.kt");
                        }

                        @TestMetadata("2.6.kt")
                        public void test2_6() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.6.kt");
                        }

                        @TestMetadata("2.7.kt")
                        public void test2_7() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.7.kt");
                        }

                        @TestMetadata("2.8.kt")
                        public void test2_8() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.8.kt");
                        }

                        @TestMetadata("2.9.kt")
                        public void test2_9() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg/2.9.kt");
                        }

                        public void testAllFilesPresentInNeg() throws Exception {
                            KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/neg"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
                        }
                    }

                    @TestMetadata("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos")
                    @TestDataPath("$PROJECT_ROOT")
                    @RunWith(JUnit3RunnerWithInners.class)
                    public static class Pos extends AbstractParsingTestSpec {
                        private void runTest(String testDataFilePath) throws Exception {
                            KotlinTestUtils.runTest(this::doParsingTest, TargetBackend.ANY, testDataFilePath);
                        }

                        @TestMetadata("2.1.kt")
                        public void test2_1() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.1.kt");
                        }

                        @TestMetadata("2.10.kt")
                        public void test2_10() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.10.kt");
                        }

                        @TestMetadata("2.11.kt")
                        public void test2_11() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.11.kt");
                        }

                        @TestMetadata("2.12.kt")
                        public void test2_12() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.12.kt");
                        }

                        @TestMetadata("2.13.kt")
                        public void test2_13() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.13.kt");
                        }

                        @TestMetadata("2.14.kt")
                        public void test2_14() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.14.kt");
                        }

                        @TestMetadata("2.15.kt")
                        public void test2_15() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.15.kt");
                        }

                        @TestMetadata("2.16.kt")
                        public void test2_16() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.16.kt");
                        }

                        @TestMetadata("2.17.kt")
                        public void test2_17() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.17.kt");
                        }

                        @TestMetadata("2.18.kt")
                        public void test2_18() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.18.kt");
                        }

                        @TestMetadata("2.19.kt")
                        public void test2_19() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.19.kt");
                        }

                        @TestMetadata("2.2.kt")
                        public void test2_2() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.2.kt");
                        }

                        @TestMetadata("2.20.kt")
                        public void test2_20() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.20.kt");
                        }

                        @TestMetadata("2.21.kt")
                        public void test2_21() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.21.kt");
                        }

                        @TestMetadata("2.22.kt")
                        public void test2_22() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.22.kt");
                        }

                        @TestMetadata("2.23.kt")
                        public void test2_23() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.23.kt");
                        }

                        @TestMetadata("2.24.kt")
                        public void test2_24() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.24.kt");
                        }

                        @TestMetadata("2.25.kt")
                        public void test2_25() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.25.kt");
                        }

                        @TestMetadata("2.26.kt")
                        public void test2_26() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.26.kt");
                        }

                        @TestMetadata("2.3.kt")
                        public void test2_3() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.3.kt");
                        }

                        @TestMetadata("2.4.kt")
                        public void test2_4() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.4.kt");
                        }

                        @TestMetadata("2.5.kt")
                        public void test2_5() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.5.kt");
                        }

                        @TestMetadata("2.6.kt")
                        public void test2_6() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.6.kt");
                        }

                        @TestMetadata("2.7.kt")
                        public void test2_7() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.7.kt");
                        }

                        @TestMetadata("2.8.kt")
                        public void test2_8() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.8.kt");
                        }

                        @TestMetadata("2.9.kt")
                        public void test2_9() throws Exception {
                            runTest("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos/2.9.kt");
                        }

                        public void testAllFilesPresentInPos() throws Exception {
                            KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("compiler/tests-spec/testData/psi/linked/constant-literals/boolean-literals/p-1/pos"), Pattern.compile("^(.+)\\.kt$"), TargetBackend.ANY, true);
                        }
                    }
                }
            }
        }
    }
}
