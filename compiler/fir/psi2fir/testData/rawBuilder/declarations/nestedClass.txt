FILE: nestedClass.kt
    public? abstract class Base : kotlin/Any {
        public? constructor(s: String): super<kotlin/Any>()

        public? final? val s: String = R|<local>/s|
            public? get(): String

    }
    public? final? class Outer : kotlin/Any {
        public? constructor(): super<kotlin/Any>()

        public? final? class Derived : Base {
            public? constructor(s: String): super<Base>(s#)

        }

        public? final? object Obj : Base {
            private constructor(): super<Base>(String())

        }

    }
