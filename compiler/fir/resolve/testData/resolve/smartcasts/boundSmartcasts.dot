digraph boundSmartcasts_kt {
  graph [splines=ortho nodesep=3]
  node [shape=box penwidth=2]
  edge [penwidth=2]

  subgraph cluster_0 {
    color=red
    0 [label="Enter function foo" style="filled" fillcolor=red];
    1 [label="Exit function foo" style="filled" fillcolor=red];
  }

  0 -> {1};

  subgraph cluster_1 {
    color=red
    2 [label="Enter function bar" style="filled" fillcolor=red];
    3 [label="Exit function bar" style="filled" fillcolor=red];
  }

  2 -> {3};

  subgraph cluster_2 {
    color=red
    4 [label="Enter function test_1" style="filled" fillcolor=red];
    subgraph cluster_3 {
      color=blue
      5 [label="Enter block"];
      6 [label="Access variable R|<local>/x|"];
      7 [label="Variable declaration: lval y: R|kotlin/Any|"];
      subgraph cluster_4 {
        color=blue
        8 [label="Enter when"];
        subgraph cluster_5 {
          color=blue
          9 [label="Enter when branch condition "];
          10 [label="Access variable R|<local>/x|"];
          11 [label="Type operator: x is A"];
          12 [label="Exit when branch condition"];
        }
        13 [label="Synthetic else branch"];
        14 [label="Enter when branch result"];
        subgraph cluster_6 {
          color=blue
          15 [label="Enter block"];
          16 [label="Access variable R|<local>/x|"];
          17 [label="Function call: R|<local>/x|.R|/A.foo|()"];
          18 [label="Access variable R|<local>/y|"];
          19 [label="Function call: R|<local>/y|.R|/A.foo|()"];
          20 [label="Exit block"];
        }
        21 [label="Exit when branch result"];
        22 [label="Exit when"];
      }
      23 [label="Exit block"];
    }
    24 [label="Exit function test_1" style="filled" fillcolor=red];
  }

  4 -> {5};
  5 -> {6};
  6 -> {7};
  7 -> {8};
  8 -> {9};
  9 -> {10};
  10 -> {11};
  11 -> {12};
  12 -> {14 13};
  13 -> {22};
  14 -> {15};
  15 -> {16};
  16 -> {17};
  17 -> {18};
  18 -> {19};
  19 -> {20};
  20 -> {21};
  21 -> {22};
  22 -> {23};
  23 -> {24};

  subgraph cluster_7 {
    color=red
    25 [label="Enter function test_2" style="filled" fillcolor=red];
    subgraph cluster_8 {
      color=blue
      26 [label="Enter block"];
      27 [label="Access variable R|<local>/x|"];
      28 [label="Variable declaration: lval y: R|kotlin/Any|"];
      subgraph cluster_9 {
        color=blue
        29 [label="Enter when"];
        subgraph cluster_10 {
          color=blue
          30 [label="Enter when branch condition "];
          31 [label="Access variable R|<local>/y|"];
          32 [label="Type operator: y is A"];
          33 [label="Exit when branch condition"];
        }
        34 [label="Synthetic else branch"];
        35 [label="Enter when branch result"];
        subgraph cluster_11 {
          color=blue
          36 [label="Enter block"];
          37 [label="Access variable R|<local>/x|"];
          38 [label="Function call: R|<local>/x|.R|/A.foo|()"];
          39 [label="Access variable R|<local>/y|"];
          40 [label="Function call: R|<local>/y|.R|/A.foo|()"];
          41 [label="Exit block"];
        }
        42 [label="Exit when branch result"];
        43 [label="Exit when"];
      }
      44 [label="Exit block"];
    }
    45 [label="Exit function test_2" style="filled" fillcolor=red];
  }

  25 -> {26};
  26 -> {27};
  27 -> {28};
  28 -> {29};
  29 -> {30};
  30 -> {31};
  31 -> {32};
  32 -> {33};
  33 -> {35 34};
  34 -> {43};
  35 -> {36};
  36 -> {37};
  37 -> {38};
  38 -> {39};
  39 -> {40};
  40 -> {41};
  41 -> {42};
  42 -> {43};
  43 -> {44};
  44 -> {45};

  subgraph cluster_12 {
    color=red
    46 [label="Enter function test_3" style="filled" fillcolor=red];
    subgraph cluster_13 {
      color=blue
      47 [label="Enter block"];
      48 [label="Access variable R|<local>/x|"];
      49 [label="Variable declaration: lvar z: R|kotlin/Any|"];
      subgraph cluster_14 {
        color=blue
        50 [label="Enter when"];
        subgraph cluster_15 {
          color=blue
          51 [label="Enter when branch condition "];
          52 [label="Access variable R|<local>/x|"];
          53 [label="Type operator: x is A"];
          54 [label="Exit when branch condition"];
        }
        55 [label="Synthetic else branch"];
        56 [label="Enter when branch result"];
        subgraph cluster_16 {
          color=blue
          57 [label="Enter block"];
          58 [label="Access variable R|<local>/z|"];
          59 [label="Function call: R|<local>/z|.R|/A.foo|()"];
          60 [label="Exit block"];
        }
        61 [label="Exit when branch result"];
        62 [label="Exit when"];
      }
      63 [label="Access variable R|<local>/y|"];
      64 [label="Assignmenet: R|<local>/z|"];
      subgraph cluster_17 {
        color=blue
        65 [label="Enter when"];
        subgraph cluster_18 {
          color=blue
          66 [label="Enter when branch condition "];
          67 [label="Access variable R|<local>/y|"];
          68 [label="Type operator: y is B"];
          69 [label="Exit when branch condition"];
        }
        70 [label="Synthetic else branch"];
        71 [label="Enter when branch result"];
        subgraph cluster_19 {
          color=blue
          72 [label="Enter block"];
          73 [label="Access variable R|<local>/z|"];
          74 [label="Function call: R|<local>/z|.<Unresolved name: bar>#()"];
          75 [label="Exit block"];
        }
        76 [label="Exit when branch result"];
        77 [label="Exit when"];
      }
      78 [label="Exit block"];
    }
    79 [label="Exit function test_3" style="filled" fillcolor=red];
  }

  46 -> {47};
  47 -> {48};
  48 -> {49};
  49 -> {50};
  50 -> {51};
  51 -> {52};
  52 -> {53};
  53 -> {54};
  54 -> {56 55};
  55 -> {62};
  56 -> {57};
  57 -> {58};
  58 -> {59};
  59 -> {60};
  60 -> {61};
  61 -> {62};
  62 -> {63};
  63 -> {64};
  64 -> {65};
  65 -> {66};
  66 -> {67};
  67 -> {68};
  68 -> {69};
  69 -> {71 70};
  70 -> {77};
  71 -> {72};
  72 -> {73};
  73 -> {74};
  74 -> {75};
  75 -> {76};
  76 -> {77};
  77 -> {78};
  78 -> {79};

  subgraph cluster_20 {
    color=red
    80 [label="Enter function test_4" style="filled" fillcolor=red];
    subgraph cluster_21 {
      color=blue
      81 [label="Enter block"];
      82 [label="Const: Int(1)"];
      83 [label="Variable declaration: lvar x: R|kotlin/Any|"];
      84 [label="Access variable R|<local>/x|"];
      85 [label="Type operator: x as Int"];
      86 [label="Access variable R|<local>/x|"];
      87 [label="Function call: R|<local>/x|.R|kotlin/Int.inc|()"];
      88 [label="Access variable R|<local>/y|"];
      89 [label="Assignmenet: R|<local>/x|"];
      90 [label="Access variable R|<local>/x|"];
      91 [label="Function call: R|<local>/x|.R|kotlin/Int.inc|()"];
      subgraph cluster_22 {
        color=blue
        92 [label="Enter when"];
        subgraph cluster_23 {
          color=blue
          93 [label="Enter when branch condition "];
          94 [label="Access variable R|<local>/y|"];
          95 [label="Type operator: y is A"];
          96 [label="Exit when branch condition"];
        }
        97 [label="Synthetic else branch"];
        98 [label="Enter when branch result"];
        subgraph cluster_24 {
          color=blue
          99 [label="Enter block"];
          100 [label="Access variable R|<local>/x|"];
          101 [label="Function call: R|<local>/x|.<Unresolved name: foo>#()"];
          102 [label="Access variable R|<local>/y|"];
          103 [label="Function call: R|<local>/y|.R|/A.foo|()"];
          104 [label="Exit block"];
        }
        105 [label="Exit when branch result"];
        106 [label="Exit when"];
      }
      107 [label="Exit block"];
    }
    108 [label="Exit function test_4" style="filled" fillcolor=red];
  }

  80 -> {81};
  81 -> {82};
  82 -> {83};
  83 -> {84};
  84 -> {85};
  85 -> {86};
  86 -> {87};
  87 -> {88};
  88 -> {89};
  89 -> {90};
  90 -> {91};
  91 -> {92};
  92 -> {93};
  93 -> {94};
  94 -> {95};
  95 -> {96};
  96 -> {98 97};
  97 -> {106};
  98 -> {99};
  99 -> {100};
  100 -> {101};
  101 -> {102};
  102 -> {103};
  103 -> {104};
  104 -> {105};
  105 -> {106};
  106 -> {107};
  107 -> {108};

}
