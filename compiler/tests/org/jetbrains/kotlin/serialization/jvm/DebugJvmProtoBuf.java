// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/serialization.jvm/src/jvm_descriptors.debug.proto

package org.jetbrains.kotlin.serialization.jvm;

public final class DebugJvmProtoBuf {
  private DebugJvmProtoBuf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.methodSignature);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.propertySignature);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.implClassName);
    registry.add(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.index);
  }
  public interface JvmTypeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
     */
    boolean hasPrimitiveType();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType getPrimitiveType();

    // optional int32 class_fq_name = 2;
    /**
     * <code>optional int32 class_fq_name = 2;</code>
     *
     * <pre>
     * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
     * </pre>
     */
    boolean hasClassFqName();
    /**
     * <code>optional int32 class_fq_name = 2;</code>
     *
     * <pre>
     * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
     * </pre>
     */
    int getClassFqName();

    // optional int32 array_dimension = 3 [default = 0];
    /**
     * <code>optional int32 array_dimension = 3 [default = 0];</code>
     */
    boolean hasArrayDimension();
    /**
     * <code>optional int32 array_dimension = 3 [default = 0];</code>
     */
    int getArrayDimension();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmType}
   *
   * <pre>
   * Either a primitive type, or a class FQ name should be present
   * </pre>
   */
  public static final class JvmType extends
      com.google.protobuf.GeneratedMessage
      implements JvmTypeOrBuilder {
    // Use JvmType.newBuilder() to construct.
    private JvmType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JvmType(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JvmType defaultInstance;
    public static JvmType getDefaultInstance() {
      return defaultInstance;
    }

    public JvmType getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JvmType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType value = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                primitiveType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              classFqName_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              arrayDimension_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder.class);
    }

    public static com.google.protobuf.Parser<JvmType> PARSER =
        new com.google.protobuf.AbstractParser<JvmType>() {
      public JvmType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JvmType(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JvmType> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType}
     */
    public enum PrimitiveType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>VOID = 0;</code>
       *
       * <pre>
       * These values correspond to ASM Type sorts
       * </pre>
       */
      VOID(0, 0),
      /**
       * <code>BOOLEAN = 1;</code>
       */
      BOOLEAN(1, 1),
      /**
       * <code>CHAR = 2;</code>
       */
      CHAR(2, 2),
      /**
       * <code>BYTE = 3;</code>
       */
      BYTE(3, 3),
      /**
       * <code>SHORT = 4;</code>
       */
      SHORT(4, 4),
      /**
       * <code>INT = 5;</code>
       */
      INT(5, 5),
      /**
       * <code>FLOAT = 6;</code>
       */
      FLOAT(6, 6),
      /**
       * <code>LONG = 7;</code>
       */
      LONG(7, 7),
      /**
       * <code>DOUBLE = 8;</code>
       */
      DOUBLE(8, 8),
      ;

      /**
       * <code>VOID = 0;</code>
       *
       * <pre>
       * These values correspond to ASM Type sorts
       * </pre>
       */
      public static final int VOID_VALUE = 0;
      /**
       * <code>BOOLEAN = 1;</code>
       */
      public static final int BOOLEAN_VALUE = 1;
      /**
       * <code>CHAR = 2;</code>
       */
      public static final int CHAR_VALUE = 2;
      /**
       * <code>BYTE = 3;</code>
       */
      public static final int BYTE_VALUE = 3;
      /**
       * <code>SHORT = 4;</code>
       */
      public static final int SHORT_VALUE = 4;
      /**
       * <code>INT = 5;</code>
       */
      public static final int INT_VALUE = 5;
      /**
       * <code>FLOAT = 6;</code>
       */
      public static final int FLOAT_VALUE = 6;
      /**
       * <code>LONG = 7;</code>
       */
      public static final int LONG_VALUE = 7;
      /**
       * <code>DOUBLE = 8;</code>
       */
      public static final int DOUBLE_VALUE = 8;


      public final int getNumber() { return value; }

      public static PrimitiveType valueOf(int value) {
        switch (value) {
          case 0: return VOID;
          case 1: return BOOLEAN;
          case 2: return CHAR;
          case 3: return BYTE;
          case 4: return SHORT;
          case 5: return INT;
          case 6: return FLOAT;
          case 7: return LONG;
          case 8: return DOUBLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PrimitiveType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PrimitiveType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PrimitiveType>() {
              public PrimitiveType findValueByNumber(int number) {
                return PrimitiveType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDescriptor().getEnumTypes().get(0);
      }

      private static final PrimitiveType[] VALUES = values();

      public static PrimitiveType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private PrimitiveType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType)
    }

    private int bitField0_;
    // optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;
    public static final int PRIMITIVE_TYPE_FIELD_NUMBER = 1;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType primitiveType_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
     */
    public boolean hasPrimitiveType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType getPrimitiveType() {
      return primitiveType_;
    }

    // optional int32 class_fq_name = 2;
    public static final int CLASS_FQ_NAME_FIELD_NUMBER = 2;
    private int classFqName_;
    /**
     * <code>optional int32 class_fq_name = 2;</code>
     *
     * <pre>
     * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
     * </pre>
     */
    public boolean hasClassFqName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 class_fq_name = 2;</code>
     *
     * <pre>
     * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
     * </pre>
     */
    public int getClassFqName() {
      return classFqName_;
    }

    // optional int32 array_dimension = 3 [default = 0];
    public static final int ARRAY_DIMENSION_FIELD_NUMBER = 3;
    private int arrayDimension_;
    /**
     * <code>optional int32 array_dimension = 3 [default = 0];</code>
     */
    public boolean hasArrayDimension() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 array_dimension = 3 [default = 0];</code>
     */
    public int getArrayDimension() {
      return arrayDimension_;
    }

    private void initFields() {
      primitiveType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType.VOID;
      classFqName_ = 0;
      arrayDimension_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, primitiveType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, classFqName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, arrayDimension_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, primitiveType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, classFqName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, arrayDimension_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmType}
     *
     * <pre>
     * Either a primitive type, or a class FQ name should be present
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        primitiveType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType.VOID;
        bitField0_ = (bitField0_ & ~0x00000001);
        classFqName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        arrayDimension_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.primitiveType_ = primitiveType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.classFqName_ = classFqName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.arrayDimension_ = arrayDimension_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance()) return this;
        if (other.hasPrimitiveType()) {
          setPrimitiveType(other.getPrimitiveType());
        }
        if (other.hasClassFqName()) {
          setClassFqName(other.getClassFqName());
        }
        if (other.hasArrayDimension()) {
          setArrayDimension(other.getArrayDimension());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType primitiveType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType.VOID;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
       */
      public boolean hasPrimitiveType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType getPrimitiveType() {
        return primitiveType_;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
       */
      public Builder setPrimitiveType(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        primitiveType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmType.PrimitiveType primitive_type = 1;</code>
       */
      public Builder clearPrimitiveType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        primitiveType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PrimitiveType.VOID;
        onChanged();
        return this;
      }

      // optional int32 class_fq_name = 2;
      private int classFqName_ ;
      /**
       * <code>optional int32 class_fq_name = 2;</code>
       *
       * <pre>
       * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
       * </pre>
       */
      public boolean hasClassFqName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 class_fq_name = 2;</code>
       *
       * <pre>
       * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
       * </pre>
       */
      public int getClassFqName() {
        return classFqName_;
      }
      /**
       * <code>optional int32 class_fq_name = 2;</code>
       *
       * <pre>
       * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
       * </pre>
       */
      public Builder setClassFqName(int value) {
        bitField0_ |= 0x00000002;
        classFqName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 class_fq_name = 2;</code>
       *
       * <pre>
       * id in QualifiedNameTable of a name in the following format: 'package.Outer$Nested'
       * </pre>
       */
      public Builder clearClassFqName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        classFqName_ = 0;
        onChanged();
        return this;
      }

      // optional int32 array_dimension = 3 [default = 0];
      private int arrayDimension_ ;
      /**
       * <code>optional int32 array_dimension = 3 [default = 0];</code>
       */
      public boolean hasArrayDimension() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 array_dimension = 3 [default = 0];</code>
       */
      public int getArrayDimension() {
        return arrayDimension_;
      }
      /**
       * <code>optional int32 array_dimension = 3 [default = 0];</code>
       */
      public Builder setArrayDimension(int value) {
        bitField0_ |= 0x00000004;
        arrayDimension_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 array_dimension = 3 [default = 0];</code>
       */
      public Builder clearArrayDimension() {
        bitField0_ = (bitField0_ & ~0x00000004);
        arrayDimension_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.JvmType)
    }

    static {
      defaultInstance = new JvmType(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.JvmType)
  }

  public interface JvmMethodSignatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 name = 1;
    /**
     * <code>required int32 name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required int32 name = 1;</code>
     */
    int getName();

    // required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
     */
    boolean hasReturnType();
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getReturnType();
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getReturnTypeOrBuilder();

    // repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType> 
        getParameterTypeList();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getParameterType(int index);
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    int getParameterTypeCount();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> 
        getParameterTypeOrBuilderList();
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getParameterTypeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature}
   */
  public static final class JvmMethodSignature extends
      com.google.protobuf.GeneratedMessage
      implements JvmMethodSignatureOrBuilder {
    // Use JvmMethodSignature.newBuilder() to construct.
    private JvmMethodSignature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JvmMethodSignature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JvmMethodSignature defaultInstance;
    public static JvmMethodSignature getDefaultInstance() {
      return defaultInstance;
    }

    public JvmMethodSignature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JvmMethodSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              name_ = input.readInt32();
              break;
            }
            case 18: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = returnType_.toBuilder();
              }
              returnType_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(returnType_);
                returnType_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                parameterType_ = new java.util.ArrayList<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType>();
                mutable_bitField0_ |= 0x00000004;
              }
              parameterType_.add(input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          parameterType_ = java.util.Collections.unmodifiableList(parameterType_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder.class);
    }

    public static com.google.protobuf.Parser<JvmMethodSignature> PARSER =
        new com.google.protobuf.AbstractParser<JvmMethodSignature>() {
      public JvmMethodSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JvmMethodSignature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JvmMethodSignature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private int name_;
    /**
     * <code>required int32 name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 name = 1;</code>
     */
    public int getName() {
      return name_;
    }

    // required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;
    public static final int RETURN_TYPE_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType returnType_;
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
     */
    public boolean hasReturnType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getReturnType() {
      return returnType_;
    }
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getReturnTypeOrBuilder() {
      return returnType_;
    }

    // repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;
    public static final int PARAMETER_TYPE_FIELD_NUMBER = 3;
    private java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType> parameterType_;
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType> getParameterTypeList() {
      return parameterType_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    public java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> 
        getParameterTypeOrBuilderList() {
      return parameterType_;
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    public int getParameterTypeCount() {
      return parameterType_.size();
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getParameterType(int index) {
      return parameterType_.get(index);
    }
    /**
     * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getParameterTypeOrBuilder(
        int index) {
      return parameterType_.get(index);
    }

    private void initFields() {
      name_ = 0;
      returnType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
      parameterType_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReturnType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, returnType_);
      }
      for (int i = 0; i < parameterType_.size(); i++) {
        output.writeMessage(3, parameterType_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, returnType_);
      }
      for (int i = 0; i < parameterType_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, parameterType_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getReturnTypeFieldBuilder();
          getParameterTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (returnTypeBuilder_ == null) {
          returnType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
        } else {
          returnTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (parameterTypeBuilder_ == null) {
          parameterType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          parameterTypeBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (returnTypeBuilder_ == null) {
          result.returnType_ = returnType_;
        } else {
          result.returnType_ = returnTypeBuilder_.build();
        }
        if (parameterTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            parameterType_ = java.util.Collections.unmodifiableList(parameterType_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.parameterType_ = parameterType_;
        } else {
          result.parameterType_ = parameterTypeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasReturnType()) {
          mergeReturnType(other.getReturnType());
        }
        if (parameterTypeBuilder_ == null) {
          if (!other.parameterType_.isEmpty()) {
            if (parameterType_.isEmpty()) {
              parameterType_ = other.parameterType_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureParameterTypeIsMutable();
              parameterType_.addAll(other.parameterType_);
            }
            onChanged();
          }
        } else {
          if (!other.parameterType_.isEmpty()) {
            if (parameterTypeBuilder_.isEmpty()) {
              parameterTypeBuilder_.dispose();
              parameterTypeBuilder_ = null;
              parameterType_ = other.parameterType_;
              bitField0_ = (bitField0_ & ~0x00000004);
              parameterTypeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParameterTypeFieldBuilder() : null;
            } else {
              parameterTypeBuilder_.addAllMessages(other.parameterType_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasReturnType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 name = 1;
      private int name_ ;
      /**
       * <code>required int32 name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 name = 1;</code>
       */
      public int getName() {
        return name_;
      }
      /**
       * <code>required int32 name = 1;</code>
       */
      public Builder setName(int value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      // required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType returnType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> returnTypeBuilder_;
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public boolean hasReturnType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getReturnType() {
        if (returnTypeBuilder_ == null) {
          return returnType_;
        } else {
          return returnTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public Builder setReturnType(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType value) {
        if (returnTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnType_ = value;
          onChanged();
        } else {
          returnTypeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public Builder setReturnType(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder builderForValue) {
        if (returnTypeBuilder_ == null) {
          returnType_ = builderForValue.build();
          onChanged();
        } else {
          returnTypeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public Builder mergeReturnType(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType value) {
        if (returnTypeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              returnType_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance()) {
            returnType_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.newBuilder(returnType_).mergeFrom(value).buildPartial();
          } else {
            returnType_ = value;
          }
          onChanged();
        } else {
          returnTypeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public Builder clearReturnType() {
        if (returnTypeBuilder_ == null) {
          returnType_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
          onChanged();
        } else {
          returnTypeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder getReturnTypeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getReturnTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getReturnTypeOrBuilder() {
        if (returnTypeBuilder_ != null) {
          return returnTypeBuilder_.getMessageOrBuilder();
        } else {
          return returnType_;
        }
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType return_type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> 
          getReturnTypeFieldBuilder() {
        if (returnTypeBuilder_ == null) {
          returnTypeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder>(
                  returnType_,
                  getParentForChildren(),
                  isClean());
          returnType_ = null;
        }
        return returnTypeBuilder_;
      }

      // repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;
      private java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType> parameterType_ =
        java.util.Collections.emptyList();
      private void ensureParameterTypeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          parameterType_ = new java.util.ArrayList<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType>(parameterType_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> parameterTypeBuilder_;

      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType> getParameterTypeList() {
        if (parameterTypeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameterType_);
        } else {
          return parameterTypeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public int getParameterTypeCount() {
        if (parameterTypeBuilder_ == null) {
          return parameterType_.size();
        } else {
          return parameterTypeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getParameterType(int index) {
        if (parameterTypeBuilder_ == null) {
          return parameterType_.get(index);
        } else {
          return parameterTypeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder setParameterType(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType value) {
        if (parameterTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterTypeIsMutable();
          parameterType_.set(index, value);
          onChanged();
        } else {
          parameterTypeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder setParameterType(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder builderForValue) {
        if (parameterTypeBuilder_ == null) {
          ensureParameterTypeIsMutable();
          parameterType_.set(index, builderForValue.build());
          onChanged();
        } else {
          parameterTypeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder addParameterType(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType value) {
        if (parameterTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterTypeIsMutable();
          parameterType_.add(value);
          onChanged();
        } else {
          parameterTypeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder addParameterType(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType value) {
        if (parameterTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParameterTypeIsMutable();
          parameterType_.add(index, value);
          onChanged();
        } else {
          parameterTypeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder addParameterType(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder builderForValue) {
        if (parameterTypeBuilder_ == null) {
          ensureParameterTypeIsMutable();
          parameterType_.add(builderForValue.build());
          onChanged();
        } else {
          parameterTypeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder addParameterType(
          int index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder builderForValue) {
        if (parameterTypeBuilder_ == null) {
          ensureParameterTypeIsMutable();
          parameterType_.add(index, builderForValue.build());
          onChanged();
        } else {
          parameterTypeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder addAllParameterType(
          java.lang.Iterable<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType> values) {
        if (parameterTypeBuilder_ == null) {
          ensureParameterTypeIsMutable();
          super.addAll(values, parameterType_);
          onChanged();
        } else {
          parameterTypeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder clearParameterType() {
        if (parameterTypeBuilder_ == null) {
          parameterType_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          parameterTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public Builder removeParameterType(int index) {
        if (parameterTypeBuilder_ == null) {
          ensureParameterTypeIsMutable();
          parameterType_.remove(index);
          onChanged();
        } else {
          parameterTypeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder getParameterTypeBuilder(
          int index) {
        return getParameterTypeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getParameterTypeOrBuilder(
          int index) {
        if (parameterTypeBuilder_ == null) {
          return parameterType_.get(index);  } else {
          return parameterTypeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public java.util.List<? extends org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> 
           getParameterTypeOrBuilderList() {
        if (parameterTypeBuilder_ != null) {
          return parameterTypeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameterType_);
        }
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder addParameterTypeBuilder() {
        return getParameterTypeFieldBuilder().addBuilder(
            org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder addParameterTypeBuilder(
          int index) {
        return getParameterTypeFieldBuilder().addBuilder(
            index, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance());
      }
      /**
       * <code>repeated .org.jetbrains.kotlin.serialization.jvm.JvmType parameter_type = 3;</code>
       */
      public java.util.List<org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder> 
           getParameterTypeBuilderList() {
        return getParameterTypeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> 
          getParameterTypeFieldBuilder() {
        if (parameterTypeBuilder_ == null) {
          parameterTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder>(
                  parameterType_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          parameterType_ = null;
        }
        return parameterTypeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature)
    }

    static {
      defaultInstance = new JvmMethodSignature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature)
  }

  public interface JvmFieldSignatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 name = 1;
    /**
     * <code>required int32 name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required int32 name = 1;</code>
     */
    int getName();

    // required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getType();
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getTypeOrBuilder();

    // optional bool is_static_in_outer = 3 [default = false];
    /**
     * <code>optional bool is_static_in_outer = 3 [default = false];</code>
     *
     * <pre>
     * True iff this field is a backing field for a companion object and is really present as a static
     * field in the outer class, not as an instance field here
     * </pre>
     */
    boolean hasIsStaticInOuter();
    /**
     * <code>optional bool is_static_in_outer = 3 [default = false];</code>
     *
     * <pre>
     * True iff this field is a backing field for a companion object and is really present as a static
     * field in the outer class, not as an instance field here
     * </pre>
     */
    boolean getIsStaticInOuter();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature}
   */
  public static final class JvmFieldSignature extends
      com.google.protobuf.GeneratedMessage
      implements JvmFieldSignatureOrBuilder {
    // Use JvmFieldSignature.newBuilder() to construct.
    private JvmFieldSignature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JvmFieldSignature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JvmFieldSignature defaultInstance;
    public static JvmFieldSignature getDefaultInstance() {
      return defaultInstance;
    }

    public JvmFieldSignature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JvmFieldSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              name_ = input.readInt32();
              break;
            }
            case 18: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isStaticInOuter_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder.class);
    }

    public static com.google.protobuf.Parser<JvmFieldSignature> PARSER =
        new com.google.protobuf.AbstractParser<JvmFieldSignature>() {
      public JvmFieldSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JvmFieldSignature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JvmFieldSignature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private int name_;
    /**
     * <code>required int32 name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 name = 1;</code>
     */
    public int getName() {
      return name_;
    }

    // required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType type_;
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getType() {
      return type_;
    }
    /**
     * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getTypeOrBuilder() {
      return type_;
    }

    // optional bool is_static_in_outer = 3 [default = false];
    public static final int IS_STATIC_IN_OUTER_FIELD_NUMBER = 3;
    private boolean isStaticInOuter_;
    /**
     * <code>optional bool is_static_in_outer = 3 [default = false];</code>
     *
     * <pre>
     * True iff this field is a backing field for a companion object and is really present as a static
     * field in the outer class, not as an instance field here
     * </pre>
     */
    public boolean hasIsStaticInOuter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_static_in_outer = 3 [default = false];</code>
     *
     * <pre>
     * True iff this field is a backing field for a companion object and is really present as a static
     * field in the outer class, not as an instance field here
     * </pre>
     */
    public boolean getIsStaticInOuter() {
      return isStaticInOuter_;
    }

    private void initFields() {
      name_ = 0;
      type_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
      isStaticInOuter_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isStaticInOuter_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isStaticInOuter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTypeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (typeBuilder_ == null) {
          type_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        isStaticInOuter_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isStaticInOuter_ = isStaticInOuter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasIsStaticInOuter()) {
          setIsStaticInOuter(other.getIsStaticInOuter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 name = 1;
      private int name_ ;
      /**
       * <code>required int32 name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 name = 1;</code>
       */
      public int getName() {
        return name_;
      }
      /**
       * <code>required int32 name = 1;</code>
       */
      public Builder setName(int value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      // required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType type_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> typeBuilder_;
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType getType() {
        if (typeBuilder_ == null) {
          return type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public Builder setType(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public Builder setType(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public Builder mergeType(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType value) {
        if (typeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              type_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance()) {
            type_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.getDefaultInstance();
          onChanged();
        } else {
          typeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder getTypeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_;
        }
      }
      /**
       * <code>required .org.jetbrains.kotlin.serialization.jvm.JvmType type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmType.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmTypeOrBuilder>(
                  type_,
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      // optional bool is_static_in_outer = 3 [default = false];
      private boolean isStaticInOuter_ ;
      /**
       * <code>optional bool is_static_in_outer = 3 [default = false];</code>
       *
       * <pre>
       * True iff this field is a backing field for a companion object and is really present as a static
       * field in the outer class, not as an instance field here
       * </pre>
       */
      public boolean hasIsStaticInOuter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_static_in_outer = 3 [default = false];</code>
       *
       * <pre>
       * True iff this field is a backing field for a companion object and is really present as a static
       * field in the outer class, not as an instance field here
       * </pre>
       */
      public boolean getIsStaticInOuter() {
        return isStaticInOuter_;
      }
      /**
       * <code>optional bool is_static_in_outer = 3 [default = false];</code>
       *
       * <pre>
       * True iff this field is a backing field for a companion object and is really present as a static
       * field in the outer class, not as an instance field here
       * </pre>
       */
      public Builder setIsStaticInOuter(boolean value) {
        bitField0_ |= 0x00000004;
        isStaticInOuter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_static_in_outer = 3 [default = false];</code>
       *
       * <pre>
       * True iff this field is a backing field for a companion object and is really present as a static
       * field in the outer class, not as an instance field here
       * </pre>
       */
      public Builder clearIsStaticInOuter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isStaticInOuter_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature)
    }

    static {
      defaultInstance = new JvmFieldSignature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature)
  }

  public interface JvmPropertySignatureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     *
     * <pre>
     * A property itself is identified either by the field, or by the synthetic method.
     * If the property is annotated, then either field or synthetic_method should be present
     * </pre>
     */
    boolean hasField();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     *
     * <pre>
     * A property itself is identified either by the field, or by the synthetic method.
     * If the property is annotated, then either field or synthetic_method should be present
     * </pre>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getField();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     *
     * <pre>
     * A property itself is identified either by the field, or by the synthetic method.
     * If the property is annotated, then either field or synthetic_method should be present
     * </pre>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder getFieldOrBuilder();

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties without backing fields are written on a synthetic method with this signature
     * </pre>
     */
    boolean hasSyntheticMethod();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties without backing fields are written on a synthetic method with this signature
     * </pre>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSyntheticMethod();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties without backing fields are written on a synthetic method with this signature
     * </pre>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSyntheticMethodOrBuilder();

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    boolean hasGetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getGetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getGetterOrBuilder();

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    boolean hasSetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSetter();
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSetterOrBuilder();
  }
  /**
   * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature}
   */
  public static final class JvmPropertySignature extends
      com.google.protobuf.GeneratedMessage
      implements JvmPropertySignatureOrBuilder {
    // Use JvmPropertySignature.newBuilder() to construct.
    private JvmPropertySignature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JvmPropertySignature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JvmPropertySignature defaultInstance;
    public static JvmPropertySignature getDefaultInstance() {
      return defaultInstance;
    }

    public JvmPropertySignature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JvmPropertySignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = field_.toBuilder();
              }
              field_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(field_);
                field_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = syntheticMethod_.toBuilder();
              }
              syntheticMethod_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(syntheticMethod_);
                syntheticMethod_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = getter_.toBuilder();
              }
              getter_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getter_);
                getter_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = setter_.toBuilder();
              }
              setter_ = input.readMessage(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(setter_);
                setter_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.Builder.class);
    }

    public static com.google.protobuf.Parser<JvmPropertySignature> PARSER =
        new com.google.protobuf.AbstractParser<JvmPropertySignature>() {
      public JvmPropertySignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JvmPropertySignature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JvmPropertySignature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;
    public static final int FIELD_FIELD_NUMBER = 1;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature field_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     *
     * <pre>
     * A property itself is identified either by the field, or by the synthetic method.
     * If the property is annotated, then either field or synthetic_method should be present
     * </pre>
     */
    public boolean hasField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     *
     * <pre>
     * A property itself is identified either by the field, or by the synthetic method.
     * If the property is annotated, then either field or synthetic_method should be present
     * </pre>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getField() {
      return field_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
     *
     * <pre>
     * A property itself is identified either by the field, or by the synthetic method.
     * If the property is annotated, then either field or synthetic_method should be present
     * </pre>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder getFieldOrBuilder() {
      return field_;
    }

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;
    public static final int SYNTHETIC_METHOD_FIELD_NUMBER = 2;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature syntheticMethod_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties without backing fields are written on a synthetic method with this signature
     * </pre>
     */
    public boolean hasSyntheticMethod() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties without backing fields are written on a synthetic method with this signature
     * </pre>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSyntheticMethod() {
      return syntheticMethod_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
     *
     * <pre>
     * Annotations on properties without backing fields are written on a synthetic method with this signature
     * </pre>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSyntheticMethodOrBuilder() {
      return syntheticMethod_;
    }

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;
    public static final int GETTER_FIELD_NUMBER = 3;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getter_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    public boolean hasGetter() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getGetter() {
      return getter_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getGetterOrBuilder() {
      return getter_;
    }

    // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;
    public static final int SETTER_FIELD_NUMBER = 4;
    private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature setter_;
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    public boolean hasSetter() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSetter() {
      return setter_;
    }
    /**
     * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
     */
    public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSetterOrBuilder() {
      return setter_;
    }

    private void initFields() {
      field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
      syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasField()) {
        if (!getField().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSyntheticMethod()) {
        if (!getSyntheticMethod().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGetter()) {
        if (!getGetter().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSetter()) {
        if (!getSetter().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, field_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, syntheticMethod_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getter_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, setter_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, field_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, syntheticMethod_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getter_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, setter_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.class, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.Builder.class);
      }

      // Construct using org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldFieldBuilder();
          getSyntheticMethodFieldBuilder();
          getGetterFieldBuilder();
          getSetterFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fieldBuilder_ == null) {
          field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (syntheticMethodBuilder_ == null) {
          syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
        } else {
          syntheticMethodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (getterBuilder_ == null) {
          getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
        } else {
          getterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (setterBuilder_ == null) {
          setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
        } else {
          setterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature getDefaultInstanceForType() {
        return org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.getDefaultInstance();
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature build() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature buildPartial() {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature result = new org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (fieldBuilder_ == null) {
          result.field_ = field_;
        } else {
          result.field_ = fieldBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (syntheticMethodBuilder_ == null) {
          result.syntheticMethod_ = syntheticMethod_;
        } else {
          result.syntheticMethod_ = syntheticMethodBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (getterBuilder_ == null) {
          result.getter_ = getter_;
        } else {
          result.getter_ = getterBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (setterBuilder_ == null) {
          result.setter_ = setter_;
        } else {
          result.setter_ = setterBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature) {
          return mergeFrom((org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature other) {
        if (other == org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.getDefaultInstance()) return this;
        if (other.hasField()) {
          mergeField(other.getField());
        }
        if (other.hasSyntheticMethod()) {
          mergeSyntheticMethod(other.getSyntheticMethod());
        }
        if (other.hasGetter()) {
          mergeGetter(other.getGetter());
        }
        if (other.hasSetter()) {
          mergeSetter(other.getSetter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasField()) {
          if (!getField().isInitialized()) {
            
            return false;
          }
        }
        if (hasSyntheticMethod()) {
          if (!getSyntheticMethod().isInitialized()) {
            
            return false;
          }
        }
        if (hasGetter()) {
          if (!getGetter().isInitialized()) {
            
            return false;
          }
        }
        if (hasSetter()) {
          if (!getSetter().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder> fieldBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public boolean hasField() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature getField() {
        if (fieldBuilder_ == null) {
          return field_;
        } else {
          return fieldBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public Builder setField(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature value) {
        if (fieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          field_ = value;
          onChanged();
        } else {
          fieldBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public Builder setField(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder builderForValue) {
        if (fieldBuilder_ == null) {
          field_ = builderForValue.build();
          onChanged();
        } else {
          fieldBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public Builder mergeField(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature value) {
        if (fieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              field_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance()) {
            field_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.newBuilder(field_).mergeFrom(value).buildPartial();
          } else {
            field_ = value;
          }
          onChanged();
        } else {
          fieldBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public Builder clearField() {
        if (fieldBuilder_ == null) {
          field_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.getDefaultInstance();
          onChanged();
        } else {
          fieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder getFieldBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getFieldFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder getFieldOrBuilder() {
        if (fieldBuilder_ != null) {
          return fieldBuilder_.getMessageOrBuilder();
        } else {
          return field_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmFieldSignature field = 1;</code>
       *
       * <pre>
       * A property itself is identified either by the field, or by the synthetic method.
       * If the property is annotated, then either field or synthetic_method should be present
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder> 
          getFieldFieldBuilder() {
        if (fieldBuilder_ == null) {
          fieldBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmFieldSignatureOrBuilder>(
                  field_,
                  getParentForChildren(),
                  isClean());
          field_ = null;
        }
        return fieldBuilder_;
      }

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> syntheticMethodBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public boolean hasSyntheticMethod() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSyntheticMethod() {
        if (syntheticMethodBuilder_ == null) {
          return syntheticMethod_;
        } else {
          return syntheticMethodBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public Builder setSyntheticMethod(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (syntheticMethodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          syntheticMethod_ = value;
          onChanged();
        } else {
          syntheticMethodBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public Builder setSyntheticMethod(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder builderForValue) {
        if (syntheticMethodBuilder_ == null) {
          syntheticMethod_ = builderForValue.build();
          onChanged();
        } else {
          syntheticMethodBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public Builder mergeSyntheticMethod(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (syntheticMethodBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              syntheticMethod_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) {
            syntheticMethod_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder(syntheticMethod_).mergeFrom(value).buildPartial();
          } else {
            syntheticMethod_ = value;
          }
          onChanged();
        } else {
          syntheticMethodBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public Builder clearSyntheticMethod() {
        if (syntheticMethodBuilder_ == null) {
          syntheticMethod_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
          onChanged();
        } else {
          syntheticMethodBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder getSyntheticMethodBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSyntheticMethodFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSyntheticMethodOrBuilder() {
        if (syntheticMethodBuilder_ != null) {
          return syntheticMethodBuilder_.getMessageOrBuilder();
        } else {
          return syntheticMethod_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature synthetic_method = 2;</code>
       *
       * <pre>
       * Annotations on properties without backing fields are written on a synthetic method with this signature
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> 
          getSyntheticMethodFieldBuilder() {
        if (syntheticMethodBuilder_ == null) {
          syntheticMethodBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder>(
                  syntheticMethod_,
                  getParentForChildren(),
                  isClean());
          syntheticMethod_ = null;
        }
        return syntheticMethodBuilder_;
      }

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> getterBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public boolean hasGetter() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getGetter() {
        if (getterBuilder_ == null) {
          return getter_;
        } else {
          return getterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder setGetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (getterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getter_ = value;
          onChanged();
        } else {
          getterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder setGetter(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder builderForValue) {
        if (getterBuilder_ == null) {
          getter_ = builderForValue.build();
          onChanged();
        } else {
          getterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder mergeGetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (getterBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              getter_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) {
            getter_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder(getter_).mergeFrom(value).buildPartial();
          } else {
            getter_ = value;
          }
          onChanged();
        } else {
          getterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public Builder clearGetter() {
        if (getterBuilder_ == null) {
          getter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
          onChanged();
        } else {
          getterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder getGetterBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGetterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getGetterOrBuilder() {
        if (getterBuilder_ != null) {
          return getterBuilder_.getMessageOrBuilder();
        } else {
          return getter_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature getter = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> 
          getGetterFieldBuilder() {
        if (getterBuilder_ == null) {
          getterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder>(
                  getter_,
                  getParentForChildren(),
                  isClean());
          getter_ = null;
        }
        return getterBuilder_;
      }

      // optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;
      private org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> setterBuilder_;
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public boolean hasSetter() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature getSetter() {
        if (setterBuilder_ == null) {
          return setter_;
        } else {
          return setterBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder setSetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (setterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          setter_ = value;
          onChanged();
        } else {
          setterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder setSetter(
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder builderForValue) {
        if (setterBuilder_ == null) {
          setter_ = builderForValue.build();
          onChanged();
        } else {
          setterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder mergeSetter(org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature value) {
        if (setterBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              setter_ != org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance()) {
            setter_ =
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.newBuilder(setter_).mergeFrom(value).buildPartial();
          } else {
            setter_ = value;
          }
          onChanged();
        } else {
          setterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public Builder clearSetter() {
        if (setterBuilder_ == null) {
          setter_ = org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance();
          onChanged();
        } else {
          setterBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder getSetterBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getSetterFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      public org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder getSetterOrBuilder() {
        if (setterBuilder_ != null) {
          return setterBuilder_.getMessageOrBuilder();
        } else {
          return setter_;
        }
      }
      /**
       * <code>optional .org.jetbrains.kotlin.serialization.jvm.JvmMethodSignature setter = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder> 
          getSetterFieldBuilder() {
        if (setterBuilder_ == null) {
          setterBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.Builder, org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignatureOrBuilder>(
                  setter_,
                  getParentForChildren(),
                  isClean());
          setter_ = null;
        }
        return setterBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature)
    }

    static {
      defaultInstance = new JvmPropertySignature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.jetbrains.kotlin.serialization.jvm.JvmPropertySignature)
  }

  public static final int METHOD_SIGNATURE_FIELD_NUMBER = 100;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Callable { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable,
      org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature> methodSignature = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.class,
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmMethodSignature.getDefaultInstance());
  public static final int PROPERTY_SIGNATURE_FIELD_NUMBER = 101;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Callable { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable,
      org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature> propertySignature = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.class,
        org.jetbrains.kotlin.serialization.jvm.DebugJvmProtoBuf.JvmPropertySignature.getDefaultInstance());
  public static final int IMPL_CLASS_NAME_FIELD_NUMBER = 102;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Callable { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable,
      java.lang.Integer> implClassName = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Integer.class,
        null);
  public static final int INDEX_FIELD_NUMBER = 100;
  /**
   * <code>extend .org.jetbrains.kotlin.serialization.Callable.ValueParameter { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      org.jetbrains.kotlin.serialization.DebugProtoBuf.Callable.ValueParameter,
      java.lang.Integer> index = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Integer.class,
        null);
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6core/serialization.jvm/src/jvm_descrip" +
      "tors.debug.proto\022&org.jetbrains.kotlin.s" +
      "erialization.jvm\032.core/serialization/src" +
      "/descriptors.debug.proto\"\204\002\n\007JvmType\022U\n\016" +
      "primitive_type\030\001 \001(\0162=.org.jetbrains.kot" +
      "lin.serialization.jvm.JvmType.PrimitiveT" +
      "ype\022\025\n\rclass_fq_name\030\002 \001(\005\022\032\n\017array_dime" +
      "nsion\030\003 \001(\005:\0010\"o\n\rPrimitiveType\022\010\n\004VOID\020" +
      "\000\022\013\n\007BOOLEAN\020\001\022\010\n\004CHAR\020\002\022\010\n\004BYTE\020\003\022\t\n\005SH" +
      "ORT\020\004\022\007\n\003INT\020\005\022\t\n\005FLOAT\020\006\022\010\n\004LONG\020\007\022\n\n\006D",
      "OUBLE\020\010\"\261\001\n\022JvmMethodSignature\022\014\n\004name\030\001" +
      " \002(\005\022D\n\013return_type\030\002 \002(\0132/.org.jetbrain" +
      "s.kotlin.serialization.jvm.JvmType\022G\n\016pa" +
      "rameter_type\030\003 \003(\0132/.org.jetbrains.kotli" +
      "n.serialization.jvm.JvmType\"\203\001\n\021JvmField" +
      "Signature\022\014\n\004name\030\001 \002(\005\022=\n\004type\030\002 \002(\0132/." +
      "org.jetbrains.kotlin.serialization.jvm.J" +
      "vmType\022!\n\022is_static_in_outer\030\003 \001(\010:\005fals" +
      "e\"\316\002\n\024JvmPropertySignature\022H\n\005field\030\001 \001(" +
      "\01329.org.jetbrains.kotlin.serialization.j",
      "vm.JvmFieldSignature\022T\n\020synthetic_method" +
      "\030\002 \001(\0132:.org.jetbrains.kotlin.serializat" +
      "ion.jvm.JvmMethodSignature\022J\n\006getter\030\003 \001" +
      "(\0132:.org.jetbrains.kotlin.serialization." +
      "jvm.JvmMethodSignature\022J\n\006setter\030\004 \001(\0132:" +
      ".org.jetbrains.kotlin.serialization.jvm." +
      "JvmMethodSignature:\202\001\n\020method_signature\022" +
      ",.org.jetbrains.kotlin.serialization.Cal" +
      "lable\030d \001(\0132:.org.jetbrains.kotlin.seria" +
      "lization.jvm.JvmMethodSignature:\206\001\n\022prop",
      "erty_signature\022,.org.jetbrains.kotlin.se" +
      "rialization.Callable\030e \001(\0132<.org.jetbrai" +
      "ns.kotlin.serialization.jvm.JvmPropertyS" +
      "ignature:E\n\017impl_class_name\022,.org.jetbra" +
      "ins.kotlin.serialization.Callable\030f \001(\005:" +
      "J\n\005index\022;.org.jetbrains.kotlin.serializ" +
      "ation.Callable.ValueParameter\030d \001(\005B\022B\020D" +
      "ebugJvmProtoBuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_JvmType_descriptor,
              new java.lang.String[] { "PrimitiveType", "ClassFqName", "ArrayDimension", });
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_JvmMethodSignature_descriptor,
              new java.lang.String[] { "Name", "ReturnType", "ParameterType", });
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_JvmFieldSignature_descriptor,
              new java.lang.String[] { "Name", "Type", "IsStaticInOuter", });
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_jetbrains_kotlin_serialization_jvm_JvmPropertySignature_descriptor,
              new java.lang.String[] { "Field", "SyntheticMethod", "Getter", "Setter", });
          methodSignature.internalInit(descriptor.getExtensions().get(0));
          propertySignature.internalInit(descriptor.getExtensions().get(1));
          implClassName.internalInit(descriptor.getExtensions().get(2));
          index.internalInit(descriptor.getExtensions().get(3));
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.jetbrains.kotlin.serialization.DebugProtoBuf.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
