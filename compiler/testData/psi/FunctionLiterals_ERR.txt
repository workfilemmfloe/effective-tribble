JetFile: FunctionLiterals_ERR.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('foo')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          PsiWhiteSpace(' ')
          VALUE_PARAMETER_LIST
            <empty list>
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          BLOCK
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            PARENTHESIZED
              PsiElement(LPAR)('(')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
              PsiErrorElement:Expecting ')'
                <empty list>
            PsiWhiteSpace(' ')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            PARENTHESIZED
              PsiElement(LPAR)('(')
              BINARY_WITH_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('a')
                PsiWhiteSpace(' ')
                OPERATION_REFERENCE
                  PsiElement(COLON)(':')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  PsiErrorElement:Type expected
                    <empty list>
              PsiElement(RPAR)(')')
            PsiWhiteSpace(' ')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            BINARY_EXPRESSION
              BINARY_WITH_TYPE
                PARENTHESIZED
                  PsiElement(LPAR)('(')
                  BINARY_WITH_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('a')
                    PsiWhiteSpace(' ')
                    OPERATION_REFERENCE
                      PsiElement(COLON)(':')
                    PsiWhiteSpace(' ')
                    TYPE_REFERENCE
                      USER_TYPE
                        REFERENCE_EXPRESSION
                          PsiElement(IDENTIFIER)('A')
                  PsiElement(RPAR)(')')
                PsiWhiteSpace(' ')
                OPERATION_REFERENCE
                  PsiElement(COLON)(':')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  PsiErrorElement:Type expected
                    PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(IDENTIFIER)('a')
              PsiErrorElement:Expecting an element
                <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            BINARY_WITH_TYPE
              PARENTHESIZED
                PsiElement(LPAR)('(')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('a')
                PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('T')
            PsiWhiteSpace(' ')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            PARENTHESIZED
              PsiElement(LPAR)('(')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
              PsiErrorElement:Expecting ')'
                <empty list>
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            PARENTHESIZED
              PsiElement(LPAR)('(')
              BINARY_WITH_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('a')
                PsiWhiteSpace(' ')
                OPERATION_REFERENCE
                  PsiElement(COLON)(':')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('A')
              PsiErrorElement:Expecting ')'
                <empty list>
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
              PsiWhiteSpace(' ')
              PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('B')
              PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            PARENTHESIZED
              PsiElement(LPAR)('(')
              BINARY_WITH_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('a')
                PsiWhiteSpace(' ')
                OPERATION_REFERENCE
                  PsiElement(COLON)(':')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('A')
              PsiErrorElement:Expecting ')'
                <empty list>
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
              PsiElement(RPAR)(')')
              PsiWhiteSpace(' ')
              PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('T')
              PsiWhiteSpace(' ')
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            DOT_QUALIFIED_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('T')
              PsiElement(DOT)('.')
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('t')
                VALUE_ARGUMENT_LIST
                  PsiElement(LPAR)('(')
                  VALUE_ARGUMENT
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('a')
                  PsiElement(RPAR)(')')
            PsiWhiteSpace(' ')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            BINARY_EXPRESSION
              DOT_QUALIFIED_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('T')
                PsiElement(DOT)('.')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('t')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(MINUS)('-')
              PARENTHESIZED
                PsiElement(LPAR)('(')
                BINARY_WITH_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('a')
                  PsiWhiteSpace(' ')
                  OPERATION_REFERENCE
                    PsiElement(COLON)(':')
                  PsiWhiteSpace(' ')
                  TYPE_REFERENCE
                    USER_TYPE
                      REFERENCE_EXPRESSION
                        PsiElement(IDENTIFIER)('A')
                PsiElement(RPAR)(')')
            PsiWhiteSpace(' ')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('a')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          VALUE_PARAMETER_LIST
            VALUE_PARAMETER
              PsiElement(IDENTIFIER)('a')
              PsiWhiteSpace(' ')
              PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('b')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            VALUE_PARAMETER
              PsiErrorElement:Expecting parameter name
                <empty list>
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          BLOCK
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('f')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          VALUE_PARAMETER_LIST
            VALUE_PARAMETER
              PsiElement(IDENTIFIER)('a')
              PsiWhiteSpace(' ')
              PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                PsiErrorElement:Type expected
                  <empty list>
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            VALUE_PARAMETER
              PsiElement(IDENTIFIER)('c')
          PsiWhiteSpace(' ')
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          BLOCK
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('f')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          VALUE_PARAMETER_LIST
            VALUE_PARAMETER
              PsiElement(IDENTIFIER)('a')
              PsiWhiteSpace(' ')
              PsiElement(COLON)(':')
              PsiWhiteSpace('  ')
              TYPE_REFERENCE
                PsiErrorElement:Type expected
                  <empty list>
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          BLOCK
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('f')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          VALUE_PARAMETER_LIST
            VALUE_PARAMETER
              PsiElement(IDENTIFIER)('a')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            VALUE_PARAMETER
              PsiErrorElement:Expecting parameter name
                <empty list>
          PsiElement(ARROW)('->')
          PsiWhiteSpace(' ')
          BLOCK
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('f')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            BINARY_WITH_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('b')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            BINARY_WITH_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                PsiErrorElement:Type expected
                  <empty list>
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            BINARY_WITH_TYPE
              DOT_QUALIFIED_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('T')
                PsiElement(DOT)('.')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('a')
              PsiWhiteSpace(' ')
              OPERATION_REFERENCE
                PsiElement(COLON)(':')
              PsiWhiteSpace(' ')
              TYPE_REFERENCE
                USER_TYPE
                  REFERENCE_EXPRESSION
                    PsiElement(IDENTIFIER)('b')
            PsiWhiteSpace(' ')
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(ARROW)('->')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('f')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            PARENTHESIZED
              PsiElement(LPAR)('(')
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
              PsiErrorElement:Expecting ')'
                <empty list>
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('b')
              PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            DOT_QUALIFIED_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('T')
              PsiElement(DOT)('.')
              PARENTHESIZED
                PsiElement(LPAR)('(')
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('a')
                PsiErrorElement:Expecting ')'
                  <empty list>
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(IDENTIFIER)('b')
              PsiElement(RPAR)(')')
          PsiWhiteSpace(' ')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          BLOCK
            PARENTHESIZED
              PsiElement(LPAR)('(')
              BINARY_WITH_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('a')
                OPERATION_REFERENCE
                  PsiElement(COLON)(':')
                PsiWhiteSpace(' ')
                TYPE_REFERENCE
                  USER_TYPE
                    REFERENCE_EXPRESSION
                      PsiElement(IDENTIFIER)('Int')
              PsiErrorElement:Expecting ')'
                <empty list>
            PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
              PsiElement(COMMA)(',')
              PsiWhiteSpace(' ')
              PsiElement(RPAR)(')')
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n    ')
      FUNCTION_LITERAL_EXPRESSION
        FUNCTION_LITERAL
          PsiElement(LBRACE)('{')
          VALUE_PARAMETER_LIST
            VALUE_PARAMETER
              PsiElement(IDENTIFIER)('a')
            PsiElement(COMMA)(',')
            PsiWhiteSpace(' ')
            VALUE_PARAMETER
              PsiErrorElement:Expecting parameter name
                <empty list>
          BLOCK
            <empty list>
          PsiElement(RBRACE)('}')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
