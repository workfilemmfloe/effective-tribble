JetFile: DoubleColon_ERR.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('err0')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('a')
        PsiElement(COLONCOLON)('::')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('b')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(LPAR)('(')
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('err1')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        TYPE_REFERENCE
          USER_TYPE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
            PsiElement(DOT)('.')
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('b')
        PsiElement(COLONCOLON)('::')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('c')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(LPAR)('(')
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('err2')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('A')
        PsiElement(COLONCOLON)('::')
        PsiWhiteSpace('\n')
        REFERENCE_EXPRESSION
          PsiErrorElement:Expecting an identifier
            <empty list>
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('err3')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        PsiElement(COLONCOLON)('::')
        PsiWhiteSpace('\n')
        REFERENCE_EXPRESSION
          PsiErrorElement:Expecting an identifier
            <empty list>
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('typeArgumentsError')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        PsiElement(COLONCOLON)('::')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('a')
        PsiErrorElement:Type arguments are not allowed
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('b')
          PsiElement(GT)('>')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        PsiElement(COLONCOLON)('::')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('a')
        PsiErrorElement:Type arguments are not allowed
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('b')
          PsiElement(COMMA)(',')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('c')
                TYPE_ARGUMENT_LIST
                  PsiElement(LT)('<')
                  TYPE_PROJECTION
                    PsiElement(MUL)('*')
                  PsiElement(GT)('>')
          PsiElement(GT)('>')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('a')
        PsiElement(COLONCOLON)('::')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('b')
        PsiErrorElement:Type arguments are not allowed
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('c')
          PsiElement(GT)('>')
      PsiWhiteSpace('\n\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        PsiElement(COLONCOLON)('::')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('a')
        PsiErrorElement:Type arguments are not allowed
          PsiElement(LT)('<')
          TYPE_PROJECTION
            TYPE_REFERENCE
              USER_TYPE
                REFERENCE_EXPRESSION
                  PsiElement(IDENTIFIER)('b')
          PsiElement(GT)('>')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(LPAR)('(')
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')
  PsiWhiteSpace('\n\n')
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('expressionsOnLHS')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      DOT_QUALIFIED_EXPRESSION
        CALLABLE_REFERENCE_EXPRESSION
          TYPE_REFERENCE
            USER_TYPE
              REFERENCE_EXPRESSION
                PsiElement(IDENTIFIER)('a')
          PsiElement(COLONCOLON)('::')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('b')
        PsiElement(DOT)('.')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('c')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(COLONCOLON)('::')
        PsiElement(IDENTIFIER)('d')
      PsiWhiteSpace('\n    ')
      CALLABLE_REFERENCE_EXPRESSION
        TYPE_REFERENCE
          USER_TYPE
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('A')
        PsiElement(COLONCOLON)('::')
        REFERENCE_EXPRESSION
          PsiElement(IDENTIFIER)('a')
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(COLONCOLON)('::')
        PsiElement(IDENTIFIER)('b')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')