FILE /stringComparisons.kt
  FUN public fun test1(a: kotlin.String, b: kotlin.String): kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test1(String, String): Boolean'
        CALL 'GT0(Int): Boolean' type=kotlin.Boolean origin=GT
          arg0: CALL 'compareTo(String): Int' type=kotlin.Int origin=GT
            $this: GET_VAR 'value-parameter a: String' type=kotlin.String origin=null
            other: GET_VAR 'value-parameter b: String' type=kotlin.String origin=null
  FUN public fun test2(a: kotlin.String, b: kotlin.String): kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test2(String, String): Boolean'
        CALL 'LT0(Int): Boolean' type=kotlin.Boolean origin=LT
          arg0: CALL 'compareTo(String): Int' type=kotlin.Int origin=LT
            $this: GET_VAR 'value-parameter a: String' type=kotlin.String origin=null
            other: GET_VAR 'value-parameter b: String' type=kotlin.String origin=null
  FUN public fun test3(a: kotlin.String, b: kotlin.String): kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test3(String, String): Boolean'
        CALL 'GTEQ0(Int): Boolean' type=kotlin.Boolean origin=GTEQ
          arg0: CALL 'compareTo(String): Int' type=kotlin.Int origin=GTEQ
            $this: GET_VAR 'value-parameter a: String' type=kotlin.String origin=null
            other: GET_VAR 'value-parameter b: String' type=kotlin.String origin=null
  FUN public fun test4(a: kotlin.String, b: kotlin.String): kotlin.Boolean
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='test4(String, String): Boolean'
        CALL 'LTEQ0(Int): Boolean' type=kotlin.Boolean origin=LTEQ
          arg0: CALL 'compareTo(String): Int' type=kotlin.Int origin=LTEQ
            $this: GET_VAR 'value-parameter a: String' type=kotlin.String origin=null
            other: GET_VAR 'value-parameter b: String' type=kotlin.String origin=null
