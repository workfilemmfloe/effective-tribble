FILE /dataClasses.kt
  CLASS CLASS Test1
    CONSTRUCTOR public constructor Test1(x: kotlin.Int, y: kotlin.String, z: kotlin.Any)
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Test1'
    PROPERTY public final val x: kotlin.Int
      FIELD PROPERTY_BACKING_FIELD public final val x: kotlin.Int
        EXPRESSION_BODY
          GET_VAR 'value-parameter x: Int' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-x>(): kotlin.Int
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-x>(): Int'
            GET_FIELD 'x: Int' type=kotlin.Int origin=null
              receiver: GET_VAR '<receiver: Test1>' type=Test1 origin=null
    PROPERTY public final val y: kotlin.String
      FIELD PROPERTY_BACKING_FIELD public final val y: kotlin.String
        EXPRESSION_BODY
          GET_VAR 'value-parameter y: String' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-y>(): kotlin.String
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-y>(): String'
            GET_FIELD 'y: String' type=kotlin.String origin=null
              receiver: GET_VAR '<receiver: Test1>' type=Test1 origin=null
    PROPERTY public final val z: kotlin.Any
      FIELD PROPERTY_BACKING_FIELD public final val z: kotlin.Any
        EXPRESSION_BODY
          GET_VAR 'value-parameter z: Any' type=kotlin.Any origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-z>(): kotlin.Any
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-z>(): Any'
            GET_FIELD 'z: Any' type=kotlin.Any origin=null
              receiver: GET_VAR '<receiver: Test1>' type=Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public final operator fun component1(): kotlin.Int
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='component1(): Int'
          CALL '<get-x>(): Int' type=kotlin.Int origin=GET_PROPERTY
            $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public final operator fun component2(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='component2(): String'
          CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public final operator fun component3(): kotlin.Any
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='component3(): Any'
          CALL '<get-z>(): Any' type=kotlin.Any origin=GET_PROPERTY
            $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public final fun copy(x: kotlin.Int = ..., y: kotlin.String = ..., z: kotlin.Any = ...): Test1
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='copy(Int = ..., String = ..., Any = ...): Test1'
          CALL 'constructor Test1(Int, String, Any)' type=Test1 origin=null
            x: GET_VAR 'value-parameter x: Int = ...' type=kotlin.Int origin=null
            y: GET_VAR 'value-parameter y: String = ...' type=kotlin.String origin=null
            z: GET_VAR 'value-parameter z: Any = ...' type=kotlin.Any origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public open override fun toString(): kotlin.String
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='toString(): String'
          STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value='Test1('
            CONST String type=kotlin.String value='x='
            CALL '<get-x>(): Int' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
            CONST String type=kotlin.String value=', '
            CONST String type=kotlin.String value='y='
            CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
              $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
            CONST String type=kotlin.String value=', '
            CONST String type=kotlin.String value='z='
            CALL '<get-z>(): Any' type=kotlin.Any origin=GET_PROPERTY
              $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
            CONST String type=kotlin.String value=')'
    FUN GENERATED_DATA_CLASS_MEMBER public open override fun hashCode(): kotlin.Int
      BLOCK_BODY
        VAR IR_TEMPORARY_VARIABLE var tmp0_result: kotlin.Int
          CONST Int type=kotlin.Int value='0'
        SET_VAR 'tmp0_result: Int' type=kotlin.Unit origin=EQ
          CALL 'hashCode(): Int' type=kotlin.Int origin=null
            $this: CALL '<get-x>(): Int' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
        SET_VAR 'tmp0_result: Int' type=kotlin.Unit origin=EQ
          CALL 'plus(Int): Int' type=kotlin.Int origin=null
            $this: CALL 'times(Int): Int' type=kotlin.Int origin=null
              $this: GET_VAR 'tmp0_result: Int' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value='31'
            other: CALL 'hashCode(): Int' type=kotlin.Int origin=null
              $this: CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
                $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
        SET_VAR 'tmp0_result: Int' type=kotlin.Unit origin=EQ
          CALL 'plus(Int): Int' type=kotlin.Int origin=null
            $this: CALL 'times(Int): Int' type=kotlin.Int origin=null
              $this: GET_VAR 'tmp0_result: Int' type=kotlin.Int origin=null
              other: CONST Int type=kotlin.Int value='31'
            other: CALL 'hashCode(): Int' type=kotlin.Int origin=null
              $this: CALL '<get-z>(): Any' type=kotlin.Any origin=GET_PROPERTY
                $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
        RETURN type=kotlin.Nothing from='hashCode(): Int'
          GET_VAR 'tmp0_result: Int' type=kotlin.Int origin=null
    FUN GENERATED_DATA_CLASS_MEMBER public open override fun equals(other: kotlin.Any?): kotlin.Boolean
      BLOCK_BODY
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'EQEQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EQEQEQ
              arg0: GET_VAR '<receiver: Test1>' type=Test1 origin=null
              arg1: GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='true'
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: TYPE_OP origin=NOT_INSTANCEOF typeOperand=Test1
              GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='false'
        VAR IR_TEMPORARY_VARIABLE val tmp0_other_with_cast: Test1
          TYPE_OP origin=CAST typeOperand=Test1
            GET_VAR 'value-parameter other: Any?' type=kotlin.Any? origin=null
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '<get-x>(): Int' type=kotlin.Int origin=GET_PROPERTY
                  $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
                arg1: CALL '<get-x>(): Int' type=kotlin.Int origin=GET_PROPERTY
                  $this: GET_VAR 'tmp0_other_with_cast: Test1' type=Test1 origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='false'
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
                arg1: CALL '<get-y>(): String' type=kotlin.String origin=GET_PROPERTY
                  $this: GET_VAR 'tmp0_other_with_cast: Test1' type=Test1 origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='false'
        WHEN type=kotlin.Unit origin=null
          BRANCH
            if: CALL 'NOT(Boolean): Boolean' type=kotlin.Boolean origin=EXCLEQ
              arg0: CALL 'EQEQ(Any?, Any?): Boolean' type=kotlin.Boolean origin=EXCLEQ
                arg0: CALL '<get-z>(): Any' type=kotlin.Any origin=GET_PROPERTY
                  $this: GET_VAR '<receiver: Test1>' type=Test1 origin=null
                arg1: CALL '<get-z>(): Any' type=kotlin.Any origin=GET_PROPERTY
                  $this: GET_VAR 'tmp0_other_with_cast: Test1' type=Test1 origin=null
            then: RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
              CONST Boolean type=kotlin.Boolean value='false'
        RETURN type=kotlin.Nothing from='equals(Any?): Boolean'
          CONST Boolean type=kotlin.Boolean value='true'
