== foo ==
fun foo() {
    val b: Boolean
    if (1 < 2) {
        use(b)
    }
    else {
        b = true
    }
}
---------------------
1                                                            <v0>: {<: Comparable<Int>}   NEW: r(1) -> <v0>                         
2                                                            <v1>: Int                    NEW: r(2) -> <v1>                         
1 < 2                                                        <v2>: Boolean                NEW: call(<, compareTo|<v0>, <v1>) -> <v2>
b                                                            <v3>: {<: Any?}              NEW: r(b) -> <v3>                         
use(b)                                                       <v4>: *                      NEW: call(use, use|<v3>) -> <v4>          
{ use(b) }                                                   <v4>: *                      COPY                                      
true                                                         <v5>: Boolean                NEW: r(true) -> <v5>                      
if (1 < 2) { use(b) } else { b = true }                      <v4>: *                      COPY                                      
{ val b: Boolean if (1 < 2) { use(b) } else { b = true } }   <v4>: *                      COPY                                      
=====================
== use ==
fun use(vararg a: Any?) = a
---------------------
    <v0>: {<: Array<Any?>}   NEW: magic(vararg a: Any?) -> <v0>
a   <v1>: {<: Array<Any?>}   NEW: r(a) -> <v1>                 
=====================
