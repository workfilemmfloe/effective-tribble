Usage: kotlinc-jvm <options> <source files>
where advanced options include:
  -Xno-call-assertions       Don't generate not-null assertion after each invocation of method returning not-null
  -Xno-param-assertions      Don't generate not-null assertions on parameters of methods accessible from Java
  -Xno-optimize              Disable optimizations
  -Xreport-perf              Report detailed performance statistics
  -Xmultifile-parts-inherit  Compile multifile classes as a hierarchy of parts and facade
  -Xallow-kotlin-package     Allow compiling code in package 'kotlin'
  -Xskip-metadata-version-check Load classes with bad metadata version anyway (incl. pre-release classes)
  -Xdump-declarations-to <path> Path to JSON file to dump Java to Kotlin declaration mappings
  -Xsingle-module            Combine modules for source files and binary dependencies into a single module
  -Xadd-compiler-builtins    Add definitions of built-in declarations to the compilation classpath (useful with -no-stdlib)
  -Xload-builtins-from-dependencies
                             Load definitions of built-in declarations from module dependencies, instead of from the compiler
  -Xinterface-compatibility  Generate DefaultImpls classes for interfaces in JVM target bytecode version 1.8 for binary compatibility with 1.6
  -Xno-inline                Disable method inlining
  -Xrepeat <count>           Repeat compilation (for performance analysis)
  -Xplugin <path>            Load plugins from the given classpath
  -Xmulti-platform           Enable experimental language support for multi-platform projects
  -Xno-check-impl            Do not check presence of 'impl' modifier in multi-platform projects

Advanced options are non-standard and may be changed or removed without any notice.
OK