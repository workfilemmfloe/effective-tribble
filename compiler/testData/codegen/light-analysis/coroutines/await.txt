@kotlin.Metadata
public final class AwaitKt {
    private static field inAwait: boolean
    private static field log: java.lang.String
    public final static @org.jetbrains.annotations.NotNull method async(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): Promise
    public final static @org.jetbrains.annotations.NotNull method asyncOperation(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function0): Promise
    public final static @org.jetbrains.annotations.Nullable method await(@org.jetbrains.annotations.NotNull p0: Promise, @org.jetbrains.annotations.NotNull p1: kotlin.coroutines.experimental.Continuation): java.lang.Object
    public final static @org.jetbrains.annotations.Nullable method awaitAndLog(@org.jetbrains.annotations.NotNull p0: Promise, @org.jetbrains.annotations.NotNull p1: kotlin.coroutines.experimental.Continuation): java.lang.Object
    public final static @org.jetbrains.annotations.NotNull method getLog(): java.lang.String
}

@kotlin.Metadata
public final class CoroutineUtilKt {
    public final static @org.jetbrains.annotations.NotNull method handleExceptionContinuation(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): kotlin.coroutines.experimental.Continuation
    public final static @org.jetbrains.annotations.NotNull method handleResultContinuation(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): kotlin.coroutines.experimental.Continuation
}

@kotlin.Metadata
public class EmptyContinuation {
    public final static field Companion: EmptyContinuation.Companion
    private final @org.jetbrains.annotations.NotNull field context: kotlin.coroutines.experimental.CoroutineContext
    inner class EmptyContinuation/Companion
    public @synthetic.kotlin.jvm.GeneratedByJvmOverloads method <init>(): void
    public method <init>(@org.jetbrains.annotations.NotNull p0: kotlin.coroutines.experimental.CoroutineContext): void
    public synthetic method <init>(p0: kotlin.coroutines.experimental.CoroutineContext, p1: int, p2: kotlin.jvm.internal.DefaultConstructorMarker): void
    public @org.jetbrains.annotations.NotNull method getContext(): kotlin.coroutines.experimental.CoroutineContext
    public method resume(@org.jetbrains.annotations.Nullable p0: java.lang.Object): void
    public method resumeWithException(@org.jetbrains.annotations.NotNull p0: java.lang.Throwable): void
}

@kotlin.Metadata
public final static class EmptyContinuation/Companion {
    inner class EmptyContinuation/Companion
    private method <init>(): void
}

@kotlin.Metadata
public final class MainKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    private final static method test(): Promise
}

@kotlin.Metadata
public final class Promise {
    private final field executor: kotlin.jvm.functions.Function1
    private field thenList: java.util.List
    private field value: java.lang.Object
    public method <init>(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): void
    public final @org.jetbrains.annotations.NotNull method then(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): Promise
}

@kotlin.Metadata
public final class QueueKt {
    private final static field queue: java.util.List
    public final static @org.jetbrains.annotations.NotNull method postpone(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function0): Promise
    public final static method processQueue(): void
}
