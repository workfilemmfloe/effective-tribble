@kotlin.Metadata
public final class Controller {
    private @org.jetbrains.annotations.NotNull field result: java.lang.String
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getResult(): java.lang.String
    public final method setResult(@org.jetbrains.annotations.NotNull p0: java.lang.String): void
    public final @org.jetbrains.annotations.Nullable method suspendWithResult(p0: java.lang.Object, @org.jetbrains.annotations.NotNull p1: kotlin.coroutines.Continuation): java.lang.Object
}

@kotlin.Metadata
public final class CoroutineUtilKt {
    public final static @org.jetbrains.annotations.NotNull method handleExceptionContinuation(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): kotlin.coroutines.Continuation
    public final static @org.jetbrains.annotations.NotNull method handleResultContinuation(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function1): kotlin.coroutines.Continuation
}

@kotlin.Metadata
public final class EmptyContinuation {
    public final static field INSTANCE: EmptyContinuation
    private method <init>(): void
    public method resume(@org.jetbrains.annotations.Nullable p0: java.lang.Object): void
    public method resumeWithException(@org.jetbrains.annotations.NotNull p0: java.lang.Throwable): void
}

@kotlin.Metadata
public final class ForContinueKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method builder(@org.jetbrains.annotations.NotNull p0: kotlin.jvm.functions.Function2): java.lang.String
}
