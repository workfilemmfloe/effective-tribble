public final class ComparablePair {
    private final @org.jetbrains.annotations.NotNull field first: java.lang.Comparable
    private final @org.jetbrains.annotations.NotNull field second: java.lang.Comparable
    public method <init>(@org.jetbrains.annotations.NotNull p0: java.lang.Comparable, @org.jetbrains.annotations.NotNull p1: java.lang.Comparable): void
    public method compareTo(@org.jetbrains.annotations.NotNull p0: ComparablePair): int
    public synthetic method compareTo(p0: java.lang.Object): int
    public final @org.jetbrains.annotations.NotNull method getFirst(): java.lang.Comparable
    public final @org.jetbrains.annotations.NotNull method getSecond(): java.lang.Comparable
}


public final class InComparableRangeKt {
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static method check(p0: double, p1: double, p2: double): boolean
    public final static method check(p0: float, p1: float, p2: float): boolean
    public final static @org.jetbrains.annotations.NotNull method genericRangeTo(@org.jetbrains.annotations.NotNull p0: java.lang.Comparable, @org.jetbrains.annotations.NotNull p1: java.lang.Comparable): kotlin.ranges.ClosedRange
    public final static @org.jetbrains.annotations.NotNull method rangeTo(p0: double, p1: double): kotlin.ranges.ClosedRange
    public final static @org.jetbrains.annotations.NotNull method rangeTo(p0: float, p1: float): kotlin.ranges.ClosedFloatingPointRange
}
