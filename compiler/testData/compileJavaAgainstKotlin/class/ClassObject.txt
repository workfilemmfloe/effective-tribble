package test

public/*package*/ open class ClassObject {
    public/*package*/ constructor ClassObject()
    public/*package*/ open fun accessToClassObject(): kotlin.Unit
    public/*package*/ open fun accessToInnerClass(): kotlin.Unit
    public/*package*/ open fun accessToPackageObject(): kotlin.Unit
}

internal object PackageInner {
    private constructor PackageInner()
    internal final val value: kotlin.Int
    internal final fun foo(): kotlin.Unit
}

internal final class WithClassObject {
    public constructor WithClassObject()

    public companion object Companion {
        private constructor Companion()
        internal final val value: kotlin.Int
        internal final val valueWithGetter: kotlin.Int
        internal final var variable: kotlin.Int
        internal final var variableWithAccessors: kotlin.Int
        internal final fun foo(): kotlin.Unit
    }

    internal final class MyInner {
        public constructor MyInner()
        internal final val value: kotlin.Int
        internal final fun foo(): kotlin.Unit
    }
}
