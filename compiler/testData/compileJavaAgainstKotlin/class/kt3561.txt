package test

public final enum class MyEnum : kotlin.Enum<test.MyEnum> {
    enum entry OK

    private constructor MyEnum()
    public final /*fake_override*/ val name: kotlin.String
    public final /*fake_override*/ val ordinal: kotlin.Int
    protected final /*fake_override*/ fun clone(): kotlin.Any
    public final /*fake_override*/ fun compareTo(/*0*/ test.MyEnum): kotlin.Int

    // Static members
    @kotlin.Deprecated(message = "Use 'values()' function instead", replaceWith = kotlin.ReplaceWith(expression = "this.values()", imports = {})) public final /*synthesized*/ val values: kotlin.Array<test.MyEnum>
    public final /*synthesized*/ fun valueOf(/*0*/ kotlin.String): test.MyEnum
    public final /*synthesized*/ fun values(): kotlin.Array<test.MyEnum>
}

public open class kt3561 {
    public constructor kt3561()
    public open fun getEntryName(): test.MyEnum!
}
