package test

internal final class E1 : java.lang.Exception {
    public constructor E1()
    public final /*fake_override*/ fun getCause(): kotlin.Throwable?
    public final /*fake_override*/ fun getMessage(): kotlin.String?
    public final /*fake_override*/ fun printStackTrace(): kotlin.Unit
}

internal final class E2 : java.lang.Exception {
    public constructor E2()
    public final /*fake_override*/ fun getCause(): kotlin.Throwable?
    public final /*fake_override*/ fun getMessage(): kotlin.String?
    public final /*fake_override*/ fun printStackTrace(): kotlin.Unit
}

public/*package*/ open class JavaClass {
    public/*package*/ constructor JavaClass()
    public/*package*/ open fun testMethod(): kotlin.Unit
}

internal final class Test {
    public constructor Test()
    internal final fun none(): kotlin.Unit
    internal final fun one(): kotlin.Unit
    internal final fun two(): kotlin.Unit
}
