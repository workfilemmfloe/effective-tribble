== Bar ==
class Bar {
    fun invoke(x: Int): Int = x
}
---------------------
=====================
== invoke ==
fun invoke(x: Int): Int = x
---------------------
    <v0>: Int   NEW: magic[FAKE_INITIALIZER](x: Int) -> <v0>
x   <v1>: Int   NEW: r(x) -> <v1>
=====================
== Foo ==
class Foo {
    val get: Bar = Bar()
}
---------------------
Bar()   <v0>: Bar   NEW: call(Bar(), <init>) -> <v0>
=====================
== test1 ==
fun test1(foo: Foo) {
    foo[1]
}
---------------------
             <v0>: Foo   NEW: magic[FAKE_INITIALIZER](foo: Foo) -> <v0>
foo          <v1>: Foo   NEW: r(foo) -> <v1>
1            <v3>: Int   NEW: r(1) -> <v3>
foo[1]       <v4>: *     NEW: call(foo[1], invoke|<v2>, <v3>) -> <v4>
{ foo[1] }   <v4>: *     COPY
=====================
== test2 ==
fun test2(foo: Foo, get: Foo.(Int) -> Int) {
    foo[1]
}
---------------------
             <v0>: Foo                     NEW: magic[FAKE_INITIALIZER](foo: Foo) -> <v0>
             <v1>: {<: Foo.(Int) -> Int}   NEW: magic[FAKE_INITIALIZER](get: Foo.(Int) -> Int) -> <v1>
foo          <v2>: Foo                     NEW: r(foo) -> <v2>
1            <v4>: Int                     NEW: r(1) -> <v4>
foo[1]       <v5>: *                       NEW: call(foo[1], invoke|<v3>, <v4>) -> <v5>
{ foo[1] }   <v5>: *                       COPY
=====================
