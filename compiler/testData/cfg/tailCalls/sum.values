== sum ==
tailRecursive fun sum(x: Long, sum: Long): Long {
    if (x == 0.toLong()) return sum
    return sum(x - 1, sum + x)
}
---------------------
                      <v0>: Long                     NEW: magic(x: Long) -> <v0>             
                      <v1>: Long                     NEW: magic(sum: Long) -> <v1>           
x                     <v2>: OR{{<: Any}, {<: Any}}   NEW: r(x) -> <v2>                       
0                     <v3>: {<: Number}              NEW: r(0) -> <v3>                       
toLong()              <v4>: {<: Any?}                NEW: call(toLong, toLong|<v3>) -> <v4>  
0.toLong()            <v4>: {<: Any?}                COPY                                    
x == 0.toLong()       <v5>: Boolean                  NEW: call(==, equals|<v2>, <v4>) -> <v5>
sum                   <v6>: Long                     NEW: r(sum) -> <v6>                     
x                     <v7>: Long                     NEW: r(x) -> <v7>                       
1                     <v8>: Int                      NEW: r(1) -> <v8>                       
x - 1                 <v9>: Long                     NEW: call(-, minus|<v7>, <v8>) -> <v9>  
sum                   <v10>: Long                    NEW: r(sum) -> <v10>                    
x                     <v11>: Long                    NEW: r(x) -> <v11>                      
sum + x               <v12>: Long                    NEW: call(+, plus|<v10>, <v11>) -> <v12>
sum(x - 1, sum + x)   <v13>: Long                    NEW: call(sum, sum|<v9>, <v12>) -> <v13>
=====================
