== Delegate ==
class Delegate {
    fun get(_this: Nothing?, p: PropertyMetadata): Int = 0
}
---------------------
L0:
  1 <START>
L1:
    <END>      NEXT:[<SINK>]
error:
    <ERROR>    PREV:[]
sink:
    <SINK>     PREV:[<ERROR>, <END>]
=====================
== get ==
fun get(_this: Nothing?, p: PropertyMetadata): Int = 0
---------------------
L0:
  1 <START>
    v(_this: Nothing?)
    magic[FAKE_INITIALIZER](_this: Nothing?) -> <v0>
    w(_this|<v0>)
    v(p: PropertyMetadata)
    magic[FAKE_INITIALIZER](p: PropertyMetadata) -> <v1>
    w(p|<v1>)
    r(0) -> <v2>
    ret(*|<v2>) L1
L1:
    <END>                                                   NEXT:[<SINK>]
error:
    <ERROR>                                                 PREV:[]
sink:
    <SINK>                                                  PREV:[<ERROR>, <END>]
=====================
== a ==
val a = Delegate()
---------------------
L0:
  1 <START>
    v(val a = Delegate())
    mark(Delegate())
    call(Delegate(), <init>) -> <v0>
    w(a|<v0>)
L1:
    <END>                               NEXT:[<SINK>]
error:
    <ERROR>                             PREV:[]
sink:
    <SINK>                              PREV:[<ERROR>, <END>]
=====================
== b ==
val b by a
---------------------
L0:
  1 <START>
    v(val b by a)
    r(a) -> <v0>
    magic[VALUE_CONSUMER](val b by a|<v0>) -> <v1>
L1:
    <END>                                             NEXT:[<SINK>]
error:
    <ERROR>                                           PREV:[]
sink:
    <SINK>                                            PREV:[<ERROR>, <END>]
=====================