package

package kt1805 {
    internal fun test(): kotlin.Unit

    internal open class Some {
        public constructor Some()
        private final val privateField: kotlin.Int = 12
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class SomeSubclass : kt1805.Some {
        public constructor SomeSubclass()
        invisible_fake final override /*1*/ /*fake_override*/ val privateField: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        internal final fun test(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
