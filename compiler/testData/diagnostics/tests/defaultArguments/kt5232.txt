package

internal interface A {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    internal open fun visit(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.String = ...): kotlin.String
}

internal final class B : A {
    public constructor B()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    internal open override /*1*/ fun visit(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.String = ...): kotlin.String
}

internal final class C : A {
    public constructor C()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    internal open fun visit(/*0*/ a: kotlin.Int): kotlin.String
    internal open override /*1*/ /*fake_override*/ fun visit(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.String = ...): kotlin.String
}
