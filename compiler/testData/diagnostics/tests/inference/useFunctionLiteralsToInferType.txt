package

package m {
    internal fun </*0*/ K, /*1*/ V> testGetOrPut(/*0*/ result: kotlin.MutableMap<K, kotlin.Set<V>>, /*1*/ key: K): kotlin.Unit
    internal fun testProperty(): m.Property<kotlin.Long>
    internal fun testProperty1(): m.Property<kotlin.String>
    internal fun </*0*/ K, /*1*/ V> kotlin.MutableMap<K, V>.getOrPut(/*0*/ key: K, /*1*/ defaultValue: () -> V): V

    internal final class Property</*0*/ T : kotlin.Comparable<T>> {
        public constructor Property</*0*/ T : kotlin.Comparable<T>>(/*0*/ name: kotlin.String, /*1*/ default: () -> T)
        internal final val default: () -> T
        internal final val name: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}