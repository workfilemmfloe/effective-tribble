package

internal final enum class A : kotlin.Enum<A> {
    public enum entry A1 : A {
        private constructor A1()
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        internal final override /*1*/ /*fake_override*/ fun valueOf(): kotlin.String
        internal final override /*1*/ /*fake_override*/ fun valueOf(/*0*/ s: kotlin.String): A
        internal final override /*1*/ /*fake_override*/ fun values(): kotlin.Array<A>
        internal final override /*1*/ /*fake_override*/ fun values(/*0*/ x: kotlin.String): kotlin.String

        public class object <class-object-for-A1> : A.A1 {
            private constructor <class-object-for-A1>()
            public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
            internal final override /*1*/ /*fake_override*/ fun valueOf(): kotlin.String
            internal final override /*1*/ /*fake_override*/ fun valueOf(/*0*/ s: kotlin.String): A
            internal final override /*1*/ /*fake_override*/ fun values(): kotlin.Array<A>
            internal final override /*1*/ /*fake_override*/ fun values(/*0*/ x: kotlin.String): kotlin.String
        }
    }

    public enum entry A2 : A {
        private constructor A2()
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        internal final override /*1*/ /*fake_override*/ fun valueOf(): kotlin.String
        internal final override /*1*/ /*fake_override*/ fun valueOf(/*0*/ s: kotlin.String): A
        internal final override /*1*/ /*fake_override*/ fun values(): kotlin.Array<A>
        internal final override /*1*/ /*fake_override*/ fun values(/*0*/ x: kotlin.String): kotlin.String

        public class object <class-object-for-A2> : A.A2 {
            private constructor <class-object-for-A2>()
            public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
            internal final override /*1*/ /*fake_override*/ fun valueOf(): kotlin.String
            internal final override /*1*/ /*fake_override*/ fun valueOf(/*0*/ s: kotlin.String): A
            internal final override /*1*/ /*fake_override*/ fun values(): kotlin.Array<A>
            internal final override /*1*/ /*fake_override*/ fun values(/*0*/ x: kotlin.String): kotlin.String
        }
    }

    private constructor A()
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
    public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    internal final fun valueOf(): kotlin.String
    internal final fun valueOf(/*0*/ s: kotlin.String): A
    internal final fun values(): kotlin.Array<A>
    internal final fun values(/*0*/ x: kotlin.String): kotlin.String

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): A
    public final /*synthesized*/ fun values(): kotlin.Array<A>
}
