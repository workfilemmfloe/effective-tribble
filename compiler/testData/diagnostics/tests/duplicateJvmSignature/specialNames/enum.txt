package

internal final enum class E : kotlin.Enum<E> {
    public enum entry A : E {
        private constructor A()
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: E): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        internal final override /*1*/ /*fake_override*/ fun valueOf(/*0*/ s: kotlin.String): E
        internal final override /*1*/ /*fake_override*/ fun values(): kotlin.Array<E>

        public class object <class-object-for-A> : E.A {
            private constructor <class-object-for-A>()
            public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: E): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
            internal final override /*1*/ /*fake_override*/ fun valueOf(/*0*/ s: kotlin.String): E
            internal final override /*1*/ /*fake_override*/ fun values(): kotlin.Array<E>
        }
    }

    private constructor E()
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: E): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
    public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    internal final fun valueOf(/*0*/ s: kotlin.String): E
    internal final fun values(): kotlin.Array<E>

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): E
    public final /*synthesized*/ fun values(): kotlin.Array<E>
}
