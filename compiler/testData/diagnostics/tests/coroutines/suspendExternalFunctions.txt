package

public suspend fun </*0*/ V> await(/*0*/ f: () -> V): V
public fun builder(/*0*/ coroutine c: Controller.() -> kotlin.coroutines.Continuation<kotlin.Unit>): kotlin.Unit
public suspend fun noParams(): kotlin.Unit
public fun test(): kotlin.Unit
public suspend fun yieldString(/*0*/ value: kotlin.String): kotlin.Unit
public suspend fun kotlin.Any.anyReceiver(/*0*/ y: kotlin.Int): kotlin.Double
public suspend fun </*0*/ V> Controller.await(/*0*/ f: kotlin.Int): V
public suspend fun Controller.severalParams(/*0*/ x: kotlin.String, /*1*/ y: kotlin.Int): kotlin.Double
public suspend fun kotlin.String.stringReceiver(/*0*/ y: kotlin.Int): kotlin.Double

public final class Controller {
    public constructor Controller()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
