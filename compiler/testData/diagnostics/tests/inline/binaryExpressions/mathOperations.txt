package

kotlin.inline() public fun </*0*/ T, /*1*/ U, /*2*/ V> inlineFunWithInvoke(/*0*/ s: (T) -> U, /*1*/ ext: T.(U) -> V): kotlin.Unit
kotlin.inline() public fun </*0*/ T, /*1*/ U, /*2*/ V> inlineFunWithInvoke(/*0*/ s: (T) -> U, /*1*/ ext: T.(U) -> V): kotlin.Unit
public fun </*0*/ T, /*1*/ U> ((T) -> U).minus(/*0*/ p: (T) -> U): kotlin.Unit
public fun </*0*/ T, /*1*/ U, /*2*/ V> (T.(U) -> V).minus(/*0*/ p: T.(U) -> V): kotlin.Unit
kotlin.inline() public fun </*0*/ T, /*1*/ U> ((T) -> U).plus(/*0*/ p: (T) -> U): kotlin.Unit
kotlin.inline() public fun </*0*/ T, /*1*/ U, /*2*/ V> (T.(U) -> V).plus(/*0*/ p: T.(U) -> V): kotlin.Unit
kotlin.inline() public fun </*0*/ T, /*1*/ U> ((T) -> U).submit(): kotlin.Unit
kotlin.inline() public fun </*0*/ T, /*1*/ U, /*2*/ V> (T.(U) -> V).submit(): kotlin.Unit
