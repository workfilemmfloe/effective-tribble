package

kotlin.inline() internal fun </*0*/ T, /*1*/ U, /*2*/ V> inlineFunWithInvoke(/*0*/ s: (T) -> U, /*1*/ ext: T.(U) -> V): kotlin.Unit
internal fun </*0*/ T, /*1*/ U> (T) -> U.minusAssign(/*0*/ p: (T) -> U): kotlin.Unit
internal fun </*0*/ T, /*1*/ U, /*2*/ V> T.(U) -> V.minusAssign(/*0*/ ext: T.(U) -> V): kotlin.Unit
kotlin.inline() internal fun </*0*/ T, /*1*/ U> (T) -> U.modAssign(/*0*/ p: (T) -> U): () -> kotlin.Unit
kotlin.inline() internal fun </*0*/ T, /*1*/ U, /*2*/ V> T.(U) -> V.modAssign(/*0*/ ext: T.(U) -> V): () -> kotlin.Unit
kotlin.inline() internal fun </*0*/ T, /*1*/ U> (T) -> U.plusAssign(/*0*/ p: (T) -> U): kotlin.Unit
kotlin.inline() internal fun </*0*/ T, /*1*/ U, /*2*/ V> T.(U) -> V.plusAssign(/*0*/ ext: T.(U) -> V): kotlin.Unit