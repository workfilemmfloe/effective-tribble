package

internal final class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    internal final inner class B {
        public constructor B()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        internal final enum class E : kotlin.Enum<A.B.E> {
            public enum entry ENTRY : A.B.E {
                private constructor ENTRY()
                public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A.B.E): kotlin.Int
                public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
                public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
                public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
                public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
                public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

                public class object <class-object-for-ENTRY> : A.B.E.ENTRY {
                    private constructor <class-object-for-ENTRY>()
                    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A.B.E): kotlin.Int
                    public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
                    public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
                    public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
                    public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
                    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
                }
            }

            private constructor E()
            public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: A.B.E): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public final override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

            // Static members
            public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): A.B.E
            public final /*synthesized*/ fun values(): kotlin.Array<A.B.E>
        }
    }
}
