package

package abstract {

    internal abstract enum class MyAbstractEnum : kotlin.Enum<abstract.MyAbstractEnum> {
        private constructor MyAbstractEnum()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        // Static members
        public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): abstract.MyAbstractEnum
        public final /*synthesized*/ fun values(): kotlin.Array<abstract.MyAbstractEnum>
    }
}