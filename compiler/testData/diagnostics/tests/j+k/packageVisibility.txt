package

package a {
    internal val mc: a.MyJavaClass
    internal val x: kotlin.Int
    internal val y: kotlin.Int
    internal val z: a.MyJavaClass.NestedClass

    public/*package*/ open class MyJavaClass {
        public/*package*/ constructor MyJavaClass()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        public/*package*/ open class NestedClass {
            public/*package*/ constructor NestedClass()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

            // Static members
            public/*package*/ open fun staticMethodOfNested(): kotlin.Int
        }

        // Static members
        public/*package*/ open fun staticMethod(): kotlin.Int
    }

    package a.c {
        internal val mc1: a.MyJavaClass
        internal val x: kotlin.Int
        internal val y: kotlin.Int
        internal val z: a.MyJavaClass.NestedClass
    }
}

package b {
    internal val mc1: a.MyJavaClass
    internal val x: kotlin.Int
    internal val y: kotlin.Int
    internal val z: a.MyJavaClass.NestedClass
}
