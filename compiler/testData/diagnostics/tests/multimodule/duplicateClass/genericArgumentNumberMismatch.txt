// -- Module: <m1> --
package

package p {

    public final class A</*0*/ X, /*1*/ Y> {
        public constructor A</*0*/ X, /*1*/ Y>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    public final class M1 {
        public constructor M1()
        public final val a: [ERROR : A<Int>]
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}


// -- Module: <m2> --
package

package p {
    public fun foo(/*0*/ a: [ERROR : A<Int>]): kotlin.Unit

    public final class A</*0*/ X, /*1*/ Y> {
        public constructor A</*0*/ X, /*1*/ Y>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}


// -- Module: <m3> --
package

internal fun test(): kotlin.Unit

package p {
    public fun foo(/*0*/ a: [ERROR : A<Int>]): kotlin.Unit

    public final class A</*0*/ X, /*1*/ Y> {
        // -- Module: <m1> --
    }

    public final class A</*0*/ X, /*1*/ Y> {
        // -- Module: <m2> --
    }

    public final class M1 {
        // -- Module: <m1> --
    }
}