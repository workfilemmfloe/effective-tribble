package

internal fun foo(/*0*/ f: (kotlin.Any) -> kotlin.Int, /*1*/ a: kotlin.Any): kotlin.Int
internal fun foo(/*0*/ f: (kotlin.Int) -> kotlin.Int, /*1*/ i: kotlin.Int): kotlin.Int
internal fun foo(/*0*/ f: (kotlin.String) -> kotlin.Int, /*1*/ s: kotlin.String): kotlin.Int
internal fun foo(/*0*/ a: kotlin.Any): kotlin.Any
internal fun foo(/*0*/ a: kotlin.Any, /*1*/ i: kotlin.Int, /*2*/ f: () -> kotlin.Int): kotlin.String
internal fun foo(/*0*/ i: kotlin.Int): kotlin.Int
internal fun foo(/*0*/ i: kotlin.Int, /*1*/ f: (kotlin.Int) -> kotlin.Int): kotlin.Int
internal fun foo(/*0*/ s: kotlin.String, /*1*/ f: (kotlin.String, kotlin.String) -> kotlin.Int): kotlin.Int
internal fun foo(/*0*/ s: kotlin.String, /*1*/ a: kotlin.Any): kotlin.String
internal fun </*0*/ T> id(/*0*/ t: T): T
internal fun test(): kotlin.Unit

internal object A {
    private constructor A()
    internal final val iii: kotlin.Int = 42
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    public class object <class-object-for-A> : A {
        private constructor <class-object-for-A>()
        internal final override /*1*/ /*fake_override*/ val iii: kotlin.Int
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}