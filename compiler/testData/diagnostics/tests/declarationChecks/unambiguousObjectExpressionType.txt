package

internal val packageInternal2Property: MyClass
internal val packageInternalProperty: MyClass
private val packagePrivateProperty: MyClass
protected val packageProtectedProperty: packageProtectedProperty.<no name provided>
public val packagePublic2Property: MyClass
public val packagePublicProperty: packagePublicProperty.<no name provided>
internal fun fooPackage(): kotlin.Unit
internal fun internal2Function(): MyClass
internal fun internalFunction(): MyClass
private fun privateFunction(): MyClass
protected fun protectedFunction(): protectedFunction.<no name provided>
public fun public2Function(): MyClass
public fun publicFunction(): publicFunction.<no name provided>
internal fun testFunctions(): kotlin.Unit
internal fun testProperties(): kotlin.Unit

internal final class Foo {
    public constructor Foo()
    internal final val internal2Property: MyClass
    internal final val internalProperty: MyClass
    private final val privateProperty: Foo.privateProperty.<no name provided>
    protected final val protected2Property: MyClass
    protected final val protectedProperty: Foo.protectedProperty.<no name provided>
    public final val public2Property: MyClass
    public final val publicProperty: Foo.publicProperty.<no name provided>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    internal final fun internal2Function(): MyClass
    internal final fun internalFunction(): MyClass
    private final fun privateFunction(): Foo.privateFunction.<no name provided>
    protected final fun protected2Function(): MyClass
    protected final fun protectedFunction(): Foo.protectedFunction.<no name provided>
    public final fun public2Function(): MyClass
    public final fun publicFunction(): Foo.publicFunction.<no name provided>
    internal final fun testFunctions(): kotlin.Unit
    internal final fun testProperties(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    internal final class FooInner {
        public constructor FooInner()
        internal final val internal2Property: MyClass
        internal final val internalProperty: MyClass
        private final val privateProperty: Foo.FooInner.privateProperty.<no name provided>
        protected final val protected2Property: MyClass
        protected final val protectedProperty: Foo.FooInner.protectedProperty.<no name provided>
        public final val public2Property: MyClass
        public final val publicProperty: Foo.FooInner.publicProperty.<no name provided>
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        internal final fun internal2Function(): MyClass
        internal final fun internalFunction(): MyClass
        private final fun privateFunction(): Foo.FooInner.privateFunction.<no name provided>
        protected final fun protected2Function(): MyClass
        protected final fun protectedFunction(): Foo.FooInner.protectedFunction.<no name provided>
        public final fun public2Function(): MyClass
        public final fun publicFunction(): Foo.FooInner.publicFunction.<no name provided>
        internal final fun testFunctions(): kotlin.Unit
        internal final fun testProperties(): kotlin.Unit
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

internal open class MyClass {
    public constructor MyClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun f1(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
