package

internal val packageInternal2Property: <no name provided>
internal val packageInternalProperty: <no name provided>
private val packagePrivateProperty: <no name provided>
protected val packageProtectedProperty: <no name provided>
public val packagePublicProperty: <no name provided>
internal fun fooPackage(): kotlin.Unit
internal fun packageInternal2Function(): packageInternal2Function.<no name provided>
internal fun packageInternalFunction(): packageInternalFunction.<no name provided>
protected fun packageProtectedFunction(): packageProtectedFunction.<no name provided>
public fun packagePublicFunction(): packagePublicFunction.<no name provided>

internal final class Foo {
    public constructor Foo()
    internal final val internal2Property: Foo.<init>.<no name provided>
    internal final val internalProperty: Foo.<init>.<no name provided>
    private final val privateProperty: Foo.<init>.<no name provided>
    protected final val protectedProperty: Foo.<init>.<no name provided>
    public final val publicProperty: Foo.<init>.<no name provided>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    internal final fun internal2Function(): Foo.internal2Function.<no name provided>
    internal final fun internalFunction(): Foo.internalFunction.<no name provided>
    private final fun privateFunction(): Foo.privateFunction.<no name provided>
    protected final fun protectedFunction(): Foo.protectedFunction.<no name provided>
    public final fun publicFunction(): Foo.publicFunction.<no name provided>
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    internal final class FooInner {
        public constructor FooInner()
        internal final val internal2Property: Foo.FooInner.<init>.<no name provided>
        internal final val internalProperty: Foo.FooInner.<init>.<no name provided>
        private final val privatePropertyInner: Foo.FooInner.<init>.<no name provided>
        protected final val protectedProperty: Foo.FooInner.<init>.<no name provided>
        public final val publicProperty: Foo.FooInner.<init>.<no name provided>
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        internal final fun internal2Function(): Foo.FooInner.internal2Function.<no name provided>
        internal final fun internalFunction(): Foo.FooInner.internalFunction.<no name provided>
        private final fun privateFunctionInner(): Foo.FooInner.privateFunctionInner.<no name provided>
        protected final fun protectedFunction(): Foo.FooInner.protectedFunction.<no name provided>
        public final fun publicFunction(): Foo.FooInner.publicFunction.<no name provided>
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

internal open class MyClass {
    public constructor MyClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun f2(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal trait MyTrait {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal open fun f1(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}