package

internal fun foo(): kotlin.Unit

kotlin.data() internal open class A {
    public constructor A(/*0*/ x: kotlin.Int)
    private final val x: kotlin.Int
    private final /*synthesized*/ fun component1(): kotlin.Int
    internal final /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ...): A
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal final class B : A {
    public constructor B()
    invisible_fake final override /*1*/ /*fake_override*/ val x: kotlin.Int
    internal final fun component1(): kotlin.String
    internal final override /*1*/ /*fake_override*/ fun copy(/*0*/ x: kotlin.Int = ...): A
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}