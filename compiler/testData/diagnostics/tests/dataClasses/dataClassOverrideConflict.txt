package

kotlin.data() public open class A {
    public constructor A(/*0*/ x: kotlin.Int, /*1*/ y: kotlin.String)
    public final val x: kotlin.Int
    public final val y: kotlin.String
    public final /*synthesized*/ fun component1(): kotlin.Int
    public final /*synthesized*/ fun component2(): kotlin.String
    public final /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): A
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

kotlin.data() public final class B : A {
    public constructor B(/*0*/ z: kotlin.String)
    public final override /*1*/ /*fake_override*/ val x: kotlin.Int
    public final override /*1*/ /*fake_override*/ val y: kotlin.String
    public final val z: kotlin.String
    public final override /*1*/ /*synthesized*/ fun component1(): kotlin.String
    public final override /*1*/ /*fake_override*/ fun component2(): kotlin.String
    public final override /*1*/ /*fake_override*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): A
    public final /*synthesized*/ fun copy(/*0*/ z: kotlin.String = ...): B
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
