package

internal final class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal abstract class XXX {
    public constructor XXX()
    internal abstract val a: kotlin.Int
    internal final val a11: ((kotlin.Int) -> kotlin.Int)? = null
    internal final val a12: ((kotlin.Int) -> kotlin.Int)? = null
    internal abstract val a13: kotlin.Int.(kotlin.Int) -> kotlin.Int
    internal abstract val a14: n.B.(kotlin.Int) -> kotlin.Int
    internal abstract val a15: kotlin.Int?.(kotlin.Int) -> kotlin.Int
    internal abstract val a152: kotlin.Int?.(kotlin.Int) -> kotlin.Int
    internal abstract val a16: (kotlin.Int) -> (kotlin.Int) -> kotlin.Int
    internal abstract val a17: (kotlin.Int) -> kotlin.Int.(kotlin.Int) -> kotlin.Int
    internal abstract val a18: (kotlin.Int) -> (kotlin.Int) -> kotlin.Int
    internal abstract val a19: ((kotlin.Int) -> kotlin.Int) -> kotlin.Int
    internal abstract val a2: n.B
    internal abstract val a3: A
    internal abstract val a31: n.B
    internal abstract val a4: A?
    internal abstract val a5: A?
    internal abstract val a6: A?
    internal abstract val a7: (A) -> n.B
    internal abstract val a8: (A, n.B) -> n.B
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal abstract class YYY {
    public constructor YYY()
    internal final val a11: ((kotlin.Int) -> kotlin.Int)? = null
    internal final val a12: ((kotlin.Int) -> kotlin.Int)? = null
    internal abstract val a13: kotlin.Int.(kotlin.Int) -> kotlin.Int
    internal abstract val a14: n.B.(kotlin.Int) -> kotlin.Int
    internal abstract val a15: kotlin.Int?.(kotlin.Int) -> kotlin.Int
    internal abstract val a152: kotlin.Int?.(kotlin.Int) -> kotlin.Int
    internal abstract val a16: (kotlin.Int) -> (kotlin.Int) -> kotlin.Int
    internal abstract val a17: (kotlin.Int) -> kotlin.Int.(kotlin.Int) -> kotlin.Int
    internal abstract val a18: (kotlin.Int) -> (kotlin.Int) -> kotlin.Int
    internal abstract val a19: ((kotlin.Int) -> kotlin.Int) -> kotlin.Int
    internal abstract val a7: (A) -> n.B
    internal abstract val a8: (A, n.B) -> n.B
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

package n {

    internal final class B {
        public constructor B()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}
