package

package foo {
    internal val c1: kotlin.String
    internal val c2: kotlin.String
    internal val c3: kotlin.String
    internal val d1: kotlin.String
    internal val d2: kotlin.String
    internal val d3: kotlin.String
    internal fun </*0*/ A, /*1*/ B> getMyProperty1(): foo.MyProperty1<A, B>
    internal fun </*0*/ A> getMyProperty2(): foo.MyProperty2<A>
    internal fun </*0*/ A> getMyProperty3(): foo.MyProperty3<A>
    internal fun println(/*0*/ a: kotlin.Any?): kotlin.Any?

    internal final class A1 {
        public constructor A1()
        internal final val a1: kotlin.String
        internal final val b1: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class A2 {
        public constructor A2()
        internal final val a2: kotlin.String
        internal final val b2: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class A3 {
        public constructor A3()
        internal final val a3: kotlin.String
        internal final val b3: kotlin.String
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class MyProperty1</*0*/ R, /*1*/ T> {
        public constructor MyProperty1</*0*/ R, /*1*/ T>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun get(/*0*/ thisRef: R, /*1*/ desc: kotlin.PropertyMetadata): T
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class MyProperty2</*0*/ T> {
        public constructor MyProperty2</*0*/ T>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun get(/*0*/ thisRef: kotlin.Any?, /*1*/ desc: kotlin.PropertyMetadata): T
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class MyProperty3</*0*/ T> {
        public constructor MyProperty3</*0*/ T>()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public final fun get(/*0*/ thisRef: T, /*1*/ desc: kotlin.PropertyMetadata): kotlin.String
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}