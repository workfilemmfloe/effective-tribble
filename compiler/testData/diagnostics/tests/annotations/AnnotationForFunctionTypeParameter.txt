package

public fun </*0*/ T> topFun(): kotlin.Int

@kotlin.annotation.annotation() public final class A1 : kotlin.Annotation {
    public constructor A1()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

@kotlin.annotation.annotation() public final class A2 : kotlin.Annotation {
    public constructor A2(/*0*/ some: kotlin.Int = ...)
    public final val some: kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class SomeClass {
    public constructor SomeClass()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final fun </*0*/ T> method(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
