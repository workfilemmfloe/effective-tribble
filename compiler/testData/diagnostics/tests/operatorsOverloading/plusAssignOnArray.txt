package

internal fun test(): kotlin.Unit
internal fun C.plus(/*0*/ a: kotlin.Any): C
internal fun C.plusAssign(/*0*/ a: kotlin.Any): kotlin.Unit

internal final class C {
    public constructor C()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun get(/*0*/ i: kotlin.Int): C
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

internal final class C1 {
    public constructor C1()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    internal final fun get(/*0*/ i: kotlin.Int): C
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    internal final fun set(/*0*/ i: kotlin.Int, /*1*/ v: C): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
