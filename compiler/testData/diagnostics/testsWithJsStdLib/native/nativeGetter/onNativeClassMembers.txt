package

kotlin.js.native() internal final class A {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    kotlin.js.nativeGetter() internal final fun foo(/*0*/ a: kotlin.Double): kotlin.String?
    kotlin.js.nativeGetter() internal final fun get(/*0*/ a: kotlin.String): kotlin.Any?
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    kotlin.js.nativeGetter() internal final fun take(/*0*/ a: kotlin.Number): kotlin.String?
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    internal class object Default {
        private constructor Default()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        kotlin.js.nativeGetter() internal final fun foo(/*0*/ a: kotlin.Double): kotlin.String?
        kotlin.js.nativeGetter() internal final fun get(/*0*/ a: kotlin.String): kotlin.Any?
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        kotlin.js.nativeGetter() internal final fun take(/*0*/ a: kotlin.Number): kotlin.String?
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

kotlin.js.native() internal final class B {
    public constructor B()
    kotlin.js.nativeGetter() internal final val foo: kotlin.Int = 0
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

    internal class object Default {
        private constructor Default()
        kotlin.js.nativeGetter() internal final val foo: kotlin.Int = 0
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        kotlin.js.nativeGetter() internal object Obj2 {
            private constructor Obj2()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }

    kotlin.js.nativeGetter() internal object Obj1 {
        private constructor Obj1()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }
}

kotlin.js.native() internal final class C {
    public constructor C()
    kotlin.js.nativeGetter() internal final fun bar(/*0*/ a: kotlin.String): kotlin.Int
    kotlin.js.nativeGetter() internal final fun baz(/*0*/ a: kotlin.String = ...): kotlin.Int?
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    kotlin.js.nativeGetter() internal final fun foo(/*0*/ a: kotlin.Int): kotlin.Unit
    kotlin.js.nativeGetter() internal final fun get(): kotlin.Any?
    kotlin.js.nativeGetter() internal final fun get(/*0*/ a: A): kotlin.Any?
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    kotlin.js.nativeGetter() internal final fun kotlin.Int.get(/*0*/ a: kotlin.String): kotlin.Int?
    kotlin.js.nativeGetter() internal final fun kotlin.Int.get2(/*0*/ a: kotlin.Number): kotlin.String?
    kotlin.js.nativeGetter() internal final fun kotlin.Int.get3(/*0*/ a: kotlin.Int): kotlin.String?

    internal class object Default {
        private constructor Default()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        kotlin.js.nativeGetter() internal final fun kotlin.Int.get(/*0*/ a: kotlin.String): kotlin.Int?
        kotlin.js.nativeGetter() internal final fun kotlin.Int.get2(/*0*/ a: kotlin.Number): kotlin.String?
        kotlin.js.nativeGetter() internal final fun kotlin.Int.get3(/*0*/ a: kotlin.Int): kotlin.String?
    }
}
