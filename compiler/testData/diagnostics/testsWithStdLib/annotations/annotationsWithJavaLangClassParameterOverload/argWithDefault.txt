package

public final annotation class A : kotlin.Annotation {
    public /*synthesized*/ constructor A(/*0*/ arg: java.lang.Class<*> = ...)
    public constructor A(/*0*/ arg: kotlin.reflect.KClass<*> = ...)
    public final val arg: kotlin.reflect.KClass<*>
    public abstract fun arg(): kotlin.reflect.KClass<*>
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

A(arg = javaClass<kotlin.String>(): java.lang.Class<kotlin.String>) internal final class MyClass1 {
    public constructor MyClass1()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

A() internal final class MyClass3 {
    public constructor MyClass3()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
