package

package test {

    internal final annotation class AnnClass : kotlin.Annotation {
        public constructor AnnClass(/*0*/ a: java.lang.Class<out kotlin.Any?>)
        internal final val a: java.lang.Class<out kotlin.Any?>
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    }

    internal final class MyClass {
        public constructor MyClass()
        public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
        public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
        public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String

        test.AnnClass(a = test.MyClass.class: java.lang.Class<test.MyClass>) internal class object <class-object-for-MyClass> {
            private constructor <class-object-for-MyClass>()
            public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
            public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
            public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
        }
    }
}
