package

A(x = javaClass<kotlin.Any>(): java.lang.Class<kotlin.Any>, y = "": kotlin.String) internal fun test1(): kotlin.Unit

public final annotation class A : kotlin.Annotation {
    public /*synthesized*/ constructor A(/*0*/ x: java.lang.Class<*> = ..., /*1*/ y: kotlin.Int)
    public constructor A(/*0*/ x: kotlin.reflect.KClass<*> = ..., /*1*/ y: kotlin.Int)
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public abstract fun x(): kotlin.reflect.KClass<*>
    public abstract fun y(): kotlin.Int
}
