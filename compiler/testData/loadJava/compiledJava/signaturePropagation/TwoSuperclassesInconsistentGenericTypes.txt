package test

public /*synthesized*/ fun TwoSuperclassesInconsistentGenericTypes(/*0*/ function: () -> kotlin.(Mutable)List<kotlin.String!>!): test.TwoSuperclassesInconsistentGenericTypes

public trait TwoSuperclassesInconsistentGenericTypes {
    public abstract fun foo(): kotlin.(Mutable)List<kotlin.String!>!

    public trait Other {
        public abstract fun foo(): kotlin.(Mutable)List<kotlin.String!>!
    }

    public open class Sub : test.TwoSuperclassesInconsistentGenericTypes, test.TwoSuperclassesInconsistentGenericTypes.Other {
        public constructor Sub()
        public open override /*2*/ fun foo(): kotlin.(Mutable)List<kotlin.String!>!
    }

    // Static members
    public final /*synthesized*/ fun Other(/*0*/ function: () -> kotlin.(Mutable)List<kotlin.String!>!): test.TwoSuperclassesInconsistentGenericTypes.Other
}
