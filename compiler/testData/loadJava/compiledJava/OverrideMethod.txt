package test

public open class OverrideMethod : java.lang.Object {
    public constructor OverrideMethod()
    
    public/*package*/ open inner class Base : test.OverrideMethod.SuperBase {
        public/*package*/ constructor Base()
        public/*package*/ open fun bar(): jet.Unit
        public/*package*/ open fun foo(/*0*/ p0: jet.String?): jet.String?
        public/*package*/ open override /*1*/ /*fake_override*/ fun quux(/*0*/ p0: jet.Int): jet.Unit
    }
    
    public/*package*/ open inner class Derived : test.OverrideMethod.Base {
        public/*package*/ constructor Derived()
        public/*package*/ open override /*1*/ /*fake_override*/ fun bar(): jet.Unit
        public/*package*/ open fun baz(): jet.Unit
        public/*package*/ open override /*1*/ fun foo(/*0*/ p0: jet.String?): jet.String?
        public/*package*/ open override /*1*/ /*fake_override*/ fun quux(/*0*/ p0: jet.Int): jet.Unit
    }
    
    public/*package*/ open inner class SuperBase : java.lang.Object {
        public/*package*/ constructor SuperBase()
        public/*package*/ open fun quux(/*0*/ p0: jet.Int): jet.Unit
    }
}
