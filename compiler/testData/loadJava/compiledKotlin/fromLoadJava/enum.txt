package test

internal final enum class Test : kotlin.Enum<test.Test> {
    public enum entry A : test.Test {
        /*primary*/ private constructor A()
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Test): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
    }

    public enum entry B : test.Test {
        /*primary*/ private constructor B()
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Test): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
    }

    /*primary*/ private constructor Test(/*0*/ a: kotlin.Int)
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Test): kotlin.Int
    public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
    public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.Test
    public final /*synthesized*/ fun values(): kotlin.Array<test.Test>
}
