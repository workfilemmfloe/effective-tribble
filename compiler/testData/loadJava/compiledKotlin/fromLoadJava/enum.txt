package test

public final enum class Test : kotlin.Enum<test.Test> {
    enum entry A

    enum entry B

    /*primary*/ private constructor Test(/*0*/ a: kotlin.Int)
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
        public final override /*1*/ /*fake_override*/ fun <get-name>(): kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
        public final override /*1*/ /*fake_override*/ fun <get-ordinal>(): kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.Test): kotlin.Int

    // Static members
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.Test
    public final /*synthesized*/ fun values(): kotlin.Array<test.Test>
}
