package test

public final enum class E : kotlin.Enum<test.E> {
    enum entry ONE

    enum entry TWO

    enum entry THREE

    enum entry FOUR

    enum entry FIVE

    enum entry SIX

    enum entry SEVEN

    enum entry EIGHT

    /*primary*/ private constructor E()
    public final override /*1*/ /*fake_override*/ val name: kotlin.String
        public final override /*1*/ /*fake_override*/ fun <get-name>(): kotlin.String
    public final override /*1*/ /*fake_override*/ val ordinal: kotlin.Int
        public final override /*1*/ /*fake_override*/ fun <get-ordinal>(): kotlin.Int
    protected final override /*1*/ /*fake_override*/ fun clone(): kotlin.Any
    public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.E): kotlin.Int

    // Static members
    public final /*synthesized*/ val values: kotlin.Array<test.E>
        public final fun <get-values>(): kotlin.Array<test.E>
    public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.E
    @kotlin.Deprecated(message = "Use 'values' property instead", replaceWith = kotlin.ReplaceWith(expression = "this.values", imports = {})) public final /*synthesized*/ fun values(): kotlin.Array<test.E>
}
