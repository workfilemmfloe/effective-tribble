package test

internal final class A {
    /*primary*/ public constructor A()

    internal class object Default {
        /*primary*/ private constructor Default()
    }

    internal final enum class E : kotlin.Enum<test.A.E> {
        public enum entry ENTRY : test.A.E {
            /*primary*/ private constructor ENTRY()
            public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.A.E): kotlin.Int
            public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
            public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int
        }

        /*primary*/ private constructor E()
        public final override /*1*/ /*fake_override*/ fun compareTo(/*0*/ other: test.A.E): kotlin.Int
        public final override /*1*/ /*fake_override*/ fun name(): kotlin.String
        public final override /*1*/ /*fake_override*/ fun ordinal(): kotlin.Int

        // Static members
        public final /*synthesized*/ fun valueOf(/*0*/ value: kotlin.String): test.A.E
        public final /*synthesized*/ fun values(): kotlin.Array<test.A.E>
    }
}
