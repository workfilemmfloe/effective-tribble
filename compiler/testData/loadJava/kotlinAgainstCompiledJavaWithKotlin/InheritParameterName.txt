package test

public /*synthesized*/ fun A(/*0*/ function: (kotlin.Int) -> kotlin.Unit): test.A

public trait A : java.lang.Object {
    public abstract fun foo(/*0*/ p0: kotlin.Int): kotlin.Unit
}

internal trait B {
    internal abstract fun foo(/*0*/ kotlinName: kotlin.Int): kotlin.Unit
}

internal abstract class ZAB : test.A, test.B {
    public constructor ZAB()
    public abstract override /*2*/ /*fake_override*/ fun foo(/*0*/ kotlinName: kotlin.Int): kotlin.Unit
}

internal abstract class ZBA : test.B, test.A {
    public constructor ZBA()
    public abstract override /*2*/ /*fake_override*/ fun foo(/*0*/ kotlinName: kotlin.Int): kotlin.Unit
}
