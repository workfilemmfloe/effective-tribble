package test

public final enum class Enum : jet.Enum<test.Enum> {
    private constructor Enum()
    public final override /*1*/ /*fake_override*/ fun name() : jet.String
    public final override /*1*/ /*fake_override*/ fun ordinal() : jet.Int
    
    public class object <class-object-for-Enum> {
        private constructor <class-object-for-Enum>()
        public final val A : test.Enum
        public final val B : test.Enum
        public final val C : test.Enum
        public final fun valueOf(/*0*/ value : jet.String) : test.Enum
        public final fun values() : jet.Array<test.Enum>
    }
    
    public open inner class Inner : java.lang.Object {
        public constructor Inner()
        public/*package*/ open fun bar() : Unit
    }
    
    public open class Nested : java.lang.Object {
        public constructor Nested()
        public/*package*/ open fun foo() : Unit
    }
}
