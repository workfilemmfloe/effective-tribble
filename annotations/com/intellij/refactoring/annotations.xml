<root>
  <item
      name='com.intellij.refactoring.BaseRefactoringProcessor boolean preprocessUsages(com.intellij.openapi.util.Ref&lt;com.intellij.usageView.UsageInfo[]&gt;)'>
    <annotation name='kotlin.jvm.KotlinSignature'>
      <val name="value" val="&quot;fun preprocessUsages(refUsages: Ref&lt;Array&lt;UsageInfo&gt;&gt;): Boolean&quot;"/>
    </annotation>
  </item>
  <item name='com.intellij.refactoring.BaseRefactoringProcessor myProject'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
    <item name='com.intellij.refactoring.BaseRefactoringProcessor void performRefactoring(com.intellij.usageView.UsageInfo[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item
      name='com.intellij.refactoring.BaseRefactoringProcessor.ConflictsInTestsException java.util.Collection&lt;java.lang.String&gt; getMessages()'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item
      name='com.intellij.refactoring.MultiFileTestCase.PerformAction void performAction(com.intellij.openapi.vfs.VirtualFile, com.intellij.openapi.vfs.VirtualFile) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item
      name='com.intellij.refactoring.RefactoringActionHandler void invoke(com.intellij.openapi.project.Project, com.intellij.openapi.editor.Editor, com.intellij.psi.PsiFile, com.intellij.openapi.actionSystem.DataContext) 1'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item
      name='com.intellij.refactoring.RefactoringActionHandler void invoke(com.intellij.openapi.project.Project, com.intellij.openapi.editor.Editor, com.intellij.psi.PsiFile, com.intellij.openapi.actionSystem.DataContext) 2'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
  <item name='com.intellij.refactoring.RefactoringHelper void performOperation(com.intellij.openapi.project.Project, T) 0'>
    <annotation name='org.jetbrains.annotations.NotNull'/>
  </item>
</root>