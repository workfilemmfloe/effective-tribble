/*
 * Copyright 2010-2015 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.completion;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.InnerTestClasses;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.JetTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@InnerTestClasses({
        JvmBasicCompletionTestGenerated.Common.class,
        JvmBasicCompletionTestGenerated.Java.class,
})
@RunWith(JUnit3RunnerWithInners.class)
public class JvmBasicCompletionTestGenerated extends AbstractJvmBasicCompletionTest {
    @TestMetadata("idea/testData/completion/basic/common")
    @TestDataPath("$PROJECT_ROOT")
    @InnerTestClasses({
            Common.Annotations.class,
            Common.Extensions.class,
            Common.NamedParameters.class,
            Common.TypeArgsOrNot.class,
            Common.Visibility.class,
    })
    @RunWith(JUnit3RunnerWithInners.class)
    public static class Common extends AbstractJvmBasicCompletionTest {
        @TestMetadata("AfterFloatOnNewLine.kt")
        public void testAfterFloatOnNewLine() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/AfterFloatOnNewLine.kt");
            doTest(fileName);
        }

        @TestMetadata("AfterIntSeparatedWithComments.kt")
        public void testAfterIntSeparatedWithComments() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/AfterIntSeparatedWithComments.kt");
            doTest(fileName);
        }

        @TestMetadata("AfterNullable.kt")
        public void testAfterNullable() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/AfterNullable.kt");
            doTest(fileName);
        }

        @TestMetadata("AfterNullableAutoCast.kt")
        public void testAfterNullableAutoCast() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/AfterNullableAutoCast.kt");
            doTest(fileName);
        }

        @TestMetadata("AfterNullableAutoCast2.kt")
        public void testAfterNullableAutoCast2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/AfterNullableAutoCast2.kt");
            doTest(fileName);
        }

        public void testAllFilesPresentInCommon() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/completion/basic/common"), Pattern.compile("^(.+)\\.kt$"), true);
        }

        @TestMetadata("BackingFields1.kt")
        public void testBackingFields1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BackingFields1.kt");
            doTest(fileName);
        }

        @TestMetadata("BackingFields2.kt")
        public void testBackingFields2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BackingFields2.kt");
            doTest(fileName);
        }

        @TestMetadata("BackingFields3.kt")
        public void testBackingFields3() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BackingFields3.kt");
            doTest(fileName);
        }

        @TestMetadata("BackingFields4.kt")
        public void testBackingFields4() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BackingFields4.kt");
            doTest(fileName);
        }

        @TestMetadata("BackingFields5.kt")
        public void testBackingFields5() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BackingFields5.kt");
            doTest(fileName);
        }

        @TestMetadata("BackingFields6.kt")
        public void testBackingFields6() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BackingFields6.kt");
            doTest(fileName);
        }

        @TestMetadata("BackingFieldsInStringTemplate.kt")
        public void testBackingFieldsInStringTemplate() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BackingFieldsInStringTemplate.kt");
            doTest(fileName);
        }

        @TestMetadata("BasicAny.kt")
        public void testBasicAny() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BasicAny.kt");
            doTest(fileName);
        }

        @TestMetadata("BasicInt.kt")
        public void testBasicInt() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BasicInt.kt");
            doTest(fileName);
        }

        @TestMetadata("BeforeDotInCall.kt")
        public void testBeforeDotInCall() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/BeforeDotInCall.kt");
            doTest(fileName);
        }

        @TestMetadata("CallLocalLambda.kt")
        public void testCallLocalLambda() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/CallLocalLambda.kt");
            doTest(fileName);
        }

        @TestMetadata("classObjectElementsInClass.kt")
        public void testClassObjectElementsInClass() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/classObjectElementsInClass.kt");
            doTest(fileName);
        }

        @TestMetadata("ClassRedeclaration1.kt")
        public void testClassRedeclaration1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ClassRedeclaration1.kt");
            doTest(fileName);
        }

        @TestMetadata("ClassRedeclaration2.kt")
        public void testClassRedeclaration2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ClassRedeclaration2.kt");
            doTest(fileName);
        }

        @TestMetadata("CompletionInSetter.kt")
        public void testCompletionInSetter() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/CompletionInSetter.kt");
            doTest(fileName);
        }

        @TestMetadata("DoNotCompleteForErrorReceivers.kt")
        public void testDoNotCompleteForErrorReceivers() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/DoNotCompleteForErrorReceivers.kt");
            doTest(fileName);
        }

        @TestMetadata("DoNotCompleteForErrorReceiversForce.kt")
        public void testDoNotCompleteForErrorReceiversForce() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/DoNotCompleteForErrorReceiversForce.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtendClassName.kt")
        public void testExtendClassName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtendClassName.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtendQualifiedClassName.kt")
        public void testExtendQualifiedClassName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtendQualifiedClassName.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionForProperty.kt")
        public void testExtensionForProperty() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionForProperty.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionFunReceiver.kt")
        public void testExtensionFunReceiver() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionFunReceiver.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionFunReceiverForce.kt")
        public void testExtensionFunReceiverForce() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionFunReceiverForce.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionFunctionInClassObject.kt")
        public void testExtensionFunctionInClassObject() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionFunctionInClassObject.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionInsideFunction.kt")
        public void testExtensionInsideFunction() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionInsideFunction.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionToIntInFloatStyle.kt")
        public void testExtensionToIntInFloatStyle() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionToIntInFloatStyle.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionWithAdditionalTypeParameters.kt")
        public void testExtensionWithAdditionalTypeParameters() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionWithAdditionalTypeParameters.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionWithGenericParamInReceiver.kt")
        public void testExtensionWithGenericParamInReceiver() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionWithGenericParamInReceiver.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionWithGenericReceiver.kt")
        public void testExtensionWithGenericReceiver() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionWithGenericReceiver.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionWithInternalGenericParameters.kt")
        public void testExtensionWithInternalGenericParameters() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionWithInternalGenericParameters.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionWithManyTypeParamsInReceiver.kt")
        public void testExtensionWithManyTypeParamsInReceiver() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ExtensionWithManyTypeParamsInReceiver.kt");
            doTest(fileName);
        }

        @TestMetadata("FromImports.kt")
        public void testFromImports() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FromImports.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionCompletionFormatting.kt")
        public void testFunctionCompletionFormatting() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionCompletionFormatting.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterName0.kt")
        public void testFunctionLiteralParameterName0() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterName0.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterName1.kt")
        public void testFunctionLiteralParameterName1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterName1.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterName2.kt")
        public void testFunctionLiteralParameterName2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterName2.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterName3.kt")
        public void testFunctionLiteralParameterName3() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterName3.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterName4.kt")
        public void testFunctionLiteralParameterName4() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterName4.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterName5.kt")
        public void testFunctionLiteralParameterName5() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterName5.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterType1.kt")
        public void testFunctionLiteralParameterType1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterType1.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterType2.kt")
        public void testFunctionLiteralParameterType2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterType2.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterType3.kt")
        public void testFunctionLiteralParameterType3() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterType3.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterType4.kt")
        public void testFunctionLiteralParameterType4() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterType4.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionLiteralParameterType5.kt")
        public void testFunctionLiteralParameterType5() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionLiteralParameterType5.kt");
            doTest(fileName);
        }

        @TestMetadata("FunctionVariableCallArgument.kt")
        public void testFunctionVariableCallArgument() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/FunctionVariableCallArgument.kt");
            doTest(fileName);
        }

        @TestMetadata("GenericExtensionFunReceiver1.kt")
        public void testGenericExtensionFunReceiver1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/GenericExtensionFunReceiver1.kt");
            doTest(fileName);
        }

        @TestMetadata("GenericExtensionFunReceiver2.kt")
        public void testGenericExtensionFunReceiver2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/GenericExtensionFunReceiver2.kt");
            doTest(fileName);
        }

        @TestMetadata("GenericExtensionFunTypeArgument.kt")
        public void testGenericExtensionFunTypeArgument() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/GenericExtensionFunTypeArgument.kt");
            doTest(fileName);
        }

        @TestMetadata("GenericExtensionFunTypeArgument2.kt")
        public void testGenericExtensionFunTypeArgument2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/GenericExtensionFunTypeArgument2.kt");
            doTest(fileName);
        }

        @TestMetadata("GenericKotlinClass.kt")
        public void testGenericKotlinClass() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/GenericKotlinClass.kt");
            doTest(fileName);
        }

        @TestMetadata("HigherOrderFunction1.kt")
        public void testHigherOrderFunction1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/HigherOrderFunction1.kt");
            doTest(fileName);
        }

        @TestMetadata("HigherOrderFunction2.kt")
        public void testHigherOrderFunction2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/HigherOrderFunction2.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateExtensionMembers1.kt")
        public void testImmediateExtensionMembers1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateExtensionMembers1.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateExtensionMembers2.kt")
        public void testImmediateExtensionMembers2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateExtensionMembers2.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateExtensionMembers3.kt")
        public void testImmediateExtensionMembers3() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateExtensionMembers3.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateExtensionMembers4.kt")
        public void testImmediateExtensionMembers4() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateExtensionMembers4.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateMembers1.kt")
        public void testImmediateMembers1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateMembers1.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateMembers2.kt")
        public void testImmediateMembers2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateMembers2.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateMembers3.kt")
        public void testImmediateMembers3() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateMembers3.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateMembers4.kt")
        public void testImmediateMembers4() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateMembers4.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateMembers5.kt")
        public void testImmediateMembers5() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImmediateMembers5.kt");
            doTest(fileName);
        }

        @TestMetadata("ImportedEnumMembers.kt")
        public void testImportedEnumMembers() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ImportedEnumMembers.kt");
            doTest(fileName);
        }

        @TestMetadata("InCallExpression.kt")
        public void testInCallExpression() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InCallExpression.kt");
            doTest(fileName);
        }

        @TestMetadata("InClassInitializer.kt")
        public void testInClassInitializer() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InClassInitializer.kt");
            doTest(fileName);
        }

        @TestMetadata("InClassObject.kt")
        public void testInClassObject() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InClassObject.kt");
            doTest(fileName);
        }

        @TestMetadata("InClassPropertyAccessor.kt")
        public void testInClassPropertyAccessor() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InClassPropertyAccessor.kt");
            doTest(fileName);
        }

        @TestMetadata("InEmptyImport.kt")
        public void testInEmptyImport() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InEmptyImport.kt");
            doTest(fileName);
        }

        @TestMetadata("InExpressionNoPrefix.kt")
        public void testInExpressionNoPrefix() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InExpressionNoPrefix.kt");
            doTest(fileName);
        }

        @TestMetadata("InExtendTypeAnnotation.kt")
        public void testInExtendTypeAnnotation() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InExtendTypeAnnotation.kt");
            doTest(fileName);
        }

        @TestMetadata("InFileWithMultiDeclaration.kt")
        public void testInFileWithMultiDeclaration() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InFileWithMultiDeclaration.kt");
            doTest(fileName);
        }

        @TestMetadata("InFileWithTypedef.kt")
        public void testInFileWithTypedef() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InFileWithTypedef.kt");
            doTest(fileName);
        }

        @TestMetadata("InFunInClassInitializer.kt")
        public void testInFunInClassInitializer() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InFunInClassInitializer.kt");
            doTest(fileName);
        }

        @TestMetadata("InFunctionArguments.kt")
        public void testInFunctionArguments() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InFunctionArguments.kt");
            doTest(fileName);
        }

        @TestMetadata("InFunctionLiteral.kt")
        public void testInFunctionLiteral() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InFunctionLiteral.kt");
            doTest(fileName);
        }

        @TestMetadata("InGlobalPropertyInitializer.kt")
        public void testInGlobalPropertyInitializer() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InGlobalPropertyInitializer.kt");
            doTest(fileName);
        }

        @TestMetadata("InImport.kt")
        public void testInImport() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InImport.kt");
            doTest(fileName);
        }

        @TestMetadata("InInitializerInPropertyAccessor.kt")
        public void testInInitializerInPropertyAccessor() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InInitializerInPropertyAccessor.kt");
            doTest(fileName);
        }

        @TestMetadata("InInnerClass.kt")
        public void testInInnerClass() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InInnerClass.kt");
            doTest(fileName);
        }

        @TestMetadata("InLocalObjectDeclaration.kt")
        public void testInLocalObjectDeclaration() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InLocalObjectDeclaration.kt");
            doTest(fileName);
        }

        @TestMetadata("InLongDotQualifiedExpression.kt")
        public void testInLongDotQualifiedExpression() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InLongDotQualifiedExpression.kt");
            doTest(fileName);
        }

        @TestMetadata("InMiddleOfPackage.kt")
        public void testInMiddleOfPackage() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InMiddleOfPackage.kt");
            doTest(fileName);
        }

        @TestMetadata("InMiddleOfPackageDirective.kt")
        public void testInMiddleOfPackageDirective() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InMiddleOfPackageDirective.kt");
            doTest(fileName);
        }

        @TestMetadata("InNestedClass.kt")
        public void testInNestedClass() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InNestedClass.kt");
            doTest(fileName);
        }

        @TestMetadata("InObjectInDelegationSpecifier.kt")
        public void testInObjectInDelegationSpecifier() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InObjectInDelegationSpecifier.kt");
            doTest(fileName);
        }

        @TestMetadata("InPackageBegin.kt")
        public void testInPackageBegin() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InPackageBegin.kt");
            doTest(fileName);
        }

        @TestMetadata("InParametersTypes.kt")
        public void testInParametersTypes() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InParametersTypes.kt");
            doTest(fileName);
        }

        @TestMetadata("InParametersTypesForce.kt")
        public void testInParametersTypesForce() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InParametersTypesForce.kt");
            doTest(fileName);
        }

        @TestMetadata("InPropertyAccessor.kt")
        public void testInPropertyAccessor() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InPropertyAccessor.kt");
            doTest(fileName);
        }

        @TestMetadata("InPropertyInitializer.kt")
        public void testInPropertyInitializer() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InPropertyInitializer.kt");
            doTest(fileName);
        }

        @TestMetadata("InSecondaryConstructorBody.kt")
        public void testInSecondaryConstructorBody() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InSecondaryConstructorBody.kt");
            doTest(fileName);
        }

        @TestMetadata("InSecondaryConstructorDefaultParameter.kt")
        public void testInSecondaryConstructorDefaultParameter() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InSecondaryConstructorDefaultParameter.kt");
            doTest(fileName);
        }

        @TestMetadata("InSecondaryConstructorDelegationCall.kt")
        public void testInSecondaryConstructorDelegationCall() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InSecondaryConstructorDelegationCall.kt");
            doTest(fileName);
        }

        @TestMetadata("InSecondaryConstructorFirstDefaultParameter.kt")
        public void testInSecondaryConstructorFirstDefaultParameter() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InSecondaryConstructorFirstDefaultParameter.kt");
            doTest(fileName);
        }

        @TestMetadata("InTypeAnnotation.kt")
        public void testInTypeAnnotation() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InTypeAnnotation.kt");
            doTest(fileName);
        }

        @TestMetadata("InfixCall.kt")
        public void testInfixCall() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InfixCall.kt");
            doTest(fileName);
        }

        @TestMetadata("InsideAnonymousClass.kt")
        public void testInsideAnonymousClass() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/InsideAnonymousClass.kt");
            doTest(fileName);
        }

        @TestMetadata("JavaPackage.kt")
        public void testJavaPackage() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/JavaPackage.kt");
            doTest(fileName);
        }

        @TestMetadata("LocalMultideclarationValues.kt")
        public void testLocalMultideclarationValues() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/LocalMultideclarationValues.kt");
            doTest(fileName);
        }

        @TestMetadata("NameWithDollars.kt")
        public void testNameWithDollars() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NameWithDollars.kt");
            doTest(fileName);
        }

        @TestMetadata("NamedObject.kt")
        public void testNamedObject() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NamedObject.kt");
            doTest(fileName);
        }

        @TestMetadata("NestedClassBug.kt")
        public void testNestedClassBug() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NestedClassBug.kt");
            doTest(fileName);
        }

        @TestMetadata("NestedClassNameForExtension.kt")
        public void testNestedClassNameForExtension() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NestedClassNameForExtension.kt");
            doTest(fileName);
        }

        @TestMetadata("NestedClassNameForExtension2.kt")
        public void testNestedClassNameForExtension2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NestedClassNameForExtension2.kt");
            doTest(fileName);
        }

        @TestMetadata("NestedClassesOnClassWithDefaultObject.kt")
        public void testNestedClassesOnClassWithDefaultObject() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NestedClassesOnClassWithDefaultObject.kt");
            doTest(fileName);
        }

        @TestMetadata("NestedClassesOnClassWithNamedDefaultObject.kt")
        public void testNestedClassesOnClassWithNamedDefaultObject() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NestedClassesOnClassWithNamedDefaultObject.kt");
            doTest(fileName);
        }

        @TestMetadata("NestedClassesOnDefaultObjectLiteral.kt")
        public void testNestedClassesOnDefaultObjectLiteral() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NestedClassesOnDefaultObjectLiteral.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutoInsertionOfNotImported.kt")
        public void testNoAutoInsertionOfNotImported() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutoInsertionOfNotImported.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutoPopupAfterNumberLiteral.kt")
        public void testNoAutoPopupAfterNumberLiteral() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutoPopupAfterNumberLiteral.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutoPopupInValName.kt")
        public void testNoAutoPopupInValName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutoPopupInValName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutopopupInExtFunName.kt")
        public void testNoAutopopupInExtFunName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutopopupInExtFunName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutopopupInFunName.kt")
        public void testNoAutopopupInFunName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutopopupInFunName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutopopupInGenericExtFunName.kt")
        public void testNoAutopopupInGenericExtFunName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutopopupInGenericExtFunName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutopopupInGenericFunName.kt")
        public void testNoAutopopupInGenericFunName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutopopupInGenericFunName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutopopupInGenericValName.kt")
        public void testNoAutopopupInGenericValName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutopopupInGenericValName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutopopupInGenericVarName.kt")
        public void testNoAutopopupInGenericVarName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutopopupInGenericVarName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoAutopopupInVarName.kt")
        public void testNoAutopopupInVarName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoAutopopupInVarName.kt");
            doTest(fileName);
        }

        @TestMetadata("NoClassNameDuplication.kt")
        public void testNoClassNameDuplication() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoClassNameDuplication.kt");
            doTest(fileName);
        }

        @TestMetadata("NoCompletionAfterBigFloat.kt")
        public void testNoCompletionAfterBigFloat() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoCompletionAfterBigFloat.kt");
            doTest(fileName);
        }

        @TestMetadata("NoCompletionAfterFloat.kt")
        public void testNoCompletionAfterFloat() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoCompletionAfterFloat.kt");
            doTest(fileName);
        }

        @TestMetadata("NoCompletionAfterInt.kt")
        public void testNoCompletionAfterInt() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoCompletionAfterInt.kt");
            doTest(fileName);
        }

        @TestMetadata("NoCompletionAfterLong.kt")
        public void testNoCompletionAfterLong() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoCompletionAfterLong.kt");
            doTest(fileName);
        }

        @TestMetadata("NoEmptyPackage.kt")
        public void testNoEmptyPackage() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoEmptyPackage.kt");
            doTest(fileName);
        }

        @TestMetadata("NoEnumEntryType.kt")
        public void testNoEnumEntryType() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoEnumEntryType.kt");
            doTest(fileName);
        }

        @TestMetadata("NoEnumMembersFromImplicitQualifier.kt")
        public void testNoEnumMembersFromImplicitQualifier() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoEnumMembersFromImplicitQualifier.kt");
            doTest(fileName);
        }

        @TestMetadata("NoExtensionsAfterQualifier.kt")
        public void testNoExtensionsAfterQualifier() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoExtensionsAfterQualifier.kt");
            doTest(fileName);
        }

        @TestMetadata("NoNestedClassAfterReceiver.kt")
        public void testNoNestedClassAfterReceiver() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoNestedClassAfterReceiver.kt");
            doTest(fileName);
        }

        @TestMetadata("NoNestedClassesFromImplicitQualifier.kt")
        public void testNoNestedClassesFromImplicitQualifier() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoNestedClassesFromImplicitQualifier.kt");
            doTest(fileName);
        }

        @TestMetadata("NoPackageFacadeClasses.kt")
        public void testNoPackageFacadeClasses() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoPackageFacadeClasses.kt");
            doTest(fileName);
        }

        @TestMetadata("NoSecondPressCompletionInAutoPopup.kt")
        public void testNoSecondPressCompletionInAutoPopup() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoSecondPressCompletionInAutoPopup.kt");
            doTest(fileName);
        }

        @TestMetadata("NoTopLevelCompletionInQualifiedUserTypes.kt")
        public void testNoTopLevelCompletionInQualifiedUserTypes() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/NoTopLevelCompletionInQualifiedUserTypes.kt");
            doTest(fileName);
        }

        @TestMetadata("ObjectInTypePosition.kt")
        public void testObjectInTypePosition() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ObjectInTypePosition.kt");
            doTest(fileName);
        }

        @TestMetadata("ObjectMembersFromNested.kt")
        public void testObjectMembersFromNested() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ObjectMembersFromNested.kt");
            doTest(fileName);
        }

        @TestMetadata("ObjectRedeclaration1.kt")
        public void testObjectRedeclaration1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ObjectRedeclaration1.kt");
            doTest(fileName);
        }

        @TestMetadata("ObjectRedeclaration2.kt")
        public void testObjectRedeclaration2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ObjectRedeclaration2.kt");
            doTest(fileName);
        }

        @TestMetadata("OnlyScopedClassesWithoutExplicit.kt")
        public void testOnlyScopedClassesWithoutExplicit() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/OnlyScopedClassesWithoutExplicit.kt");
            doTest(fileName);
        }

        @TestMetadata("OverloadFunctions.kt")
        public void testOverloadFunctions() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/OverloadFunctions.kt");
            doTest(fileName);
        }

        @TestMetadata("RecieverMembersFromExtAccessor.kt")
        public void testRecieverMembersFromExtAccessor() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/RecieverMembersFromExtAccessor.kt");
            doTest(fileName);
        }

        @TestMetadata("RecieverMembersFromExtFun.kt")
        public void testRecieverMembersFromExtFun() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/RecieverMembersFromExtFun.kt");
            doTest(fileName);
        }

        @TestMetadata("SafeCallAfterNullable.kt")
        public void testSafeCallAfterNullable() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SafeCallAfterNullable.kt");
            doTest(fileName);
        }

        @TestMetadata("ShortClassNamesInTypePosition.kt")
        public void testShortClassNamesInTypePosition() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/ShortClassNamesInTypePosition.kt");
            doTest(fileName);
        }

        @TestMetadata("SmartCastAfterIf.kt")
        public void testSmartCastAfterIf() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SmartCastAfterIf.kt");
            doTest(fileName);
        }

        @TestMetadata("SmartCastAfterIfMethod.kt")
        public void testSmartCastAfterIfMethod() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SmartCastAfterIfMethod.kt");
            doTest(fileName);
        }

        @TestMetadata("SmartCastForThis.kt")
        public void testSmartCastForThis() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SmartCastForThis.kt");
            doTest(fileName);
        }

        @TestMetadata("SmartCastInWhen.kt")
        public void testSmartCastInWhen() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SmartCastInWhen.kt");
            doTest(fileName);
        }

        @TestMetadata("StandardJetArrayFirst.kt")
        public void testStandardJetArrayFirst() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/StandardJetArrayFirst.kt");
            doTest(fileName);
        }

        @TestMetadata("StandardJetDoubleFirst.kt")
        public void testStandardJetDoubleFirst() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/StandardJetDoubleFirst.kt");
            doTest(fileName);
        }

        @TestMetadata("StringTemplate1.kt")
        public void testStringTemplate1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/StringTemplate1.kt");
            doTest(fileName);
        }

        @TestMetadata("StringTemplate2.kt")
        public void testStringTemplate2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/StringTemplate2.kt");
            doTest(fileName);
        }

        @TestMetadata("SubpackageInFun.kt")
        public void testSubpackageInFun() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SubpackageInFun.kt");
            doTest(fileName);
        }

        @TestMetadata("SubstitutedSignature1.kt")
        public void testSubstitutedSignature1() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SubstitutedSignature1.kt");
            doTest(fileName);
        }

        @TestMetadata("SubstitutedSignature2.kt")
        public void testSubstitutedSignature2() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SubstitutedSignature2.kt");
            doTest(fileName);
        }

        @TestMetadata("SubstitutedSignature3.kt")
        public void testSubstitutedSignature3() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SubstitutedSignature3.kt");
            doTest(fileName);
        }

        @TestMetadata("SubstitutedSignature4.kt")
        public void testSubstitutedSignature4() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SubstitutedSignature4.kt");
            doTest(fileName);
        }

        @TestMetadata("SubstitutedSignature5.kt")
        public void testSubstitutedSignature5() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SubstitutedSignature5.kt");
            doTest(fileName);
        }

        @TestMetadata("SubstitutedSignature6.kt")
        public void testSubstitutedSignature6() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/SubstitutedSignature6.kt");
            doTest(fileName);
        }

        @TestMetadata("TopLevelClassCompletionInQualifiedCall.kt")
        public void testTopLevelClassCompletionInQualifiedCall() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/TopLevelClassCompletionInQualifiedCall.kt");
            doTest(fileName);
        }

        @TestMetadata("VariableClassName.kt")
        public void testVariableClassName() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/VariableClassName.kt");
            doTest(fileName);
        }

        @TestMetadata("idea/testData/completion/basic/common/annotations")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Annotations extends AbstractJvmBasicCompletionTest {
            public void testAllFilesPresentInAnnotations() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/completion/basic/common/annotations"), Pattern.compile("^(.+)\\.kt$"), true);
            }

            @TestMetadata("FunctionAnnotation1.kt")
            public void testFunctionAnnotation1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/FunctionAnnotation1.kt");
                doTest(fileName);
            }

            @TestMetadata("FunctionAnnotation2.kt")
            public void testFunctionAnnotation2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/FunctionAnnotation2.kt");
                doTest(fileName);
            }

            @TestMetadata("NoParameterAnnotationAutoPopup1.kt")
            public void testNoParameterAnnotationAutoPopup1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/NoParameterAnnotationAutoPopup1.kt");
                doTest(fileName);
            }

            @TestMetadata("NoParameterAnnotationAutoPopup2.kt")
            public void testNoParameterAnnotationAutoPopup2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/NoParameterAnnotationAutoPopup2.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation1.kt")
            public void testParameterAnnotation1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation1.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation2.kt")
            public void testParameterAnnotation2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation2.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation3.kt")
            public void testParameterAnnotation3() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation3.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation4.kt")
            public void testParameterAnnotation4() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation4.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation5.kt")
            public void testParameterAnnotation5() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation5.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation6.kt")
            public void testParameterAnnotation6() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation6.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation7.kt")
            public void testParameterAnnotation7() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation7.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation8.kt")
            public void testParameterAnnotation8() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation8.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotation9.kt")
            public void testParameterAnnotation9() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotation9.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotationArgs.kt")
            public void testParameterAnnotationArgs() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotationArgs.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotationAutoPopup1.kt")
            public void testParameterAnnotationAutoPopup1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotationAutoPopup1.kt");
                doTest(fileName);
            }

            @TestMetadata("ParameterAnnotationAutoPopup2.kt")
            public void testParameterAnnotationAutoPopup2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/ParameterAnnotationAutoPopup2.kt");
                doTest(fileName);
            }

            @TestMetadata("TopLevelAnnotation1.kt")
            public void testTopLevelAnnotation1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/TopLevelAnnotation1.kt");
                doTest(fileName);
            }

            @TestMetadata("TopLevelAnnotation2.kt")
            public void testTopLevelAnnotation2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/TopLevelAnnotation2.kt");
                doTest(fileName);
            }

            @TestMetadata("TopLevelAnnotation3.kt")
            public void testTopLevelAnnotation3() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/TopLevelAnnotation3.kt");
                doTest(fileName);
            }

            @TestMetadata("TopLevelAnnotation4.kt")
            public void testTopLevelAnnotation4() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/TopLevelAnnotation4.kt");
                doTest(fileName);
            }

            @TestMetadata("TopLevelAnnotationArg1.kt")
            public void testTopLevelAnnotationArg1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/TopLevelAnnotationArg1.kt");
                doTest(fileName);
            }

            @TestMetadata("TopLevelAnnotationArg2.kt")
            public void testTopLevelAnnotationArg2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/annotations/TopLevelAnnotationArg2.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/completion/basic/common/extensions")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Extensions extends AbstractJvmBasicCompletionTest {
            public void testAllFilesPresentInExtensions() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/completion/basic/common/extensions"), Pattern.compile("^(.+)\\.kt$"), true);
            }

            @TestMetadata("ExtensionInExtendedClass.kt")
            public void testExtensionInExtendedClass() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/ExtensionInExtendedClass.kt");
                doTest(fileName);
            }

            @TestMetadata("ExtensionInExtendedClassThis.kt")
            public void testExtensionInExtendedClassThis() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/ExtensionInExtendedClassThis.kt");
                doTest(fileName);
            }

            @TestMetadata("ExtensionInExtension.kt")
            public void testExtensionInExtension() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/ExtensionInExtension.kt");
                doTest(fileName);
            }

            @TestMetadata("ExtensionInExtensionThis.kt")
            public void testExtensionInExtensionThis() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/ExtensionInExtensionThis.kt");
                doTest(fileName);
            }

            @TestMetadata("ExtensionOnFQObject.kt")
            public void testExtensionOnFQObject() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/ExtensionOnFQObject.kt");
                doTest(fileName);
            }

            @TestMetadata("ExtensionOnNestedClassObject.kt")
            public void testExtensionOnNestedClassObject() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/ExtensionOnNestedClassObject.kt");
                doTest(fileName);
            }

            @TestMetadata("Extensions.kt")
            public void testExtensions() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/Extensions.kt");
                doTest(fileName);
            }

            @TestMetadata("InvalidTypeParameters.kt")
            public void testInvalidTypeParameters() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/InvalidTypeParameters.kt");
                doTest(fileName);
            }

            @TestMetadata("IrrelevantExtension.kt")
            public void testIrrelevantExtension() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/IrrelevantExtension.kt");
                doTest(fileName);
            }

            @TestMetadata("JavaTypeExtension.kt")
            public void testJavaTypeExtension() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/JavaTypeExtension.kt");
                doTest(fileName);
            }

            @TestMetadata("KotlinGenericTypeExtension.kt")
            public void testKotlinGenericTypeExtension() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/KotlinGenericTypeExtension.kt");
                doTest(fileName);
            }

            @TestMetadata("KotlinTypeExtension.kt")
            public void testKotlinTypeExtension() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/KotlinTypeExtension.kt");
                doTest(fileName);
            }

            @TestMetadata("MemberExtensionFromWith.kt")
            public void testMemberExtensionFromWith() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/MemberExtensionFromWith.kt");
                doTest(fileName);
            }

            @TestMetadata("NoDuplicatedMethodForSmartCast.kt")
            public void testNoDuplicatedMethodForSmartCast() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/NoDuplicatedMethodForSmartCast.kt");
                doTest(fileName);
            }

            @TestMetadata("NoExtensionFromOuter.kt")
            public void testNoExtensionFromOuter() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/NoExtensionFromOuter.kt");
                doTest(fileName);
            }

            @TestMetadata("WrongExplicitReceiver.kt")
            public void testWrongExplicitReceiver() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/WrongExplicitReceiver.kt");
                doTest(fileName);
            }

            @TestMetadata("WrongImplicitReceiver.kt")
            public void testWrongImplicitReceiver() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/extensions/WrongImplicitReceiver.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/completion/basic/common/namedParameters")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class NamedParameters extends AbstractJvmBasicCompletionTest {
            @TestMetadata("AfterBrace.kt")
            public void testAfterBrace() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/AfterBrace.kt");
                doTest(fileName);
            }

            @TestMetadata("AfterComma.kt")
            public void testAfterComma() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/AfterComma.kt");
                doTest(fileName);
            }

            public void testAllFilesPresentInNamedParameters() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/completion/basic/common/namedParameters"), Pattern.compile("^(.+)\\.kt$"), true);
            }

            @TestMetadata("CompactTypeNames.kt")
            public void testCompactTypeNames() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/CompactTypeNames.kt");
                doTest(fileName);
            }

            @TestMetadata("ForEmptyParametersFunction.kt")
            public void testForEmptyParametersFunction() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/ForEmptyParametersFunction.kt");
                doTest(fileName);
            }

            @TestMetadata("InParameterExpression.kt")
            public void testInParameterExpression() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/InParameterExpression.kt");
                doTest(fileName);
            }

            @TestMetadata("NamedParametersFromOverloads.kt")
            public void testNamedParametersFromOverloads() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/NamedParametersFromOverloads.kt");
                doTest(fileName);
            }

            @TestMetadata("NamedParamsInConstructor.kt")
            public void testNamedParamsInConstructor() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/NamedParamsInConstructor.kt");
                doTest(fileName);
            }

            @TestMetadata("NoAlreadyUsedParameters.kt")
            public void testNoAlreadyUsedParameters() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/NoAlreadyUsedParameters.kt");
                doTest(fileName);
            }

            @TestMetadata("NoParamsFromUnapplicableOverload.kt")
            public void testNoParamsFromUnapplicableOverload() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/NoParamsFromUnapplicableOverload.kt");
                doTest(fileName);
            }

            @TestMetadata("NotOnlyNamedParameters.kt")
            public void testNotOnlyNamedParameters() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/NotOnlyNamedParameters.kt");
                doTest(fileName);
            }

            @TestMetadata("NotOnlyNamedParameters2.kt")
            public void testNotOnlyNamedParameters2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/NotOnlyNamedParameters2.kt");
                doTest(fileName);
            }

            @TestMetadata("OnlyNamedParameters.kt")
            public void testOnlyNamedParameters() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/OnlyNamedParameters.kt");
                doTest(fileName);
            }

            @TestMetadata("WithParameterExpression.kt")
            public void testWithParameterExpression() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/namedParameters/WithParameterExpression.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/completion/basic/common/typeArgsOrNot")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class TypeArgsOrNot extends AbstractJvmBasicCompletionTest {
            public void testAllFilesPresentInTypeArgsOrNot() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/completion/basic/common/typeArgsOrNot"), Pattern.compile("^(.+)\\.kt$"), true);
            }

            @TestMetadata("ConstructorTypeArg.kt")
            public void testConstructorTypeArg() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/typeArgsOrNot/ConstructorTypeArg.kt");
                doTest(fileName);
            }

            @TestMetadata("FunctionTypeArg.kt")
            public void testFunctionTypeArg() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/typeArgsOrNot/FunctionTypeArg.kt");
                doTest(fileName);
            }

            @TestMetadata("FunctionTypeArg2.kt")
            public void testFunctionTypeArg2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/typeArgsOrNot/FunctionTypeArg2.kt");
                doTest(fileName);
            }

            @TestMetadata("LessThan.kt")
            public void testLessThan() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/typeArgsOrNot/LessThan.kt");
                doTest(fileName);
            }

            @TestMetadata("NestedTypeArg.kt")
            public void testNestedTypeArg() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/typeArgsOrNot/NestedTypeArg.kt");
                doTest(fileName);
            }

            @TestMetadata("SecondTypeArg.kt")
            public void testSecondTypeArg() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/typeArgsOrNot/SecondTypeArg.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/completion/basic/common/visibility")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Visibility extends AbstractJvmBasicCompletionTest {
            public void testAllFilesPresentInVisibility() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/completion/basic/common/visibility"), Pattern.compile("^(.+)\\.kt$"), true);
            }

            @TestMetadata("VisibilityClassMembersFromExternal.kt")
            public void testVisibilityClassMembersFromExternal() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityClassMembersFromExternal.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityClassMembersFromExternalForce.kt")
            public void testVisibilityClassMembersFromExternalForce() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityClassMembersFromExternalForce.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityInSubclass.kt")
            public void testVisibilityInSubclass() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityInSubclass.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityInSubclassForce.kt")
            public void testVisibilityInSubclassForce() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityInSubclassForce.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThis.kt")
            public void testVisibilityPrivateToThis() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThis.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThisInConstructor.kt")
            public void testVisibilityPrivateToThisInConstructor() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThisInConstructor.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThisInConstructorWithThis.kt")
            public void testVisibilityPrivateToThisInConstructorWithThis() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThisInConstructorWithThis.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThisInSpecialScope.kt")
            public void testVisibilityPrivateToThisInSpecialScope() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThisInSpecialScope.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThisWithReceiver.kt")
            public void testVisibilityPrivateToThisWithReceiver() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThisWithReceiver.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThisWithReceiver2.kt")
            public void testVisibilityPrivateToThisWithReceiver2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThisWithReceiver2.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThisWithThis.kt")
            public void testVisibilityPrivateToThisWithThis() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThisWithThis.kt");
                doTest(fileName);
            }

            @TestMetadata("VisibilityPrivateToThisWithWrongThis.kt")
            public void testVisibilityPrivateToThisWithWrongThis() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/common/visibility/VisibilityPrivateToThisWithWrongThis.kt");
                doTest(fileName);
            }
        }
    }

    @TestMetadata("idea/testData/completion/basic/java")
    @TestDataPath("$PROJECT_ROOT")
    @RunWith(JUnit3RunnerWithInners.class)
    public static class Java extends AbstractJvmBasicCompletionTest {
        public void testAllFilesPresentInJava() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/completion/basic/java"), Pattern.compile("^(.+)\\.kt$"), true);
        }

        @TestMetadata("AutoForceCompletion.kt")
        public void testAutoForceCompletion() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/AutoForceCompletion.kt");
            doTest(fileName);
        }

        @TestMetadata("ExtensionFromStandardLibrary.kt")
        public void testExtensionFromStandardLibrary() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/ExtensionFromStandardLibrary.kt");
            doTest(fileName);
        }

        @TestMetadata("ImmediateMembersForPlatformType.kt")
        public void testImmediateMembersForPlatformType() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/ImmediateMembersForPlatformType.kt");
            doTest(fileName);
        }

        @TestMetadata("InPackage.kt")
        public void testInPackage() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/InPackage.kt");
            doTest(fileName);
        }

        @TestMetadata("JavaClassNames.kt")
        public void testJavaClassNames() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/JavaClassNames.kt");
            doTest(fileName);
        }

        @TestMetadata("NoDuplicationForImportedJavaClass.kt")
        public void testNoDuplicationForImportedJavaClass() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/NoDuplicationForImportedJavaClass.kt");
            doTest(fileName);
        }

        @TestMetadata("NoDuplicationForRuntimeClass.kt")
        public void testNoDuplicationForRuntimeClass() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/NoDuplicationForRuntimeClass.kt");
            doTest(fileName);
        }

        @TestMetadata("PackageDirective.kt")
        public void testPackageDirective() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/PackageDirective.kt");
            doTest(fileName);
        }

        @TestMetadata("PropertyMetadata.kt")
        public void testPropertyMetadata() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/PropertyMetadata.kt");
            doTest(fileName);
        }

        @TestMetadata("TopLevelFromStandardLibrary.kt")
        public void testTopLevelFromStandardLibrary() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/TopLevelFromStandardLibrary.kt");
            doTest(fileName);
        }

        @TestMetadata("TopLevelFromStandardLibraryWithoutParam.kt")
        public void testTopLevelFromStandardLibraryWithoutParam() throws Exception {
            String fileName = JetTestUtils.navigationMetadata("idea/testData/completion/basic/java/TopLevelFromStandardLibraryWithoutParam.kt");
            doTest(fileName);
        }
    }
}
