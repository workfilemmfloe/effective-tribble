/*
 * Copyright 2010-2015 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.findUsages;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.InnerTestClasses;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.JetTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@InnerTestClasses({
        JetFindUsagesTestGenerated.Kotlin.class,
        JetFindUsagesTestGenerated.Java.class,
})
@RunWith(JUnit3RunnerWithInners.class)
public class JetFindUsagesTestGenerated extends AbstractJetFindUsagesTest {
    @TestMetadata("idea/testData/findUsages/kotlin")
    @TestDataPath("$PROJECT_ROOT")
    @InnerTestClasses({
            Kotlin.Conventions.class,
            Kotlin.DefaultObject.class,
            Kotlin.FindClassUsages.class,
            Kotlin.FindFunctionUsages.class,
            Kotlin.FindObjectUsages.class,
            Kotlin.FindPackageUsages.class,
            Kotlin.FindParameterUsages.class,
            Kotlin.FindPropertyUsages.class,
            Kotlin.FindSecondaryConstructorUsages.class,
            Kotlin.FindTypeParameterUsages.class,
            Kotlin.FindWithFilteringImports.class,
            Kotlin.FindWithStructuralGrouping.class,
            Kotlin.Library.class,
            Kotlin.UnresolvedAnnotation.class,
    })
    @RunWith(JUnit3RunnerWithInners.class)
    public static class Kotlin extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInKotlin() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
        }

        @TestMetadata("idea/testData/findUsages/kotlin/conventions")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Conventions extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInConventions() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/conventions"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("compareTo.0.kt")
            public void testCompareTo() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/compareTo.0.kt");
                doTest(fileName);
            }

            @TestMetadata("componentFunctions.0.kt")
            public void testComponentFunctions() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/componentFunctions.0.kt");
                doTest(fileName);
            }

            @TestMetadata("componentFunctionsByRef.0.kt")
            public void testComponentFunctionsByRef() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/componentFunctionsByRef.0.kt");
                doTest(fileName);
            }

            @TestMetadata("contains.0.kt")
            public void testContains() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/contains.0.kt");
                doTest(fileName);
            }

            @TestMetadata("equals.0.kt")
            public void testEquals() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/equals.0.kt");
                doTest(fileName);
            }

            @TestMetadata("forIteration.0.kt")
            public void testForIteration() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/forIteration.0.kt");
                doTest(fileName);
            }

            @TestMetadata("get.0.kt")
            public void testGet() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/get.0.kt");
                doTest(fileName);
            }

            @TestMetadata("getAsPropertyDelegate.0.kt")
            public void testGetAsPropertyDelegate() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/getAsPropertyDelegate.0.kt");
                doTest(fileName);
            }

            @TestMetadata("identityEquals.0.kt")
            public void testIdentityEquals() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/identityEquals.0.kt");
                doTest(fileName);
            }

            @TestMetadata("inc.0.kt")
            public void testInc() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/inc.0.kt");
                doTest(fileName);
            }

            @TestMetadata("invoke.0.kt")
            public void testInvoke() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/invoke.0.kt");
                doTest(fileName);
            }

            @TestMetadata("plus.0.kt")
            public void testPlus() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/plus.0.kt");
                doTest(fileName);
            }

            @TestMetadata("plusAssign.0.kt")
            public void testPlusAssign() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/plusAssign.0.kt");
                doTest(fileName);
            }

            @TestMetadata("propertyDelegatedFunction.0.kt")
            public void testPropertyDelegatedFunction() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/propertyDelegatedFunction.0.kt");
                doTest(fileName);
            }

            @TestMetadata("set.0.kt")
            public void testSet() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/set.0.kt");
                doTest(fileName);
            }

            @TestMetadata("setAsPropertyDelegate.0.kt")
            public void testSetAsPropertyDelegate() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/setAsPropertyDelegate.0.kt");
                doTest(fileName);
            }

            @TestMetadata("unaryMinus.0.kt")
            public void testUnaryMinus() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/conventions/unaryMinus.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/defaultObject")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class DefaultObject extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInDefaultObject() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/defaultObject"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("inContainingClass.0.kt")
            public void testInContainingClass() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/defaultObject/inContainingClass.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaUsage.0.kt")
            public void testJavaUsage() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/defaultObject/javaUsage.0.kt");
                doTest(fileName);
            }

            @TestMetadata("named.0.kt")
            public void testNamed() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/defaultObject/named.0.kt");
                doTest(fileName);
            }

            @TestMetadata("simple.0.kt")
            public void testSimple() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/defaultObject/simple.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findClassUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindClassUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindClassUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findClassUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("classUsedInPlainText.0.kt")
            public void testClassUsedInPlainText() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/classUsedInPlainText.0.kt");
                doTest(fileName);
            }

            @TestMetadata("classUsedInTextAsRef.0.kt")
            public void testClassUsedInTextAsRef() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/classUsedInTextAsRef.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassAllUsages.0.kt")
            public void testJavaClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassAllUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassConstructorUsages.0.kt")
            public void testJavaClassConstructorUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassConstructorUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassFunctionUsages1.0.kt")
            public void testJavaClassFunctionUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassFunctionUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassFunctionUsages2.0.kt")
            public void testJavaClassFunctionUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassFunctionUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassNonConstructorUsages.0.kt")
            public void testJavaClassNonConstructorUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassNonConstructorUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassPropertyUsages1.0.kt")
            public void testJavaClassPropertyUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassPropertyUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassPropertyUsages2.0.kt")
            public void testJavaClassPropertyUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassPropertyUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassSecondaryCtrUsages.0.kt")
            public void testJavaClassSecondaryCtrUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaClassSecondaryCtrUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaDerivedClassUsages1.0.kt")
            public void testJavaDerivedClassUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaDerivedClassUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaDerivedClassUsages2.0.kt")
            public void testJavaDerivedClassUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaDerivedClassUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaDerivedInterfaceUsages1.0.kt")
            public void testJavaDerivedInterfaceUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaDerivedInterfaceUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaDerivedInterfaceUsages2.0.kt")
            public void testJavaDerivedInterfaceUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/javaDerivedInterfaceUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassAllUsages.0.kt")
            public void testKotlinClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassAllUsages2.0.kt")
            public void testKotlinClassAllUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassAllUsages3.0.kt")
            public void testKotlinClassAllUsages3() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsages3.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassAllUsagesNoImport.0.kt")
            public void testKotlinClassAllUsagesNoImport() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassAllUsagesNoImport.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassConstructorUsages.0.kt")
            public void testKotlinClassConstructorUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassConstructorUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedAnonymousObjects.0.kt")
            public void testKotlinClassDerivedAnonymousObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedAnonymousObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedClasses.0.kt")
            public void testKotlinClassDerivedClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedClasses.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedInnerClasses.0.kt")
            public void testKotlinClassDerivedInnerClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedInnerClasses.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedInnerObjects.0.kt")
            public void testKotlinClassDerivedInnerObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedInnerObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedLocalClasses.0.kt")
            public void testKotlinClassDerivedLocalClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedLocalClasses.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedLocalObjects.0.kt")
            public void testKotlinClassDerivedLocalObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedLocalObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedLocalTraits.0.kt")
            public void testKotlinClassDerivedLocalTraits() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedLocalTraits.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedObjects.0.kt")
            public void testKotlinClassDerivedObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassDerivedTraits.0.kt")
            public void testKotlinClassDerivedTraits() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassDerivedTraits.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassFunctionUsages1.0.kt")
            public void testKotlinClassFunctionUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassFunctionUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassFunctionUsages2.0.kt")
            public void testKotlinClassFunctionUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassFunctionUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassNonConstructorUsages.0.kt")
            public void testKotlinClassNonConstructorUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassNonConstructorUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassPropertyUsages1.0.kt")
            public void testKotlinClassPropertyUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassPropertyUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassPropertyUsages2.0.kt")
            public void testKotlinClassPropertyUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassPropertyUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassSecondaryCtorUsages.0.kt")
            public void testKotlinClassSecondaryCtorUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinClassSecondaryCtorUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinDeeplyNestedClassAllUsages.0.kt")
            public void testKotlinDeeplyNestedClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinDeeplyNestedClassAllUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinInnerClassAllUsages.0.kt")
            public void testKotlinInnerClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinInnerClassAllUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalClassDerivedAnonymousObjects.0.kt")
            public void testKotlinLocalClassDerivedAnonymousObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassDerivedAnonymousObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalClassDerivedLocalClasses.0.kt")
            public void testKotlinLocalClassDerivedLocalClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassDerivedLocalClasses.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalClassDerivedLocalObjects.0.kt")
            public void testKotlinLocalClassDerivedLocalObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassDerivedLocalObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalClassDerivedLocalTraits.0.kt")
            public void testKotlinLocalClassDerivedLocalTraits() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassDerivedLocalTraits.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalClassUsages1.0.kt")
            public void testKotlinLocalClassUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalClassUsages2.0.kt")
            public void testKotlinLocalClassUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinLocalClassUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinNestedClassAllUsages.0.kt")
            public void testKotlinNestedClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinNestedClassAllUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPrivateClassUsages.0.kt")
            public void testKotlinPrivateClassUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinPrivateClassUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedAnonymousObjects.0.kt")
            public void testKotlinTraitDerivedAnonymousObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedAnonymousObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedClasses.0.kt")
            public void testKotlinTraitDerivedClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedClasses.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedInnerClasses.0.kt")
            public void testKotlinTraitDerivedInnerClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedInnerClasses.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedInnerObjects.0.kt")
            public void testKotlinTraitDerivedInnerObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedInnerObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedLocalClasses.0.kt")
            public void testKotlinTraitDerivedLocalClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedLocalClasses.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedLocalObjects.0.kt")
            public void testKotlinTraitDerivedLocalObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedLocalObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedLocalTraits.0.kt")
            public void testKotlinTraitDerivedLocalTraits() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedLocalTraits.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedObjects.0.kt")
            public void testKotlinTraitDerivedObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedObjects.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitDerivedTraits.0.kt")
            public void testKotlinTraitDerivedTraits() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/kotlinTraitDerivedTraits.0.kt");
                doTest(fileName);
            }

            @TestMetadata("primaryConstructorWithDefaultParams.0.kt")
            public void testPrimaryConstructorWithDefaultParams() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findClassUsages/primaryConstructorWithDefaultParams.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findFunctionUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindFunctionUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindFunctionUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findFunctionUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("enumFunctionUsages.0.kt")
            public void testEnumFunctionUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/enumFunctionUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("functionUsedInPlainText.0.kt")
            public void testFunctionUsedInPlainText() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/functionUsedInPlainText.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaAndKotlinOverrides.0.kt")
            public void testJavaAndKotlinOverrides() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/javaAndKotlinOverrides.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaMethodUsages.0.kt")
            public void testJavaMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/javaMethodUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalMethodUsages1.0.kt")
            public void testKotlinLocalMethodUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinLocalMethodUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalMethodUsages2.0.kt")
            public void testKotlinLocalMethodUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinLocalMethodUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinMethodUsages.0.kt")
            public void testKotlinMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinMethodUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinMultiRefInImport.0.kt")
            public void testKotlinMultiRefInImport() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinMultiRefInImport.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinNestedClassMethodUsages.0.kt")
            public void testKotlinNestedClassMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinNestedClassMethodUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinOverloadAndExtensionUsages.0.kt")
            public void testKotlinOverloadAndExtensionUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinOverloadAndExtensionUsages2.0.kt")
            public void testKotlinOverloadAndExtensionUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinOverloadAndExtensionUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPrivateMethodUsages.0.kt")
            public void testKotlinPrivateMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinPrivateMethodUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTopLevelMethodUsages.0.kt")
            public void testKotlinTopLevelMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinTopLevelMethodUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTopLevelMethodUsagesNoImport.0.kt")
            public void testKotlinTopLevelMethodUsagesNoImport() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinTopLevelMethodUsagesNoImport.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitImplThroughDelegate.0.kt")
            public void testKotlinTraitImplThroughDelegate() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinTraitImplThroughDelegate.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTraitNoImplThroughDelegate.0.kt")
            public void testKotlinTraitNoImplThroughDelegate() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/kotlinTraitNoImplThroughDelegate.0.kt");
                doTest(fileName);
            }

            @TestMetadata("synthesizedFunction.0.kt")
            public void testSynthesizedFunction() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/synthesizedFunction.0.kt");
                doTest(fileName);
            }

            @TestMetadata("usagesOfBaseForFunction.0.kt")
            public void testUsagesOfBaseForFunction() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findFunctionUsages/usagesOfBaseForFunction.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findObjectUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindObjectUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindObjectUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findObjectUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("javaObjectUsages.0.kt")
            public void testJavaObjectUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findObjectUsages/javaObjectUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalObjectUsages1.0.kt")
            public void testKotlinLocalObjectUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findObjectUsages/kotlinLocalObjectUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalObjectUsages2.0.kt")
            public void testKotlinLocalObjectUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findObjectUsages/kotlinLocalObjectUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinNestedObjectUsages.0.kt")
            public void testKotlinNestedObjectUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findObjectUsages/kotlinNestedObjectUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinObjectUsages.0.kt")
            public void testKotlinObjectUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findObjectUsages/kotlinObjectUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPrivateObjectUsages.0.kt")
            public void testKotlinPrivateObjectUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findObjectUsages/kotlinPrivateObjectUsages.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findPackageUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindPackageUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindPackageUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findPackageUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("kotlinPackageUsages.0.kt")
            public void testKotlinPackageUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPackageUsages/kotlinPackageUsages.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findParameterUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindParameterUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindParameterUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findParameterUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("kotlinConstructorParameterUsages.0.kt")
            public void testKotlinConstructorParameterUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findParameterUsages/kotlinConstructorParameterUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinFunctionParameterUsages.0.kt")
            public void testKotlinFunctionParameterUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findParameterUsages/kotlinFunctionParameterUsages.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findPropertyUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindPropertyUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindPropertyUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findPropertyUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("javaAndKotlinOverrides.0.kt")
            public void testJavaAndKotlinOverrides() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaAndKotlinOverrides.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaAndKotlinOverrides2.0.kt")
            public void testJavaAndKotlinOverrides2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaAndKotlinOverrides2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaClassObjectPropertyUsages.0.kt")
            public void testJavaClassObjectPropertyUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaClassObjectPropertyUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaPropertyReadUsages.0.kt")
            public void testJavaPropertyReadUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaPropertyReadUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaPropertyReadUsages2.0.kt")
            public void testJavaPropertyReadUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaPropertyReadUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaPropertyUsages.0.kt")
            public void testJavaPropertyUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaPropertyUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaPropertyUsages2.0.kt")
            public void testJavaPropertyUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaPropertyUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaPropertyWriteUsages.0.kt")
            public void testJavaPropertyWriteUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaPropertyWriteUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("javaPropertyWriteUsages2.0.kt")
            public void testJavaPropertyWriteUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/javaPropertyWriteUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinClassObjectPropertyUsage.0.kt")
            public void testKotlinClassObjectPropertyUsage() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinClassObjectPropertyUsage.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalPropertyUsages1.0.kt")
            public void testKotlinLocalPropertyUsages1() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinLocalPropertyUsages1.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinLocalPropertyUsages2.0.kt")
            public void testKotlinLocalPropertyUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinLocalPropertyUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinMultiRefInImport.0.kt")
            public void testKotlinMultiRefInImport() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinMultiRefInImport.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinNestedClassPropertyUsages.0.kt")
            public void testKotlinNestedClassPropertyUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinNestedClassPropertyUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPrivatePropertyInClassObjectUsages.0.kt")
            public void testKotlinPrivatePropertyInClassObjectUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyInClassObjectUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPrivatePropertyUsages.0.kt")
            public void testKotlinPrivatePropertyUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPrivatePropertyUsages2.0.kt")
            public void testKotlinPrivatePropertyUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPrivatePropertyUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPropertyReadUsages.0.kt")
            public void testKotlinPropertyReadUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyReadUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPropertyReadUsages2.0.kt")
            public void testKotlinPropertyReadUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyReadUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPropertyUsages.0.kt")
            public void testKotlinPropertyUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPropertyUsages2.0.kt")
            public void testKotlinPropertyUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPropertyWriteUsages.0.kt")
            public void testKotlinPropertyWriteUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyWriteUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPropertyWriteUsages2.0.kt")
            public void testKotlinPropertyWriteUsages2() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinPropertyWriteUsages2.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinTopLevelPropertyUsages.0.kt")
            public void testKotlinTopLevelPropertyUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findPropertyUsages/kotlinTopLevelPropertyUsages.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findSecondaryConstructorUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindSecondaryConstructorUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindSecondaryConstructorUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findSecondaryConstructorUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("defaultSecondaryConstructor.0.kt")
            public void testDefaultSecondaryConstructor() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findSecondaryConstructorUsages/defaultSecondaryConstructor.0.kt");
                doTest(fileName);
            }

            @TestMetadata("secondaryConstructor.0.kt")
            public void testSecondaryConstructor() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findSecondaryConstructorUsages/secondaryConstructor.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findTypeParameterUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindTypeParameterUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindTypeParameterUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findTypeParameterUsages"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("kotlinClassTypeParameterUsages.0.kt")
            public void testKotlinClassTypeParameterUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findTypeParameterUsages/kotlinClassTypeParameterUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinFunctionTypeParameterUsages.0.kt")
            public void testKotlinFunctionTypeParameterUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findTypeParameterUsages/kotlinFunctionTypeParameterUsages.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findWithFilteringImports")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindWithFilteringImports extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindWithFilteringImports() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findWithFilteringImports"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("findWithFilteringImports.0.kt")
            public void testFindWithFilteringImports() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findWithFilteringImports/findWithFilteringImports.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/findWithStructuralGrouping")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindWithStructuralGrouping extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindWithStructuralGrouping() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/findWithStructuralGrouping"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("kotlinClassAllUsages.0.kt")
            public void testKotlinClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findWithStructuralGrouping/kotlinClassAllUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinMethodUsages.0.kt")
            public void testKotlinMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findWithStructuralGrouping/kotlinMethodUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("kotlinPropertyUsages.0.kt")
            public void testKotlinPropertyUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/findWithStructuralGrouping/kotlinPropertyUsages.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/library")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class Library extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInLibrary() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/library"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("LibraryClassUsages.0.kt")
            public void testLibraryClassUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/library/LibraryClassUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("LibraryFieldUsages.0.kt")
            public void testLibraryFieldUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/library/LibraryFieldUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("LibraryMethodUsages.0.kt")
            public void testLibraryMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/library/LibraryMethodUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("LibraryStaticFieldUsages.0.kt")
            public void testLibraryStaticFieldUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/library/LibraryStaticFieldUsages.0.kt");
                doTest(fileName);
            }

            @TestMetadata("LibraryStaticMethodUsages.0.kt")
            public void testLibraryStaticMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/library/LibraryStaticMethodUsages.0.kt");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/kotlin/unresolvedAnnotation")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class UnresolvedAnnotation extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInUnresolvedAnnotation() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/kotlin/unresolvedAnnotation"), Pattern.compile("^(.+)\\.0\\.kt$"), true);
            }

            @TestMetadata("unresolvedAnnotation.0.kt")
            public void testUnresolvedAnnotation() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/kotlin/unresolvedAnnotation/unresolvedAnnotation.0.kt");
                doTest(fileName);
            }
        }
    }

    @TestMetadata("idea/testData/findUsages/java")
    @TestDataPath("$PROJECT_ROOT")
    @InnerTestClasses({
            Java.FindConstructorUsages.class,
            Java.FindJavaClassUsages.class,
            Java.FindJavaFieldUsages.class,
            Java.FindJavaMethodUsages.class,
    })
    @RunWith(JUnit3RunnerWithInners.class)
    public static class Java extends AbstractJetFindUsagesTest {
        public void testAllFilesPresentInJava() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/java"), Pattern.compile("^(.+)\\.0\\.java$"), true);
        }

        @TestMetadata("idea/testData/findUsages/java/findConstructorUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindConstructorUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindConstructorUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/java/findConstructorUsages"), Pattern.compile("^(.+)\\.0\\.java$"), true);
            }

            @TestMetadata("javaConstructorInDelegationCall.0.java")
            public void testJavaConstructorInDelegationCall() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findConstructorUsages/javaConstructorInDelegationCall.0.java");
                doTest(fileName);
            }

            @TestMetadata("javaDefaultConstructorInDelegationCall.0.java")
            public void testJavaDefaultConstructorInDelegationCall() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findConstructorUsages/javaDefaultConstructorInDelegationCall.0.java");
                doTest(fileName);
            }

            @TestMetadata("secondaryConstructorByJavaNewExpression.0.java")
            public void testSecondaryConstructorByJavaNewExpression() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findConstructorUsages/secondaryConstructorByJavaNewExpression.0.java");
                doTest(fileName);
            }

            @TestMetadata("secondaryConstructorByJavaSuperCall.0.java")
            public void testSecondaryConstructorByJavaSuperCall() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findConstructorUsages/secondaryConstructorByJavaSuperCall.0.java");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/java/findJavaClassUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindJavaClassUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindJavaClassUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/java/findJavaClassUsages"), Pattern.compile("^(.+)\\.0\\.java$"), true);
            }

            @TestMetadata("JKClassAllUsages.0.java")
            public void testJKClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassAllUsages.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassDerivedAnonymousObjects.0.java")
            public void testJKClassDerivedAnonymousObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassDerivedAnonymousObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassDerivedClasses.0.java")
            public void testJKClassDerivedClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassDerivedClasses.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassDerivedInnerClasses.0.java")
            public void testJKClassDerivedInnerClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassDerivedInnerClasses.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassDerivedInnerObjects.0.java")
            public void testJKClassDerivedInnerObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassDerivedInnerObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassDerivedLocalClasses.0.java")
            public void testJKClassDerivedLocalClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassDerivedLocalClasses.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassDerivedLocalObjects.0.java")
            public void testJKClassDerivedLocalObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassDerivedLocalObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassDerivedObjects.0.java")
            public void testJKClassDerivedObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassDerivedObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassFieldsUsages.0.java")
            public void testJKClassFieldsUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassFieldsUsages.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassMethodsUsages.0.java")
            public void testJKClassMethodsUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassMethodsUsages.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKClassWithImplicitConstructorAllUsages.0.java")
            public void testJKClassWithImplicitConstructorAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKClassWithImplicitConstructorAllUsages.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKDerivedInterfaces.0.java")
            public void testJKDerivedInterfaces() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKDerivedInterfaces.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInnerClassAllUsages.0.java")
            public void testJKInnerClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInnerClassAllUsages.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedAnonymousObjects.0.java")
            public void testJKInterfaceDerivedAnonymousObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedAnonymousObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedClasses.0.java")
            public void testJKInterfaceDerivedClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedClasses.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedInnerClasses.0.java")
            public void testJKInterfaceDerivedInnerClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedInnerClasses.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedInnerObjects.0.java")
            public void testJKInterfaceDerivedInnerObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedInnerObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedLocalClasses.0.java")
            public void testJKInterfaceDerivedLocalClasses() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedLocalClasses.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedLocalObjects.0.java")
            public void testJKInterfaceDerivedLocalObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedLocalObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedLocalTraits.0.java")
            public void testJKInterfaceDerivedLocalTraits() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedLocalTraits.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKInterfaceDerivedObjects.0.java")
            public void testJKInterfaceDerivedObjects() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKInterfaceDerivedObjects.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKNestedClassAllUsages.0.java")
            public void testJKNestedClassAllUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaClassUsages/JKNestedClassAllUsages.0.java");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/java/findJavaFieldUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindJavaFieldUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindJavaFieldUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/java/findJavaFieldUsages"), Pattern.compile("^(.+)\\.0\\.java$"), true);
            }

            @TestMetadata("JKFieldUsages.0.java")
            public void testJKFieldUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaFieldUsages/JKFieldUsages.0.java");
                doTest(fileName);
            }
        }

        @TestMetadata("idea/testData/findUsages/java/findJavaMethodUsages")
        @TestDataPath("$PROJECT_ROOT")
        @RunWith(JUnit3RunnerWithInners.class)
        public static class FindJavaMethodUsages extends AbstractJetFindUsagesTest {
            public void testAllFilesPresentInFindJavaMethodUsages() throws Exception {
                JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/findUsages/java/findJavaMethodUsages"), Pattern.compile("^(.+)\\.0\\.java$"), true);
            }

            @TestMetadata("JKMethodOverrides.0.java")
            public void testJKMethodOverrides() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaMethodUsages/JKMethodOverrides.0.java");
                doTest(fileName);
            }

            @TestMetadata("JKMethodUsages.0.java")
            public void testJKMethodUsages() throws Exception {
                String fileName = JetTestUtils.navigationMetadata("idea/testData/findUsages/java/findJavaMethodUsages/JKMethodUsages.0.java");
                doTest(fileName);
            }
        }
    }
}
