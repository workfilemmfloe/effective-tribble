/*
 * Copyright 2010-2014 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.plugin.libraries;

import junit.framework.Test;
import junit.framework.TestSuite;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/libraries/decompiledText")
@InnerTestClasses({})
public class DecompiledTextTestGenerated extends AbstractDecompiledTextTest {
    public void testAllFilesPresentInDecompiledText() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("idea/testData/libraries/decompiledText"), Pattern.compile("^([^\\.]+)$"), true);
    }
    
    @TestMetadata("Annotations")
    public void testAnnotations() throws Exception {
        doTest("idea/testData/libraries/decompiledText/Annotations/");
    }
    
    @TestMetadata("ClassWithClassObject")
    public void testClassWithClassObject() throws Exception {
        doTest("idea/testData/libraries/decompiledText/ClassWithClassObject/");
    }
    
    @TestMetadata("DependencyOnNestedClasses")
    public void testDependencyOnNestedClasses() throws Exception {
        doTest("idea/testData/libraries/decompiledText/DependencyOnNestedClasses/");
    }
    
    @TestMetadata("Enum")
    public void testEnum() throws Exception {
        doTest("idea/testData/libraries/decompiledText/Enum/");
    }
    
    @TestMetadata("NestedClasses")
    public void testNestedClasses() throws Exception {
        doTest("idea/testData/libraries/decompiledText/NestedClasses/");
    }
    
    @TestMetadata("Object")
    public void testObject() throws Exception {
        doTest("idea/testData/libraries/decompiledText/Object/");
    }
    
    @TestMetadata("SimpleClass")
    public void testSimpleClass() throws Exception {
        doTest("idea/testData/libraries/decompiledText/SimpleClass/");
    }
    
    @TestMetadata("TestPackage")
    public void testTestPackage() throws Exception {
        doTest("idea/testData/libraries/decompiledText/TestPackage/");
    }
    
    public static Test suite() {
        TestSuite suite = new TestSuite("DecompiledTextTestGenerated");
        suite.addTestSuite(DecompiledTextTestGenerated.class);
        return suite;
    }
}
