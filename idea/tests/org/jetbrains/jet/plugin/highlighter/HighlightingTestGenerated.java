/*
 * Copyright 2010-2014 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.plugin.highlighter;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.plugin.highlighter.AbstractHighlightingTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("idea/testData/highlighter")
@InnerTestClasses({HighlightingTestGenerated.Deprecated.class})
public class HighlightingTestGenerated extends AbstractHighlightingTest {
    public void testAllFilesPresentInHighlighter() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.TestsPackage", new File("idea/testData/highlighter"), Pattern.compile("^(.+)\\.kt$"), true);
    }
    
    @TestMetadata("Enums.kt")
    public void testEnums() throws Exception {
        doTest("idea/testData/highlighter/Enums.kt");
    }
    
    @TestMetadata("Functions.kt")
    public void testFunctions() throws Exception {
        doTest("idea/testData/highlighter/Functions.kt");
    }
    
    @TestMetadata("JavaTypes.kt")
    public void testJavaTypes() throws Exception {
        doTest("idea/testData/highlighter/JavaTypes.kt");
    }
    
    @TestMetadata("Object.kt")
    public void testObject() throws Exception {
        doTest("idea/testData/highlighter/Object.kt");
    }
    
    @TestMetadata("TypesAndAnnotations.kt")
    public void testTypesAndAnnotations() throws Exception {
        doTest("idea/testData/highlighter/TypesAndAnnotations.kt");
    }
    
    @TestMetadata("Variables.kt")
    public void testVariables() throws Exception {
        doTest("idea/testData/highlighter/Variables.kt");
    }
    
    @TestMetadata("VariablesAsFunctions.kt")
    public void testVariablesAsFunctions() throws Exception {
        doTest("idea/testData/highlighter/VariablesAsFunctions.kt");
    }
    
    @TestMetadata("idea/testData/highlighter/deprecated")
    public static class Deprecated extends AbstractHighlightingTest {
        public void testAllFilesPresentInDeprecated() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.TestsPackage", new File("idea/testData/highlighter/deprecated"), Pattern.compile("^(.+)\\.kt$"), true);
        }
        
        @TestMetadata("Class.kt")
        public void testClass() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Class.kt");
        }
        
        @TestMetadata("ClassObject.kt")
        public void testClassObject() throws Exception {
            doTest("idea/testData/highlighter/deprecated/ClassObject.kt");
        }
        
        @TestMetadata("Function.kt")
        public void testFunction() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Function.kt");
        }
        
        @TestMetadata("Get.kt")
        public void testGet() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Get.kt");
        }
        
        @TestMetadata("Getter.kt")
        public void testGetter() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Getter.kt");
        }
        
        @TestMetadata("Inc.kt")
        public void testInc() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Inc.kt");
        }
        
        @TestMetadata("Invalid.kt")
        public void testInvalid() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Invalid.kt");
        }
        
        @TestMetadata("Invoke.kt")
        public void testInvoke() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Invoke.kt");
        }
        
        @TestMetadata("Operation.kt")
        public void testOperation() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Operation.kt");
        }
        
        @TestMetadata("Property.kt")
        public void testProperty() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Property.kt");
        }
        
        @TestMetadata("RangeTo.kt")
        public void testRangeTo() throws Exception {
            doTest("idea/testData/highlighter/deprecated/RangeTo.kt");
        }
        
        @TestMetadata("Setter.kt")
        public void testSetter() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Setter.kt");
        }
        
        @TestMetadata("SuperCall.kt")
        public void testSuperCall() throws Exception {
            doTest("idea/testData/highlighter/deprecated/SuperCall.kt");
        }
        
        @TestMetadata("Trait.kt")
        public void testTrait() throws Exception {
            doTest("idea/testData/highlighter/deprecated/Trait.kt");
        }
        
    }
    
    public static Test suite() {
        TestSuite suite = new TestSuite("HighlightingTestGenerated");
        suite.addTestSuite(HighlightingTestGenerated.class);
        suite.addTestSuite(Deprecated.class);
        return suite;
    }
}
