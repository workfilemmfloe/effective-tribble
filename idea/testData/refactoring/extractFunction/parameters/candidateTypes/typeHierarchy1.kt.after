//PARAM_TYPES: C, AImpl, A
trait A {
    fun doA()
}

open class AImpl: A {
    override fun doA() {
        throw UnsupportedOperationException()
    }
}

trait B {
    fun doB()
}

class C: AImpl(), B {
    override fun doA() {
        throw UnsupportedOperationException()
    }

    override fun doB() {
        throw UnsupportedOperationException()
    }

    fun doC() {
        throw UnsupportedOperationException()
    }
}

// SIBLING:
fun foo(c: C) {
    unit(c)
    c.doB()
    c.doC()
}

fun unit(c: C) {
    c.doA()
}