// IntelliJ API Decompiler stub source generated from a class file
// Implementation of methods is not available

package kotlin

public final class Int private constructor() : kotlin.Number, kotlin.Comparable<kotlin.Int> {
    public companion object {
        public const final val MAX_VALUE: kotlin.Int /* compiled code */

        public const final val MIN_VALUE: kotlin.Int /* compiled code */
    }

    public final infix fun and(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun compareTo(other: kotlin.Byte): kotlin.Int { /* compiled code */ }

    public final operator fun compareTo(other: kotlin.Double): kotlin.Int { /* compiled code */ }

    public final operator fun compareTo(other: kotlin.Float): kotlin.Int { /* compiled code */ }

    public open operator fun compareTo(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun compareTo(other: kotlin.Long): kotlin.Int { /* compiled code */ }

    public final operator fun compareTo(other: kotlin.Short): kotlin.Int { /* compiled code */ }

    public final operator fun dec(): kotlin.Int { /* compiled code */ }

    public final operator fun div(other: kotlin.Byte): kotlin.Int { /* compiled code */ }

    public final operator fun div(other: kotlin.Double): kotlin.Double { /* compiled code */ }

    public final operator fun div(other: kotlin.Float): kotlin.Float { /* compiled code */ }

    public final operator fun div(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun div(other: kotlin.Long): kotlin.Long { /* compiled code */ }

    public final operator fun div(other: kotlin.Short): kotlin.Int { /* compiled code */ }

    public final operator fun inc(): kotlin.Int { /* compiled code */ }

    public final fun inv(): kotlin.Int { /* compiled code */ }

    public final operator fun minus(other: kotlin.Byte): kotlin.Int { /* compiled code */ }

    public final operator fun minus(other: kotlin.Double): kotlin.Double { /* compiled code */ }

    public final operator fun minus(other: kotlin.Float): kotlin.Float { /* compiled code */ }

    public final operator fun minus(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun minus(other: kotlin.Long): kotlin.Long { /* compiled code */ }

    public final operator fun minus(other: kotlin.Short): kotlin.Int { /* compiled code */ }

    public final operator fun mod(other: kotlin.Byte): kotlin.Int { /* compiled code */ }

    public final operator fun mod(other: kotlin.Double): kotlin.Double { /* compiled code */ }

    public final operator fun mod(other: kotlin.Float): kotlin.Float { /* compiled code */ }

    public final operator fun mod(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun mod(other: kotlin.Long): kotlin.Long { /* compiled code */ }

    public final operator fun mod(other: kotlin.Short): kotlin.Int { /* compiled code */ }

    public final infix fun or(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun plus(other: kotlin.Byte): kotlin.Int { /* compiled code */ }

    public final operator fun plus(other: kotlin.Double): kotlin.Double { /* compiled code */ }

    public final operator fun plus(other: kotlin.Float): kotlin.Float { /* compiled code */ }

    public final operator fun plus(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun plus(other: kotlin.Long): kotlin.Long { /* compiled code */ }

    public final operator fun plus(other: kotlin.Short): kotlin.Int { /* compiled code */ }

    public final operator fun rangeTo(other: kotlin.Byte): kotlin.IntRange { /* compiled code */ }

    public final operator fun rangeTo(other: kotlin.Int): kotlin.IntRange { /* compiled code */ }

    public final operator fun rangeTo(other: kotlin.Long): kotlin.LongRange { /* compiled code */ }

    public final operator fun rangeTo(other: kotlin.Short): kotlin.IntRange { /* compiled code */ }

    public final infix fun shl(bitCount: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final infix fun shr(bitCount: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun times(other: kotlin.Byte): kotlin.Int { /* compiled code */ }

    public final operator fun times(other: kotlin.Double): kotlin.Double { /* compiled code */ }

    public final operator fun times(other: kotlin.Float): kotlin.Float { /* compiled code */ }

    public final operator fun times(other: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final operator fun times(other: kotlin.Long): kotlin.Long { /* compiled code */ }

    public final operator fun times(other: kotlin.Short): kotlin.Int { /* compiled code */ }

    public open fun toByte(): kotlin.Byte { /* compiled code */ }

    public open fun toChar(): kotlin.Char { /* compiled code */ }

    public open fun toDouble(): kotlin.Double { /* compiled code */ }

    public open fun toFloat(): kotlin.Float { /* compiled code */ }

    public open fun toInt(): kotlin.Int { /* compiled code */ }

    public open fun toLong(): kotlin.Long { /* compiled code */ }

    public open fun toShort(): kotlin.Short { /* compiled code */ }

    public final operator fun unaryMinus(): kotlin.Int { /* compiled code */ }

    public final operator fun unaryPlus(): kotlin.Int { /* compiled code */ }

    public final infix fun ushr(bitCount: kotlin.Int): kotlin.Int { /* compiled code */ }

    public final infix fun xor(other: kotlin.Int): kotlin.Int { /* compiled code */ }
}
