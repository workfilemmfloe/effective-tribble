/*
 * Copyright 2010-2015 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.js.test.semantics;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.JetTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/reservedWords/cases")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class ReservedWordTestGenerated extends AbstractReservedWordTest {
    public void testAllFilesPresentInCases() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("js/js.translator/testData/reservedWords/cases"), Pattern.compile("^(.+)\\.kt$"), true);
    }

    @TestMetadata("dataClassParamArguments.kt")
    public void testDataClassParamArguments() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamArguments.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassParamFor.kt")
    public void testDataClassParamFor() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamFor.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassParamIf.kt")
    public void testDataClassParamIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamIf.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassParamNaN.kt")
    public void testDataClassParamNaN() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassParamNaN.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassValContinue.kt")
    public void testDataClassValContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValContinue.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassValDo.kt")
    public void testDataClassValDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValDo.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassValWith.kt")
    public void testDataClassValWith() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValWith.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassValYield.kt")
    public void testDataClassValYield() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassValYield.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassVarElse.kt")
    public void testDataClassVarElse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarElse.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassVarFalse.kt")
    public void testDataClassVarFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarFalse.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassVarInfinity.kt")
    public void testDataClassVarInfinity() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarInfinity.kt");
        doTest(fileName);
    }

    @TestMetadata("dataClassVarKotlin.kt")
    public void testDataClassVarKotlin() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/dataClassVarKotlin.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunDebugger.kt")
    public void testDelegatedFunDebugger() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunDebugger.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunDefault.kt")
    public void testDelegatedFunDefault() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunDefault.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunParamDelete.kt")
    public void testDelegatedFunParamDelete() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamDelete.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunParamEnum.kt")
    public void testDelegatedFunParamEnum() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamEnum.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunParamThis.kt")
    public void testDelegatedFunParamThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamThis.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunParamThrow.kt")
    public void testDelegatedFunParamThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunParamThrow.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunReturn.kt")
    public void testDelegatedFunReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunReturn.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedFunSuper.kt")
    public void testDelegatedFunSuper() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedFunSuper.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedLabelEval.kt")
    public void testDelegatedLabelEval() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelEval.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedLabelExport.kt")
    public void testDelegatedLabelExport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelExport.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedLabelTrue.kt")
    public void testDelegatedLabelTrue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelTrue.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedLabelTry.kt")
    public void testDelegatedLabelTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedLabelTry.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedValAwait.kt")
    public void testDelegatedValAwait() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValAwait.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedValCase.kt")
    public void testDelegatedValCase() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValCase.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedValIn.kt")
    public void testDelegatedValIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValIn.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedValInterface.kt")
    public void testDelegatedValInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedValInterface.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedVarCatch.kt")
    public void testDelegatedVarCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarCatch.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedVarConst.kt")
    public void testDelegatedVarConst() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarConst.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedVarNull.kt")
    public void testDelegatedVarNull() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarNull.kt");
        doTest(fileName);
    }

    @TestMetadata("delegatedVarPackage.kt")
    public void testDelegatedVarPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/delegatedVarPackage.kt");
        doTest(fileName);
    }

    @TestMetadata("enumEntryIn.kt")
    public void testEnumEntryIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryIn.kt");
        doTest(fileName);
    }

    @TestMetadata("enumEntryInterface.kt")
    public void testEnumEntryInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryInterface.kt");
        doTest(fileName);
    }

    @TestMetadata("enumEntryPublic.kt")
    public void testEnumEntryPublic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryPublic.kt");
        doTest(fileName);
    }

    @TestMetadata("enumEntryStatic.kt")
    public void testEnumEntryStatic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumEntryStatic.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunContinue.kt")
    public void testEnumFunContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunContinue.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunDo.kt")
    public void testEnumFunDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunDo.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunImport.kt")
    public void testEnumFunImport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunImport.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunInstanceof.kt")
    public void testEnumFunInstanceof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunInstanceof.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunParamElse.kt")
    public void testEnumFunParamElse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamElse.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunParamFalse.kt")
    public void testEnumFunParamFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamFalse.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunParamLet.kt")
    public void testEnumFunParamLet() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamLet.kt");
        doTest(fileName);
    }

    @TestMetadata("enumFunParamNew.kt")
    public void testEnumFunParamNew() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumFunParamNew.kt");
        doTest(fileName);
    }

    @TestMetadata("enumLabelFor.kt")
    public void testEnumLabelFor() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelFor.kt");
        doTest(fileName);
    }

    @TestMetadata("enumLabelIf.kt")
    public void testEnumLabelIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelIf.kt");
        doTest(fileName);
    }

    @TestMetadata("enumLabelPrivate.kt")
    public void testEnumLabelPrivate() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelPrivate.kt");
        doTest(fileName);
    }

    @TestMetadata("enumLabelProtected.kt")
    public void testEnumLabelProtected() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumLabelProtected.kt");
        doTest(fileName);
    }

    @TestMetadata("enumValExtends.kt")
    public void testEnumValExtends() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValExtends.kt");
        doTest(fileName);
    }

    @TestMetadata("enumValFinally.kt")
    public void testEnumValFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValFinally.kt");
        doTest(fileName);
    }

    @TestMetadata("enumValVar.kt")
    public void testEnumValVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValVar.kt");
        doTest(fileName);
    }

    @TestMetadata("enumValWhile.kt")
    public void testEnumValWhile() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumValWhile.kt");
        doTest(fileName);
    }

    @TestMetadata("enumVarBreak.kt")
    public void testEnumVarBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarBreak.kt");
        doTest(fileName);
    }

    @TestMetadata("enumVarClass.kt")
    public void testEnumVarClass() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarClass.kt");
        doTest(fileName);
    }

    @TestMetadata("enumVarFunction.kt")
    public void testEnumVarFunction() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarFunction.kt");
        doTest(fileName);
    }

    @TestMetadata("enumVarImplements.kt")
    public void testEnumVarImplements() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/enumVarImplements.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunAwait.kt")
    public void testInsideClassFunAwait() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunAwait.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunCase.kt")
    public void testInsideClassFunCase() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunCase.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunParamCatch.kt")
    public void testInsideClassFunParamCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamCatch.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunParamConst.kt")
    public void testInsideClassFunParamConst() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamConst.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunParamVar.kt")
    public void testInsideClassFunParamVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamVar.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunParamWhile.kt")
    public void testInsideClassFunParamWhile() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunParamWhile.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunTrue.kt")
    public void testInsideClassFunTrue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunTrue.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassFunTry.kt")
    public void testInsideClassFunTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassFunTry.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassLabelBreak.kt")
    public void testInsideClassLabelBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelBreak.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassLabelClass.kt")
    public void testInsideClassLabelClass() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelClass.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassLabelDebugger.kt")
    public void testInsideClassLabelDebugger() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelDebugger.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassLabelDefault.kt")
    public void testInsideClassLabelDefault() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassLabelDefault.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunExtends.kt")
    public void testInsideClassObjectFunExtends() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunExtends.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunFinally.kt")
    public void testInsideClassObjectFunFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunFinally.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunFor.kt")
    public void testInsideClassObjectFunFor() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunFor.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunIf.kt")
    public void testInsideClassObjectFunIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunIf.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunParamFunction.kt")
    public void testInsideClassObjectFunParamFunction() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamFunction.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunParamImplements.kt")
    public void testInsideClassObjectFunParamImplements() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamImplements.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunParamIn.kt")
    public void testInsideClassObjectFunParamIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamIn.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectFunParamInterface.kt")
    public void testInsideClassObjectFunParamInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectFunParamInterface.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectLabelImport.kt")
    public void testInsideClassObjectLabelImport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelImport.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectLabelInstanceof.kt")
    public void testInsideClassObjectLabelInstanceof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelInstanceof.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectLabelNull.kt")
    public void testInsideClassObjectLabelNull() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelNull.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectLabelPackage.kt")
    public void testInsideClassObjectLabelPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectLabelPackage.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectValContinue.kt")
    public void testInsideClassObjectValContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValContinue.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectValDelete.kt")
    public void testInsideClassObjectValDelete() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValDelete.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectValDo.kt")
    public void testInsideClassObjectValDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValDo.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectValEnum.kt")
    public void testInsideClassObjectValEnum() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectValEnum.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectVarElse.kt")
    public void testInsideClassObjectVarElse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarElse.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectVarEval.kt")
    public void testInsideClassObjectVarEval() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarEval.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectVarExport.kt")
    public void testInsideClassObjectVarExport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarExport.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassObjectVarFalse.kt")
    public void testInsideClassObjectVarFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassObjectVarFalse.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassValInfinity.kt")
    public void testInsideClassValInfinity() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValInfinity.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassValKotlin.kt")
    public void testInsideClassValKotlin() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValKotlin.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassValReturn.kt")
    public void testInsideClassValReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValReturn.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassValSuper.kt")
    public void testInsideClassValSuper() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassValSuper.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassVarArguments.kt")
    public void testInsideClassVarArguments() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarArguments.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassVarNaN.kt")
    public void testInsideClassVarNaN() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarNaN.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassVarThis.kt")
    public void testInsideClassVarThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarThis.kt");
        doTest(fileName);
    }

    @TestMetadata("insideClassVarThrow.kt")
    public void testInsideClassVarThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideClassVarThrow.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunParamSwitch.kt")
    public void testInsideObjectFunParamSwitch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamSwitch.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunParamTypeof.kt")
    public void testInsideObjectFunParamTypeof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamTypeof.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunParamVar.kt")
    public void testInsideObjectFunParamVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamVar.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunParamWhile.kt")
    public void testInsideObjectFunParamWhile() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunParamWhile.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunPublic.kt")
    public void testInsideObjectFunPublic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunPublic.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunStatic.kt")
    public void testInsideObjectFunStatic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunStatic.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunTrue.kt")
    public void testInsideObjectFunTrue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunTrue.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectFunTry.kt")
    public void testInsideObjectFunTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectFunTry.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectLabelBreak.kt")
    public void testInsideObjectLabelBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelBreak.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectLabelClass.kt")
    public void testInsideObjectLabelClass() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelClass.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectLabelUndefined.kt")
    public void testInsideObjectLabelUndefined() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelUndefined.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectLabelVoid.kt")
    public void testInsideObjectLabelVoid() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectLabelVoid.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectValLet.kt")
    public void testInsideObjectValLet() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValLet.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectValNew.kt")
    public void testInsideObjectValNew() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValNew.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectValReturn.kt")
    public void testInsideObjectValReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValReturn.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectValSuper.kt")
    public void testInsideObjectValSuper() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectValSuper.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectVarPrivate.kt")
    public void testInsideObjectVarPrivate() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarPrivate.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectVarProtected.kt")
    public void testInsideObjectVarProtected() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarProtected.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectVarThis.kt")
    public void testInsideObjectVarThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarThis.kt");
        doTest(fileName);
    }

    @TestMetadata("insideObjectVarThrow.kt")
    public void testInsideObjectVarThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/insideObjectVarThrow.kt");
        doTest(fileName);
    }

    @TestMetadata("localCatchNull.kt")
    public void testLocalCatchNull() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchNull.kt");
        doTest(fileName);
    }

    @TestMetadata("localCatchPackage.kt")
    public void testLocalCatchPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchPackage.kt");
        doTest(fileName);
    }

    @TestMetadata("localCatchWith.kt")
    public void testLocalCatchWith() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchWith.kt");
        doTest(fileName);
    }

    @TestMetadata("localCatchYield.kt")
    public void testLocalCatchYield() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localCatchYield.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunElse.kt")
    public void testLocalFunElse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunElse.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunFalse.kt")
    public void testLocalFunFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunFalse.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunParamFor.kt")
    public void testLocalFunParamFor() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamFor.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunParamIf.kt")
    public void testLocalFunParamIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamIf.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunParamSwitch.kt")
    public void testLocalFunParamSwitch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamSwitch.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunParamTypeof.kt")
    public void testLocalFunParamTypeof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunParamTypeof.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunPublic.kt")
    public void testLocalFunPublic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunPublic.kt");
        doTest(fileName);
    }

    @TestMetadata("localFunStatic.kt")
    public void testLocalFunStatic() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localFunStatic.kt");
        doTest(fileName);
    }

    @TestMetadata("localLabelIn.kt")
    public void testLocalLabelIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelIn.kt");
        doTest(fileName);
    }

    @TestMetadata("localLabelInterface.kt")
    public void testLocalLabelInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelInterface.kt");
        doTest(fileName);
    }

    @TestMetadata("localLabelUndefined.kt")
    public void testLocalLabelUndefined() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelUndefined.kt");
        doTest(fileName);
    }

    @TestMetadata("localLabelVoid.kt")
    public void testLocalLabelVoid() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localLabelVoid.kt");
        doTest(fileName);
    }

    @TestMetadata("localValBreak.kt")
    public void testLocalValBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValBreak.kt");
        doTest(fileName);
    }

    @TestMetadata("localValClass.kt")
    public void testLocalValClass() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValClass.kt");
        doTest(fileName);
    }

    @TestMetadata("localValLet.kt")
    public void testLocalValLet() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValLet.kt");
        doTest(fileName);
    }

    @TestMetadata("localValNew.kt")
    public void testLocalValNew() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localValNew.kt");
        doTest(fileName);
    }

    @TestMetadata("localVarContinue.kt")
    public void testLocalVarContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarContinue.kt");
        doTest(fileName);
    }

    @TestMetadata("localVarDo.kt")
    public void testLocalVarDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarDo.kt");
        doTest(fileName);
    }

    @TestMetadata("localVarPrivate.kt")
    public void testLocalVarPrivate() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarPrivate.kt");
        doTest(fileName);
    }

    @TestMetadata("localVarProtected.kt")
    public void testLocalVarProtected() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/localVarProtected.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelClassDelete.kt")
    public void testToplevelClassDelete() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassDelete.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelClassEnum.kt")
    public void testToplevelClassEnum() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassEnum.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelClassNull.kt")
    public void testToplevelClassNull() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassNull.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelClassPackage.kt")
    public void testToplevelClassPackage() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelClassPackage.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelEnumFunction.kt")
    public void testToplevelEnumFunction() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumFunction.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelEnumImplements.kt")
    public void testToplevelEnumImplements() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumImplements.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelEnumTrue.kt")
    public void testToplevelEnumTrue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumTrue.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelEnumTry.kt")
    public void testToplevelEnumTry() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelEnumTry.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunAwait.kt")
    public void testToplevelFunAwait() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunAwait.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunCase.kt")
    public void testToplevelFunCase() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunCase.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunElse.kt")
    public void testToplevelFunElse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunElse.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunFalse.kt")
    public void testToplevelFunFalse() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunFalse.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunParamCatch.kt")
    public void testToplevelFunParamCatch() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamCatch.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunParamConst.kt")
    public void testToplevelFunParamConst() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamConst.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunParamFor.kt")
    public void testToplevelFunParamFor() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamFor.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelFunParamIf.kt")
    public void testToplevelFunParamIf() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelFunParamIf.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelInterfaceExtends.kt")
    public void testToplevelInterfaceExtends() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelInterfaceExtends.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelInterfaceFinally.kt")
    public void testToplevelInterfaceFinally() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelInterfaceFinally.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelInterfaceThis.kt")
    public void testToplevelInterfaceThis() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelInterfaceThis.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelInterfaceThrow.kt")
    public void testToplevelInterfaceThrow() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelInterfaceThrow.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelLabelDebugger.kt")
    public void testToplevelLabelDebugger() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelDebugger.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelLabelDefault.kt")
    public void testToplevelLabelDefault() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelDefault.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelLabelIn.kt")
    public void testToplevelLabelIn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelIn.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelLabelInterface.kt")
    public void testToplevelLabelInterface() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelLabelInterface.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelObjectImport.kt")
    public void testToplevelObjectImport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectImport.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelObjectInstanceof.kt")
    public void testToplevelObjectInstanceof() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectInstanceof.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelObjectVar.kt")
    public void testToplevelObjectVar() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectVar.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelObjectWhile.kt")
    public void testToplevelObjectWhile() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelObjectWhile.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelTraitEval.kt")
    public void testToplevelTraitEval() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitEval.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelTraitExport.kt")
    public void testToplevelTraitExport() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitExport.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelTraitReturn.kt")
    public void testToplevelTraitReturn() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitReturn.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelTraitSuper.kt")
    public void testToplevelTraitSuper() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelTraitSuper.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelValBreak.kt")
    public void testToplevelValBreak() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValBreak.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelValClass.kt")
    public void testToplevelValClass() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValClass.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelValInfinity.kt")
    public void testToplevelValInfinity() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValInfinity.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelValKotlin.kt")
    public void testToplevelValKotlin() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelValKotlin.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelVarArguments.kt")
    public void testToplevelVarArguments() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarArguments.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelVarContinue.kt")
    public void testToplevelVarContinue() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarContinue.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelVarDo.kt")
    public void testToplevelVarDo() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarDo.kt");
        doTest(fileName);
    }

    @TestMetadata("toplevelVarNaN.kt")
    public void testToplevelVarNaN() throws Exception {
        String fileName = JetTestUtils.navigationMetadata("js/js.translator/testData/reservedWords/cases/toplevelVarNaN.kt");
        doTest(fileName);
    }
}
